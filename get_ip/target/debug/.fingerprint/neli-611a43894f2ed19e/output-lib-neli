{"message":"cannot find value `CTRL_CMD_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":165559,"byte_end":165588,"line_start":4578,"line_end":4578,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const CTL_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `CTL_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":644,"byte_end":659,"line_start":29,"line_end":29,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Unspec = libc::CTRL_CMD_UNSPEC as u8,","highlight_start":20,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":644,"byte_end":659,"line_start":29,"line_end":29,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Unspec = libc::CTRL_CMD_UNSPEC as u8,","highlight_start":20,"highlight_end":35}],"label":null,"suggested_replacement":"CTL_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:29:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::CTRL_CMD_UNSPEC as u8,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `CTL_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4578:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CTL_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `CTL_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_NEWFAMILY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":689,"byte_end":707,"line_start":30,"line_end":30,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    Newfamily = libc::CTRL_CMD_NEWFAMILY as u8,","highlight_start":23,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_NEWFAMILY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:30:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newfamily = libc::CTRL_CMD_NEWFAMILY as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_DELFAMILY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":737,"byte_end":755,"line_start":31,"line_end":31,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    Delfamily = libc::CTRL_CMD_DELFAMILY as u8,","highlight_start":23,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_DELFAMILY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:31:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delfamily = libc::CTRL_CMD_DELFAMILY as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_GETFAMILY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":785,"byte_end":803,"line_start":32,"line_end":32,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    Getfamily = libc::CTRL_CMD_GETFAMILY as u8,","highlight_start":23,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_GETFAMILY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:32:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getfamily = libc::CTRL_CMD_GETFAMILY as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_NEWOPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":830,"byte_end":845,"line_start":33,"line_end":33,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Newops = libc::CTRL_CMD_NEWOPS as u8,","highlight_start":20,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_NEWOPS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:33:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newops = libc::CTRL_CMD_NEWOPS as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_DELOPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":872,"byte_end":887,"line_start":34,"line_end":34,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Delops = libc::CTRL_CMD_DELOPS as u8,","highlight_start":20,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_DELOPS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:34:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delops = libc::CTRL_CMD_DELOPS as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_GETOPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":914,"byte_end":929,"line_start":35,"line_end":35,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Getops = libc::CTRL_CMD_GETOPS as u8,","highlight_start":20,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_GETOPS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:35:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getops = libc::CTRL_CMD_GETOPS as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_NEWMCAST_GRP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":961,"byte_end":982,"line_start":36,"line_end":36,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"    NewmcastGrp = libc::CTRL_CMD_NEWMCAST_GRP as u8,","highlight_start":25,"highlight_end":46}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_NEWMCAST_GRP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:36:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NewmcastGrp = libc::CTRL_CMD_NEWMCAST_GRP as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_DELMCAST_GRP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1014,"byte_end":1035,"line_start":37,"line_end":37,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"    DelmcastGrp = libc::CTRL_CMD_DELMCAST_GRP as u8,","highlight_start":25,"highlight_end":46}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_DELMCAST_GRP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:37:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DelmcastGrp = libc::CTRL_CMD_DELMCAST_GRP as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_CMD_GETMCAST_GRP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1067,"byte_end":1088,"line_start":38,"line_end":38,"column_start":25,"column_end":46,"is_primary":true,"text":[{"text":"    GetmcastGrp = libc::CTRL_CMD_GETMCAST_GRP as u8,","highlight_start":25,"highlight_end":46}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_CMD_GETMCAST_GRP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:38:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GetmcastGrp = libc::CTRL_CMD_GETMCAST_GRP as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1601,"byte_end":1617,"line_start":59,"line_end":59,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"    Unspec = libc::CTRL_ATTR_UNSPEC as u16,","highlight_start":20,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:59:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::CTRL_ATTR_UNSPEC as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_FAMILY_ID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1647,"byte_end":1666,"line_start":60,"line_end":60,"column_start":22,"column_end":41,"is_primary":true,"text":[{"text":"    FamilyId = libc::CTRL_ATTR_FAMILY_ID as u16,","highlight_start":22,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_FAMILY_ID` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:60:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FamilyId = libc::CTRL_ATTR_FAMILY_ID as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_FAMILY_NAME` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1698,"byte_end":1719,"line_start":61,"line_end":61,"column_start":24,"column_end":45,"is_primary":true,"text":[{"text":"    FamilyName = libc::CTRL_ATTR_FAMILY_NAME as u16,","highlight_start":24,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_FAMILY_NAME` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:61:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FamilyName = libc::CTRL_ATTR_FAMILY_NAME as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_VERSION` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1748,"byte_end":1765,"line_start":62,"line_end":62,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"    Version = libc::CTRL_ATTR_VERSION as u16,","highlight_start":21,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_VERSION` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:62:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Version = libc::CTRL_ATTR_VERSION as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_HDRSIZE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1794,"byte_end":1811,"line_start":63,"line_end":63,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"    Hdrsize = libc::CTRL_ATTR_HDRSIZE as u16,","highlight_start":21,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_HDRSIZE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:63:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Hdrsize = libc::CTRL_ATTR_HDRSIZE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_MAXATTR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1840,"byte_end":1857,"line_start":64,"line_end":64,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"    Maxattr = libc::CTRL_ATTR_MAXATTR as u16,","highlight_start":21,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_MAXATTR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:64:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Maxattr = libc::CTRL_ATTR_MAXATTR as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_OPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1882,"byte_end":1895,"line_start":65,"line_end":65,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    Ops = libc::CTRL_ATTR_OPS as u16,","highlight_start":17,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_OPS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:65:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ops = libc::CTRL_ATTR_OPS as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_MCAST_GROUPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":1928,"byte_end":1950,"line_start":66,"line_end":66,"column_start":25,"column_end":47,"is_primary":true,"text":[{"text":"    McastGroups = libc::CTRL_ATTR_MCAST_GROUPS as u16,","highlight_start":25,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_MCAST_GROUPS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:66:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    McastGroups = libc::CTRL_ATTR_MCAST_GROUPS as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_MCAST_GRP_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":2108,"byte_end":2134,"line_start":72,"line_end":72,"column_start":20,"column_end":46,"is_primary":true,"text":[{"text":"    Unspec = libc::CTRL_ATTR_MCAST_GRP_UNSPEC as u16,","highlight_start":20,"highlight_end":46}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_MCAST_GRP_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:72:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::CTRL_ATTR_MCAST_GRP_UNSPEC as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_MCAST_GRP_NAME` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":2160,"byte_end":2184,"line_start":73,"line_end":73,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"    Name = libc::CTRL_ATTR_MCAST_GRP_NAME as u16,","highlight_start":18,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_MCAST_GRP_NAME` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:73:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Name = libc::CTRL_ATTR_MCAST_GRP_NAME as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `CTRL_ATTR_MCAST_GRP_ID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs","byte_start":2208,"byte_end":2230,"line_start":74,"line_end":74,"column_start":16,"column_end":38,"is_primary":true,"text":[{"text":"    Id = libc::CTRL_ATTR_MCAST_GRP_ID as u16,","highlight_start":16,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `CTRL_ATTR_MCAST_GRP_ID` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/genl.rs:74:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Id = libc::CTRL_ATTR_MCAST_GRP_ID as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_PACKET_HDR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":430,"byte_end":446,"line_start":15,"line_end":15,"column_start":23,"column_end":39,"is_primary":true,"text":[{"text":"    PacketHdr = libc::NFULA_PACKET_HDR as u16,","highlight_start":23,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_PACKET_HDR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:15:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PacketHdr = libc::NFULA_PACKET_HDR as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_MARK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":472,"byte_end":482,"line_start":16,"line_end":16,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Mark = libc::NFULA_MARK as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_MARK` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:16:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Mark = libc::NFULA_MARK as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_TIMESTAMP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":151015,"byte_end":151047,"line_start":4214,"line_end":4214,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const SCM_TIMESTAMP: ::c_int = 0x02;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `SCM_TIMESTAMP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":513,"byte_end":528,"line_start":17,"line_end":17,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Timestamp = libc::NFULA_TIMESTAMP as u16,","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":513,"byte_end":528,"line_start":17,"line_end":17,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Timestamp = libc::NFULA_TIMESTAMP as u16,","highlight_start":23,"highlight_end":38}],"label":null,"suggested_replacement":"SCM_TIMESTAMP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_TIMESTAMP` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:17:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timestamp = libc::NFULA_TIMESTAMP as u16,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `SCM_TIMESTAMP`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4214:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SCM_TIMESTAMP: ::c_int = 0x02;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `SCM_TIMESTAMP` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_IFINDEX_INDEV` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":562,"byte_end":581,"line_start":18,"line_end":18,"column_start":26,"column_end":45,"is_primary":true,"text":[{"text":"    IfindexIndev = libc::NFULA_IFINDEX_INDEV as u16,","highlight_start":26,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_IFINDEX_INDEV` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:18:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IfindexIndev = libc::NFULA_IFINDEX_INDEV as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_IFINDEX_OUTDEV` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":616,"byte_end":636,"line_start":19,"line_end":19,"column_start":27,"column_end":47,"is_primary":true,"text":[{"text":"    IfindexOutdev = libc::NFULA_IFINDEX_OUTDEV as u16,","highlight_start":27,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_IFINDEX_OUTDEV` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:19:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IfindexOutdev = libc::NFULA_IFINDEX_OUTDEV as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_IFINDEX_PHYSINDEV` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":673,"byte_end":696,"line_start":20,"line_end":20,"column_start":29,"column_end":52,"is_primary":true,"text":[{"text":"    IfindexPhyindev = libc::NFULA_IFINDEX_PHYSINDEV as u16,","highlight_start":29,"highlight_end":52}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_IFINDEX_PHYSINDEV` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:20:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IfindexPhyindev = libc::NFULA_IFINDEX_PHYSINDEV as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_IFINDEX_PHYSOUTDEV` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":734,"byte_end":758,"line_start":21,"line_end":21,"column_start":30,"column_end":54,"is_primary":true,"text":[{"text":"    IfindexPhyoutdev = libc::NFULA_IFINDEX_PHYSOUTDEV as u16,","highlight_start":30,"highlight_end":54}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_IFINDEX_PHYSOUTDEV` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:21:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IfindexPhyoutdev = libc::NFULA_IFINDEX_PHYSOUTDEV as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_HWADDR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":786,"byte_end":798,"line_start":22,"line_end":22,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Hwaddr = libc::NFULA_HWADDR as u16,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_HWADDR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:22:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Hwaddr = libc::NFULA_HWADDR as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_PAYLOAD` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":827,"byte_end":840,"line_start":23,"line_end":23,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    Payload = libc::NFULA_PAYLOAD as u16,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_PAYLOAD` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:23:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Payload = libc::NFULA_PAYLOAD as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_PREFIX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":868,"byte_end":880,"line_start":24,"line_end":24,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Prefix = libc::NFULA_PREFIX as u16,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_PREFIX` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:24:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Prefix = libc::NFULA_PREFIX as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_UID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":905,"byte_end":914,"line_start":25,"line_end":25,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    Uid = libc::NFULA_UID as u16,","highlight_start":17,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_UID` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:25:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Uid = libc::NFULA_UID as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_SEQ` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":939,"byte_end":948,"line_start":26,"line_end":26,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    Seq = libc::NFULA_SEQ as u16,","highlight_start":17,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_SEQ` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:26:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Seq = libc::NFULA_SEQ as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_SEQ_GLOBAL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":979,"byte_end":995,"line_start":27,"line_end":27,"column_start":23,"column_end":39,"is_primary":true,"text":[{"text":"    SeqGlobal = libc::NFULA_SEQ_GLOBAL as u16,","highlight_start":23,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_SEQ_GLOBAL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:27:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SeqGlobal = libc::NFULA_SEQ_GLOBAL as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_GID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1020,"byte_end":1029,"line_start":28,"line_end":28,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    Gid = libc::NFULA_GID as u16,","highlight_start":17,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_GID` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:28:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Gid = libc::NFULA_GID as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_HWTYPE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1057,"byte_end":1069,"line_start":29,"line_end":29,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Hwtype = libc::NFULA_HWTYPE as u16,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_HWTYPE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:29:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Hwtype = libc::NFULA_HWTYPE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_HWHEADER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1099,"byte_end":1113,"line_start":30,"line_end":30,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    Hwheader = libc::NFULA_HWHEADER as u16,","highlight_start":22,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_HWHEADER` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:30:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Hwheader = libc::NFULA_HWHEADER as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_HWLEN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1140,"byte_end":1151,"line_start":31,"line_end":31,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    Hwlen = libc::NFULA_HWLEN as u16,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_HWLEN` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:31:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Hwlen = libc::NFULA_HWLEN as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1175,"byte_end":1183,"line_start":32,"line_end":32,"column_start":16,"column_end":24,"is_primary":true,"text":[{"text":"    Ct = libc::NFULA_CT as u16,","highlight_start":16,"highlight_end":24}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:32:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ct = libc::NFULA_CT as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CT_INFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1211,"byte_end":1224,"line_start":33,"line_end":33,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    CtInfo = libc::NFULA_CT_INFO as u16,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CT_INFO` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:33:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CtInfo = libc::NFULA_CT_INFO as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_CMD` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1362,"byte_end":1375,"line_start":39,"line_end":39,"column_start":17,"column_end":30,"is_primary":true,"text":[{"text":"    Cmd = libc::NFULA_CFG_CMD as u16,","highlight_start":17,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_CMD` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:39:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cmd = libc::NFULA_CFG_CMD as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_MODE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1401,"byte_end":1415,"line_start":40,"line_end":40,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    Mode = libc::NFULA_CFG_MODE as u16,","highlight_start":18,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_MODE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:40:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Mode = libc::NFULA_CFG_MODE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_NLBUFSIZ` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1446,"byte_end":1464,"line_start":41,"line_end":41,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    NlBufSize = libc::NFULA_CFG_NLBUFSIZ as u16,","highlight_start":23,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_NLBUFSIZ` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:41:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NlBufSize = libc::NFULA_CFG_NLBUFSIZ as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_TIMEOUT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1493,"byte_end":1510,"line_start":42,"line_end":42,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"    Timeout = libc::NFULA_CFG_TIMEOUT as u16,","highlight_start":21,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_TIMEOUT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:42:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Timeout = libc::NFULA_CFG_TIMEOUT as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_QTHRESH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1539,"byte_end":1556,"line_start":43,"line_end":43,"column_start":21,"column_end":38,"is_primary":true,"text":[{"text":"    QThresh = libc::NFULA_CFG_QTHRESH as u16,","highlight_start":21,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_QTHRESH` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:43:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    QThresh = libc::NFULA_CFG_QTHRESH as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULA_CFG_FLAGS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":1583,"byte_end":1598,"line_start":44,"line_end":44,"column_start":19,"column_end":34,"is_primary":true,"text":[{"text":"    Flags = libc::NFULA_CFG_FLAGS as u16,","highlight_start":19,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULA_CFG_FLAGS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:44:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Flags = libc::NFULA_CFG_FLAGS as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFNL_SUBSYS_ULOG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2052,"byte_end":2068,"line_start":59,"line_end":59,"column_start":37,"column_end":53,"is_primary":true,"text":[{"text":"    LogPacket = nfnl_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_PACKET as u8),","highlight_start":37,"highlight_end":53}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFNL_SUBSYS_ULOG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:59:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_PACKET as u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_MSG_PACKET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2082,"byte_end":2099,"line_start":59,"line_end":59,"column_start":67,"column_end":84,"is_primary":true,"text":[{"text":"    LogPacket = nfnl_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_PACKET as u8),","highlight_start":67,"highlight_end":84}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_MSG_PACKET` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:59:67\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mOG as u8, libc::NFULNL_MSG_PACKET as u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFNL_SUBSYS_ULOG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2236,"byte_end":2252,"line_start":61,"line_end":61,"column_start":37,"column_end":53,"is_primary":true,"text":[{"text":"    LogConfig = nfnl_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_CONFIG as u8),","highlight_start":37,"highlight_end":53}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFNL_SUBSYS_ULOG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:61:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_CONFIG as u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_MSG_CONFIG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2266,"byte_end":2283,"line_start":61,"line_end":61,"column_start":67,"column_end":84,"is_primary":true,"text":[{"text":"    LogConfig = nfnl_msg_type(libc::NFNL_SUBSYS_ULOG as u8, libc::NFULNL_MSG_CONFIG as u8),","highlight_start":67,"highlight_end":84}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_MSG_CONFIG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:61:67\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mOG as u8, libc::NFULNL_MSG_CONFIG as u8),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_CFG_CMD_BIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2640,"byte_end":2659,"line_start":76,"line_end":76,"column_start":18,"column_end":37,"is_primary":true,"text":[{"text":"    Bind = libc::NFULNL_CFG_CMD_BIND as u8,","highlight_start":18,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_CFG_CMD_BIND` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:76:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Bind = libc::NFULNL_CFG_CMD_BIND as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_CFG_CMD_UNBIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2686,"byte_end":2707,"line_start":77,"line_end":77,"column_start":20,"column_end":41,"is_primary":true,"text":[{"text":"    Unbind = libc::NFULNL_CFG_CMD_UNBIND as u8,","highlight_start":20,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_CFG_CMD_UNBIND` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:77:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unbind = libc::NFULNL_CFG_CMD_UNBIND as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_CFG_CMD_PF_BIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2734,"byte_end":2756,"line_start":78,"line_end":78,"column_start":20,"column_end":42,"is_primary":true,"text":[{"text":"    PfBind = libc::NFULNL_CFG_CMD_PF_BIND as u8,","highlight_start":20,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_CFG_CMD_PF_BIND` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:78:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PfBind = libc::NFULNL_CFG_CMD_PF_BIND as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_CFG_CMD_PF_UNBIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2785,"byte_end":2809,"line_start":79,"line_end":79,"column_start":22,"column_end":46,"is_primary":true,"text":[{"text":"    PfUnbind = libc::NFULNL_CFG_CMD_PF_UNBIND as u8,","highlight_start":22,"highlight_end":46}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_CFG_CMD_PF_UNBIND` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:79:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PfUnbind = libc::NFULNL_CFG_CMD_PF_UNBIND as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_COPY_NONE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2934,"byte_end":2950,"line_start":85,"line_end":85,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    None = libc::NFULNL_COPY_NONE as u8,","highlight_start":18,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_COPY_NONE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:85:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    None = libc::NFULNL_COPY_NONE as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_COPY_META` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":2975,"byte_end":2991,"line_start":86,"line_end":86,"column_start":18,"column_end":34,"is_primary":true,"text":[{"text":"    Meta = libc::NFULNL_COPY_META as u8,","highlight_start":18,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_COPY_META` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:86:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Meta = libc::NFULNL_COPY_META as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NFULNL_COPY_PACKET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs","byte_start":3018,"byte_end":3036,"line_start":87,"line_end":87,"column_start":20,"column_end":38,"is_primary":true,"text":[{"text":"    Packet = libc::NFULNL_COPY_PACKET as u8,","highlight_start":20,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NFULNL_COPY_PACKET` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/netfilter.rs:87:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Packet = libc::NFULNL_COPY_PACKET as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLMSG_NOOP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":587,"byte_end":597,"line_start":25,"line_end":25,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Noop = libc::NLMSG_NOOP as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLMSG_NOOP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:25:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Noop = libc::NLMSG_NOOP as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLMSG_ERROR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":624,"byte_end":635,"line_start":26,"line_end":26,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    Error = libc::NLMSG_ERROR as u16,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLMSG_ERROR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:26:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Error = libc::NLMSG_ERROR as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLMSG_DONE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":661,"byte_end":671,"line_start":27,"line_end":27,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Done = libc::NLMSG_DONE as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLMSG_DONE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:27:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Done = libc::NLMSG_DONE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLMSG_OVERRUN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":700,"byte_end":713,"line_start":28,"line_end":28,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    Overrun = libc::NLMSG_OVERRUN as u16,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLMSG_OVERRUN` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:28:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Overrun = libc::NLMSG_OVERRUN as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `GENL_ID_CTRL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":860,"byte_end":872,"line_start":34,"line_end":34,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    Ctrl = libc::GENL_ID_CTRL as u16,","highlight_start":18,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `GENL_ID_CTRL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:34:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ctrl = libc::GENL_ID_CTRL as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_REQUEST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1228,"byte_end":1241,"line_start":45,"line_end":45,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    Request = libc::NLM_F_REQUEST as u16,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_REQUEST` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:45:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Request = libc::NLM_F_REQUEST as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_MULTI` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1268,"byte_end":1279,"line_start":46,"line_end":46,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    Multi = libc::NLM_F_MULTI as u16,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_MULTI` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:46:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Multi = libc::NLM_F_MULTI as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_ACK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1304,"byte_end":1313,"line_start":47,"line_end":47,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"    Ack = libc::NLM_F_ACK as u16,","highlight_start":17,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_ACK` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:47:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ack = libc::NLM_F_ACK as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_ECHO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1339,"byte_end":1349,"line_start":48,"line_end":48,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Echo = libc::NLM_F_ECHO as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_ECHO` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:48:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Echo = libc::NLM_F_ECHO as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_DUMP_INTR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1379,"byte_end":1394,"line_start":49,"line_end":49,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    DumpIntr = libc::NLM_F_DUMP_INTR as u16,","highlight_start":22,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_DUMP_INTR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:49:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DumpIntr = libc::NLM_F_DUMP_INTR as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_DUMP_FILTERED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1428,"byte_end":1447,"line_start":50,"line_end":50,"column_start":26,"column_end":45,"is_primary":true,"text":[{"text":"    DumpFiltered = libc::NLM_F_DUMP_FILTERED as u16,","highlight_start":26,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_DUMP_FILTERED` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:50:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    DumpFiltered = libc::NLM_F_DUMP_FILTERED as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_ROOT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1473,"byte_end":1483,"line_start":51,"line_end":51,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Root = libc::NLM_F_ROOT as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_ROOT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:51:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Root = libc::NLM_F_ROOT as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_MATCH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1510,"byte_end":1521,"line_start":52,"line_end":52,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    Match = libc::NLM_F_MATCH as u16,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_MATCH` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:52:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Match = libc::NLM_F_MATCH as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_ATOMIC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1549,"byte_end":1561,"line_start":53,"line_end":53,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Atomic = libc::NLM_F_ATOMIC as u16,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_ATOMIC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:53:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Atomic = libc::NLM_F_ATOMIC as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_DUMP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1587,"byte_end":1597,"line_start":54,"line_end":54,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Dump = libc::NLM_F_DUMP as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_DUMP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:54:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dump = libc::NLM_F_DUMP as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_REPLACE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1626,"byte_end":1639,"line_start":55,"line_end":55,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    Replace = libc::NLM_F_REPLACE as u16,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_REPLACE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:55:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Replace = libc::NLM_F_REPLACE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_EXCL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1665,"byte_end":1675,"line_start":56,"line_end":56,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"    Excl = libc::NLM_F_EXCL as u16,","highlight_start":18,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_EXCL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:56:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Excl = libc::NLM_F_EXCL as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_CREATE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1703,"byte_end":1715,"line_start":57,"line_end":57,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Create = libc::NLM_F_CREATE as u16,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_CREATE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:57:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Create = libc::NLM_F_CREATE as u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLM_F_APPEND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":133736,"byte_end":133766,"line_start":3706,"line_end":3706,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const GLOB_APPEND: ::c_int = 0x0001;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `GLOB_APPEND` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1743,"byte_end":1755,"line_start":58,"line_end":58,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Append = libc::NLM_F_APPEND as u16,","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs","byte_start":1743,"byte_end":1755,"line_start":58,"line_end":58,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Append = libc::NLM_F_APPEND as u16,","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":"GLOB_APPEND","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLM_F_APPEND` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/nl.rs:58:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Append = libc::NLM_F_APPEND as u16,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `GLOB_APPEND`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:3706:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const GLOB_APPEND: ::c_int = 0x0001;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `GLOB_APPEND` defined here\u001b[0m\n\n"}
{"message":"cannot find value `AF_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":144489,"byte_end":144517,"line_start":4035,"line_end":4035,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const AF_HYLINK: ::c_int = 15;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `AF_HYLINK` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":535,"byte_end":545,"line_start":20,"line_end":20,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"    Netlink = libc::AF_NETLINK as u8,","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":535,"byte_end":545,"line_start":20,"line_end":20,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"    Netlink = libc::AF_NETLINK as u8,","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":"AF_HYLINK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:20:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Netlink = libc::AF_NETLINK as u8,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_HYLINK`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4035:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_HYLINK: ::c_int = 15;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_HYLINK` defined here\u001b[0m\n\n"}
{"message":"cannot find value `AF_X25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":569,"byte_end":575,"line_start":21,"line_end":21,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    X25 = libc::AF_X25 as u8,","highlight_start":17,"highlight_end":23}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_X25` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:21:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    X25 = libc::AF_X25 as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_AX25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":600,"byte_end":607,"line_start":22,"line_end":22,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    Ax25 = libc::AF_AX25 as u8,","highlight_start":18,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_AX25` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:22:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ax25 = libc::AF_AX25 as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_ATMPVC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":634,"byte_end":643,"line_start":23,"line_end":23,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"    Atmpvc = libc::AF_ATMPVC as u8,","highlight_start":20,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ATMPVC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:23:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Atmpvc = libc::AF_ATMPVC as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_PACKET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":712,"byte_end":721,"line_start":25,"line_end":25,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"    Packet = libc::AF_PACKET as u8,","highlight_start":20,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_PACKET` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:25:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Packet = libc::AF_PACKET as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_ALG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":144425,"byte_end":144450,"line_start":4033,"line_end":4033,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub const AF_DLI: ::c_int = 13;","highlight_start":1,"highlight_end":26}],"label":"similarly named constant `AF_DLI` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":745,"byte_end":751,"line_start":26,"line_end":26,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    Alg = libc::AF_ALG as u8,","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":745,"byte_end":751,"line_start":26,"line_end":26,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    Alg = libc::AF_ALG as u8,","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"AF_DLI","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ALG` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:26:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Alg = libc::AF_ALG as u8,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_DLI`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4033:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_DLI: ::c_int = 13;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_DLI` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_SECONDARY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":865,"byte_end":880,"line_start":32,"line_end":32,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Secondary = libc::IFA_F_SECONDARY as u8,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_SECONDARY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:32:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Secondary = libc::IFA_F_SECONDARY as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_TEMPORARY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":910,"byte_end":925,"line_start":33,"line_end":33,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Temporary = libc::IFA_F_TEMPORARY as u8,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_TEMPORARY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:33:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Temporary = libc::IFA_F_TEMPORARY as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_NODAD` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":951,"byte_end":962,"line_start":34,"line_end":34,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    Nodad = libc::IFA_F_NODAD as u8,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_NODAD` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:34:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Nodad = libc::IFA_F_NODAD as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_OPTIMISTIC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":993,"byte_end":1009,"line_start":35,"line_end":35,"column_start":24,"column_end":40,"is_primary":true,"text":[{"text":"    Optimistic = libc::IFA_F_OPTIMISTIC as u8,","highlight_start":24,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_OPTIMISTIC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:35:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Optimistic = libc::IFA_F_OPTIMISTIC as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_DADFAILED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1039,"byte_end":1054,"line_start":36,"line_end":36,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Dadfailed = libc::IFA_F_DADFAILED as u8,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_DADFAILED` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:36:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dadfailed = libc::IFA_F_DADFAILED as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_HOMEADDRESS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1086,"byte_end":1103,"line_start":37,"line_end":37,"column_start":25,"column_end":42,"is_primary":true,"text":[{"text":"    Homeaddress = libc::IFA_F_HOMEADDRESS as u8,","highlight_start":25,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_HOMEADDRESS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:37:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Homeaddress = libc::IFA_F_HOMEADDRESS as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_DEPRECATED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1134,"byte_end":1150,"line_start":38,"line_end":38,"column_start":24,"column_end":40,"is_primary":true,"text":[{"text":"    Deprecated = libc::IFA_F_DEPRECATED as u8,","highlight_start":24,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_DEPRECATED` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:38:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Deprecated = libc::IFA_F_DEPRECATED as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_TENTATIVE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1180,"byte_end":1195,"line_start":39,"line_end":39,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Tentative = libc::IFA_F_TENTATIVE as u8,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_TENTATIVE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:39:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Tentative = libc::IFA_F_TENTATIVE as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_F_PERMANENT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1225,"byte_end":1240,"line_start":40,"line_end":40,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    Permanent = libc::IFA_F_PERMANENT as u8,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_F_PERMANENT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:40:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Permanent = libc::IFA_F_PERMANENT as u8,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":165559,"byte_end":165588,"line_start":4578,"line_end":4578,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const CTL_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `CTL_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1395,"byte_end":1405,"line_start":47,"line_end":47,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::RTN_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1395,"byte_end":1405,"line_start":47,"line_end":47,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::RTN_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"CTL_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:47:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::RTN_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `CTL_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4578:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CTL_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `CTL_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTN_UNICAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1427,"byte_end":1438,"line_start":48,"line_end":48,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Unicast = libc::RTN_UNICAST,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_UNICAST` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:48:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m48\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unicast = libc::RTN_UNICAST,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_LOCAL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178537,"byte_end":178565,"line_start":4908,"line_end":4908,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const RTF_LOCAL: ::c_int = 0x200000;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `RTF_LOCAL` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1458,"byte_end":1467,"line_start":49,"line_end":49,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Local = libc::RTN_LOCAL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1458,"byte_end":1467,"line_start":49,"line_end":49,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Local = libc::RTN_LOCAL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"RTF_LOCAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_LOCAL` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:49:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m49\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Local = libc::RTN_LOCAL,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_LOCAL`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4908:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4908\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_LOCAL: ::c_int = 0x200000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_LOCAL` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTN_BROADCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178578,"byte_end":178610,"line_start":4909,"line_end":4909,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_BROADCAST: ::c_int = 0x400000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_BROADCAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1491,"byte_end":1504,"line_start":50,"line_end":50,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Broadcast = libc::RTN_BROADCAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1491,"byte_end":1504,"line_start":50,"line_end":50,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Broadcast = libc::RTN_BROADCAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"RTF_BROADCAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_BROADCAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:50:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Broadcast = libc::RTN_BROADCAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_BROADCAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4909:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4909\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_BROADCAST: ::c_int = 0x400000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_BROADCAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTN_ANYCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1526,"byte_end":1537,"line_start":51,"line_end":51,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Anycast = libc::RTN_ANYCAST,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_ANYCAST` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:51:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Anycast = libc::RTN_ANYCAST,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_MULTICAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178623,"byte_end":178655,"line_start":4910,"line_end":4910,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_MULTICAST: ::c_int = 0x800000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_MULTICAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1561,"byte_end":1574,"line_start":52,"line_end":52,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multicast = libc::RTN_MULTICAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1561,"byte_end":1574,"line_start":52,"line_end":52,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multicast = libc::RTN_MULTICAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"RTF_MULTICAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_MULTICAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:52:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m52\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Multicast = libc::RTN_MULTICAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_MULTICAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4910:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_MULTICAST: ::c_int = 0x800000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_MULTICAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTN_BLACKHOLE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178202,"byte_end":178234,"line_start":4900,"line_end":4900,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_BLACKHOLE: ::c_int = 0x1000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_BLACKHOLE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1598,"byte_end":1611,"line_start":53,"line_end":53,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Blackhole = libc::RTN_BLACKHOLE,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1598,"byte_end":1611,"line_start":53,"line_end":53,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Blackhole = libc::RTN_BLACKHOLE,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"RTF_BLACKHOLE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_BLACKHOLE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:53:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Blackhole = libc::RTN_BLACKHOLE,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_BLACKHOLE`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4900:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4900\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_BLACKHOLE: ::c_int = 0x1000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_BLACKHOLE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTN_UNREACHABLE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1637,"byte_end":1652,"line_start":54,"line_end":54,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"    Unreachable = libc::RTN_UNREACHABLE,","highlight_start":25,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_UNREACHABLE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:54:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unreachable = libc::RTN_UNREACHABLE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_PROHIBIT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1675,"byte_end":1687,"line_start":55,"line_end":55,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Prohibit = libc::RTN_PROHIBIT,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_PROHIBIT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:55:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Prohibit = libc::RTN_PROHIBIT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_THROW` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1707,"byte_end":1716,"line_start":56,"line_end":56,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Throw = libc::RTN_THROW,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_THROW` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:56:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Throw = libc::RTN_THROW,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_NAT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1734,"byte_end":1741,"line_start":57,"line_end":57,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Nat = libc::RTN_NAT,","highlight_start":17,"highlight_end":24}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_NAT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:57:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Nat = libc::RTN_NAT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTN_XRESOLVE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178083,"byte_end":178114,"line_start":4897,"line_end":4897,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"pub const RTF_XRESOLVE: ::c_int = 0x200;","highlight_start":1,"highlight_end":32}],"label":"similarly named constant `RTF_XRESOLVE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1764,"byte_end":1776,"line_start":58,"line_end":58,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Xresolve = libc::RTN_XRESOLVE,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1764,"byte_end":1776,"line_start":58,"line_end":58,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Xresolve = libc::RTN_XRESOLVE,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"RTF_XRESOLVE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTN_XRESOLVE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:58:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Xresolve = libc::RTN_XRESOLVE,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_XRESOLVE`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4897:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4897\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_XRESOLVE: ::c_int = 0x200;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_XRESOLVE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTPROT_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1942,"byte_end":1955,"line_start":65,"line_end":65,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Unspec = libc::RTPROT_UNSPEC,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTPROT_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:65:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::RTPROT_UNSPEC,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTPROT_REDIRECT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179206,"byte_end":179237,"line_start":4927,"line_end":4927,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"pub const RTM_REDIRECT: ::c_int = 0x6;","highlight_start":1,"highlight_end":32}],"label":"similarly named constant `RTM_REDIRECT` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1978,"byte_end":1993,"line_start":66,"line_end":66,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Redirect = libc::RTPROT_REDIRECT,","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":1978,"byte_end":1993,"line_start":66,"line_end":66,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Redirect = libc::RTPROT_REDIRECT,","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":"RTM_REDIRECT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTPROT_REDIRECT` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:66:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Redirect = libc::RTPROT_REDIRECT,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_REDIRECT`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4927:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4927\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_REDIRECT: ::c_int = 0x6;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_REDIRECT` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTPROT_KERNEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2014,"byte_end":2027,"line_start":67,"line_end":67,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Kernel = libc::RTPROT_KERNEL,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTPROT_KERNEL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:67:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Kernel = libc::RTPROT_KERNEL,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTPROT_BOOT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2046,"byte_end":2057,"line_start":68,"line_end":68,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    Boot = libc::RTPROT_BOOT,","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTPROT_BOOT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:68:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Boot = libc::RTPROT_BOOT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTPROT_STATIC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178163,"byte_end":178192,"line_start":4899,"line_end":4899,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const RTF_STATIC: ::c_int = 0x800;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `RTF_STATIC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2078,"byte_end":2091,"line_start":69,"line_end":69,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Static = libc::RTPROT_STATIC,","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2078,"byte_end":2091,"line_start":69,"line_end":69,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Static = libc::RTPROT_STATIC,","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":"RTF_STATIC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTPROT_STATIC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:69:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m69\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Static = libc::RTPROT_STATIC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_STATIC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4899:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4899\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_STATIC: ::c_int = 0x800;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_STATIC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RT_SCOPE_UNIVERSE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2238,"byte_end":2255,"line_start":76,"line_end":76,"column_start":22,"column_end":39,"is_primary":true,"text":[{"text":"    Universe = libc::RT_SCOPE_UNIVERSE,","highlight_start":22,"highlight_end":39}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_SCOPE_UNIVERSE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:76:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Universe = libc::RT_SCOPE_UNIVERSE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_SCOPE_SITE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2274,"byte_end":2287,"line_start":77,"line_end":77,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"    Site = libc::RT_SCOPE_SITE,","highlight_start":18,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_SCOPE_SITE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:77:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Site = libc::RT_SCOPE_SITE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_SCOPE_LINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2306,"byte_end":2319,"line_start":78,"line_end":78,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"    Link = libc::RT_SCOPE_LINK,","highlight_start":18,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_SCOPE_LINK` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:78:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Link = libc::RT_SCOPE_LINK,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_SCOPE_HOST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2338,"byte_end":2351,"line_start":79,"line_end":79,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"    Host = libc::RT_SCOPE_HOST,","highlight_start":18,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_SCOPE_HOST` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:79:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Host = libc::RT_SCOPE_HOST,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_SCOPE_NOWHERE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2373,"byte_end":2389,"line_start":80,"line_end":80,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"    Nowhere = libc::RT_SCOPE_NOWHERE,","highlight_start":21,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_SCOPE_NOWHERE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:80:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Nowhere = libc::RT_SCOPE_NOWHERE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_TABLE_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2534,"byte_end":2549,"line_start":87,"line_end":87,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Unspec = libc::RT_TABLE_UNSPEC,","highlight_start":20,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_TABLE_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:87:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::RT_TABLE_UNSPEC,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_TABLE_COMPAT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2570,"byte_end":2585,"line_start":88,"line_end":88,"column_start":20,"column_end":35,"is_primary":true,"text":[{"text":"    Compat = libc::RT_TABLE_COMPAT,","highlight_start":20,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_TABLE_COMPAT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:88:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Compat = libc::RT_TABLE_COMPAT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_TABLE_DEFAULT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/mod.rs","byte_start":14037,"byte_end":14074,"line_start":447,"line_end":447,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"pub const RTLD_DEFAULT: *mut ::c_void = -2isize as *mut ::c_void;","highlight_start":1,"highlight_end":38}],"label":"similarly named constant `RTLD_DEFAULT` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2607,"byte_end":2623,"line_start":89,"line_end":89,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"    Default = libc::RT_TABLE_DEFAULT,","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2607,"byte_end":2623,"line_start":89,"line_end":89,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"    Default = libc::RT_TABLE_DEFAULT,","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":"RTLD_DEFAULT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_TABLE_DEFAULT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:89:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Default = libc::RT_TABLE_DEFAULT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTLD_DEFAULT`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/mod.rs:447:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTLD_DEFAULT: *mut ::c_void = -2isize as *mut ::c_void;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTLD_DEFAULT` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RT_TABLE_MAIN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2642,"byte_end":2655,"line_start":90,"line_end":90,"column_start":18,"column_end":31,"is_primary":true,"text":[{"text":"    Main = libc::RT_TABLE_MAIN,","highlight_start":18,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_TABLE_MAIN` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:90:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Main = libc::RT_TABLE_MAIN,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RT_TABLE_LOCAL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2675,"byte_end":2689,"line_start":91,"line_end":91,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"    Local = libc::RT_TABLE_LOCAL,","highlight_start":19,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RT_TABLE_LOCAL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:91:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Local = libc::RT_TABLE_LOCAL,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_F_NOTIFY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2825,"byte_end":2837,"line_start":98,"line_end":98,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Notify = libc::RTM_F_NOTIFY,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_F_NOTIFY` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:98:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m98\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Notify = libc::RTM_F_NOTIFY,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_F_CLONED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178410,"byte_end":178442,"line_start":4905,"line_end":4905,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_WASCLONED: ::c_int = 0x20000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_WASCLONED` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2858,"byte_end":2870,"line_start":99,"line_end":99,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Cloned = libc::RTM_F_CLONED,","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2858,"byte_end":2870,"line_start":99,"line_end":99,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Cloned = libc::RTM_F_CLONED,","highlight_start":20,"highlight_end":32}],"label":null,"suggested_replacement":"RTF_WASCLONED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_F_CLONED` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:99:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cloned = libc::RTM_F_CLONED,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_WASCLONED`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4905:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4905\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_WASCLONED: ::c_int = 0x20000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_WASCLONED` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_F_EQUALIZE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2893,"byte_end":2907,"line_start":100,"line_end":100,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    Equalize = libc::RTM_F_EQUALIZE,","highlight_start":22,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_F_EQUALIZE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:100:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Equalize = libc::RTM_F_EQUALIZE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_F_PREFIX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":2928,"byte_end":2940,"line_start":101,"line_end":101,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    Prefix = libc::RTM_F_PREFIX,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_F_PREFIX` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:101:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Prefix = libc::RTM_F_PREFIX,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_NONE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3196,"byte_end":3204,"line_start":112,"line_end":112,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    None = libc::NUD_NONE,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_NONE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:112:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m112\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    None = libc::NUD_NONE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_INCOMPLETE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3229,"byte_end":3243,"line_start":113,"line_end":113,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Incomplete = libc::NUD_INCOMPLETE,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_INCOMPLETE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:113:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Incomplete = libc::NUD_INCOMPLETE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_REACHABLE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3267,"byte_end":3280,"line_start":114,"line_end":114,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Reachable = libc::NUD_REACHABLE,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_REACHABLE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:114:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m114\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Reachable = libc::NUD_REACHABLE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_STALE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3300,"byte_end":3309,"line_start":115,"line_end":115,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Stale = libc::NUD_STALE,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_STALE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:115:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stale = libc::NUD_STALE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_DELAY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3329,"byte_end":3338,"line_start":116,"line_end":116,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Delay = libc::NUD_DELAY,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_DELAY` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:116:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delay = libc::NUD_DELAY,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_PROBE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3358,"byte_end":3367,"line_start":117,"line_end":117,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Probe = libc::NUD_PROBE,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_PROBE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:117:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Probe = libc::NUD_PROBE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NUD_FAILED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":124068,"byte_end":124103,"line_start":3433,"line_end":3433,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"pub const MAP_FAILED: *mut ::c_void = !0 as *mut ::c_void;","highlight_start":1,"highlight_end":36}],"label":"similarly named constant `MAP_FAILED` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3388,"byte_end":3398,"line_start":118,"line_end":118,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Failed = libc::NUD_FAILED,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3388,"byte_end":3398,"line_start":118,"line_end":118,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Failed = libc::NUD_FAILED,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"MAP_FAILED","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_FAILED` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:118:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Failed = libc::NUD_FAILED,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `MAP_FAILED`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:3433:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const MAP_FAILED: *mut ::c_void = !0 as *mut ::c_void;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `MAP_FAILED` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NUD_NOARP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":151612,"byte_end":151640,"line_start":4225,"line_end":4225,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const IFF_NOARP: ::c_int = 0x80; // no address resolution protocol","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `IFF_NOARP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3418,"byte_end":3427,"line_start":119,"line_end":119,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Noarp = libc::NUD_NOARP,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3418,"byte_end":3427,"line_start":119,"line_end":119,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Noarp = libc::NUD_NOARP,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"IFF_NOARP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_NOARP` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:119:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Noarp = libc::NUD_NOARP,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IFF_NOARP`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4225:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_NOARP: ::c_int = 0x80; // no address resolution protocol\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IFF_NOARP` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NUD_PERMANENT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3451,"byte_end":3464,"line_start":120,"line_end":120,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Permanent = libc::NUD_PERMANENT,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NUD_PERMANENT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:120:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m120\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Permanent = libc::NUD_PERMANENT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NTF_USE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3572,"byte_end":3579,"line_start":126,"line_end":126,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Use = libc::NTF_USE,","highlight_start":17,"highlight_end":24}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NTF_USE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:126:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Use = libc::NTF_USE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NTF_SELF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3599,"byte_end":3607,"line_start":127,"line_end":127,"column_start":19,"column_end":27,"is_primary":true,"text":[{"text":"    Self_ = libc::NTF_SELF,","highlight_start":19,"highlight_end":27}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NTF_SELF` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:127:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Self_ = libc::NTF_SELF,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NTF_MASTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3628,"byte_end":3638,"line_start":128,"line_end":128,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Master = libc::NTF_MASTER,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NTF_MASTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:128:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m128\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Master = libc::NTF_MASTER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NTF_PROXY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178800,"byte_end":178828,"line_start":4914,"line_end":4914,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const RTF_PROXY: ::c_int = 0x8000000;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `RTF_PROXY` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3658,"byte_end":3667,"line_start":129,"line_end":129,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Proxy = libc::NTF_PROXY,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3658,"byte_end":3667,"line_start":129,"line_end":129,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Proxy = libc::NTF_PROXY,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"RTF_PROXY","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NTF_PROXY` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:129:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Proxy = libc::NTF_PROXY,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_PROXY`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4914:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4914\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_PROXY: ::c_int = 0x8000000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_PROXY` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NTF_ROUTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178842,"byte_end":178871,"line_start":4915,"line_end":4915,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const RTF_ROUTER: ::c_int = 0x10000000;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `RTF_ROUTER` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3827,"byte_end":3837,"line_start":134,"line_end":134,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Router = libc::NTF_ROUTER,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":3827,"byte_end":3837,"line_start":134,"line_end":134,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Router = libc::NTF_ROUTER,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"RTF_ROUTER","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NTF_ROUTER` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:134:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Router = libc::NTF_ROUTER,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_ROUTER`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4915:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4915\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_ROUTER: ::c_int = 0x10000000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_ROUTER` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":143923,"byte_end":143951,"line_start":4018,"line_end":4018,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const AF_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `AF_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4440,"byte_end":4451,"line_start":159,"line_end":159,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Unspec = libc::IFLA_UNSPEC,","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4440,"byte_end":4451,"line_start":159,"line_end":159,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Unspec = libc::IFLA_UNSPEC,","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":"AF_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:159:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m159\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::IFLA_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4018:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4018\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_ADDRESS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4473,"byte_end":4485,"line_start":160,"line_end":160,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    Address = libc::IFLA_ADDRESS,","highlight_start":21,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_ADDRESS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:160:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Address = libc::IFLA_ADDRESS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_BROADCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":151210,"byte_end":151242,"line_start":4219,"line_end":4219,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const IFF_BROADCAST: ::c_int = 0x2; // broadcast address valid","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `IFF_BROADCAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4509,"byte_end":4523,"line_start":161,"line_end":161,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"    Broadcast = libc::IFLA_BROADCAST,","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4509,"byte_end":4523,"line_start":161,"line_end":161,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"    Broadcast = libc::IFLA_BROADCAST,","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":"IFF_BROADCAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_BROADCAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:161:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Broadcast = libc::IFLA_BROADCAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IFF_BROADCAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4219:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_BROADCAST: ::c_int = 0x2; // broadcast address valid\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IFF_BROADCAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_IFNAME` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4544,"byte_end":4555,"line_start":162,"line_end":162,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Ifname = libc::IFLA_IFNAME,","highlight_start":20,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_IFNAME` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:162:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ifname = libc::IFLA_IFNAME,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_MTU` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4573,"byte_end":4581,"line_start":163,"line_end":163,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    Mtu = libc::IFLA_MTU,","highlight_start":17,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_MTU` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:163:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m163\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Mtu = libc::IFLA_MTU,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_LINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":144596,"byte_end":144622,"line_start":4038,"line_end":4038,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const AF_LINK: ::c_int = 18;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `AF_LINK` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4600,"byte_end":4609,"line_start":164,"line_end":164,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    Link = libc::IFLA_LINK,","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4600,"byte_end":4609,"line_start":164,"line_end":164,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    Link = libc::IFLA_LINK,","highlight_start":18,"highlight_end":27}],"label":null,"suggested_replacement":"AF_LINK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_LINK` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:164:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Link = libc::IFLA_LINK,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_LINK`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_LINK: ::c_int = 18;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_LINK` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_QDISC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4629,"byte_end":4639,"line_start":165,"line_end":165,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"    Qdisc = libc::IFLA_QDISC,","highlight_start":19,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_QDISC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:165:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Qdisc = libc::IFLA_QDISC,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_STATS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4659,"byte_end":4669,"line_start":166,"line_end":166,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"    Stats = libc::IFLA_STATS,","highlight_start":19,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_STATS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:166:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m166\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stats = libc::IFLA_STATS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_COST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4688,"byte_end":4697,"line_start":167,"line_end":167,"column_start":18,"column_end":27,"is_primary":true,"text":[{"text":"    Cost = libc::IFLA_COST,","highlight_start":18,"highlight_end":27}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_COST` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:167:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cost = libc::IFLA_COST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PRIORITY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4720,"byte_end":4733,"line_start":168,"line_end":168,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    Priority = libc::IFLA_PRIORITY,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PRIORITY` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:168:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Priority = libc::IFLA_PRIORITY,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_MASTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4754,"byte_end":4765,"line_start":169,"line_end":169,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Master = libc::IFLA_MASTER,","highlight_start":20,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_MASTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:169:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m169\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Master = libc::IFLA_MASTER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_WIRELESS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4788,"byte_end":4801,"line_start":170,"line_end":170,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    Wireless = libc::IFLA_WIRELESS,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_WIRELESS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:170:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Wireless = libc::IFLA_WIRELESS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PROTINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4824,"byte_end":4837,"line_start":171,"line_end":171,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    Protinfo = libc::IFLA_PROTINFO,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PROTINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:171:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Protinfo = libc::IFLA_PROTINFO,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_TXQLEN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4858,"byte_end":4869,"line_start":172,"line_end":172,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Txqlen = libc::IFLA_TXQLEN,","highlight_start":20,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_TXQLEN` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:172:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Txqlen = libc::IFLA_TXQLEN,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_MAP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4887,"byte_end":4895,"line_start":173,"line_end":173,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    Map = libc::IFLA_MAP,","highlight_start":17,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_MAP` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:173:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Map = libc::IFLA_MAP,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_WEIGHT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4916,"byte_end":4927,"line_start":174,"line_end":174,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    Weight = libc::IFLA_WEIGHT,","highlight_start":20,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_WEIGHT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:174:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Weight = libc::IFLA_WEIGHT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_OPERSTATE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4951,"byte_end":4965,"line_start":175,"line_end":175,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"    Operstate = libc::IFLA_OPERSTATE,","highlight_start":23,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_OPERSTATE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:175:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Operstate = libc::IFLA_OPERSTATE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_LINKMODE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":4988,"byte_end":5001,"line_start":176,"line_end":176,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    Linkmode = libc::IFLA_LINKMODE,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_LINKMODE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:176:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Linkmode = libc::IFLA_LINKMODE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_LINKINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5024,"byte_end":5037,"line_start":177,"line_end":177,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    Linkinfo = libc::IFLA_LINKINFO,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_LINKINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:177:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Linkinfo = libc::IFLA_LINKINFO,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NET_NS_PID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5060,"byte_end":5075,"line_start":178,"line_end":178,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    NetNsPid = libc::IFLA_NET_NS_PID,","highlight_start":22,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NET_NS_PID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:178:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NetNsPid = libc::IFLA_NET_NS_PID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_IFALIAS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5097,"byte_end":5109,"line_start":179,"line_end":179,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    Ifalias = libc::IFLA_IFALIAS,","highlight_start":21,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_IFALIAS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:179:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ifalias = libc::IFLA_IFALIAS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NUM_VF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5129,"byte_end":5140,"line_start":180,"line_end":180,"column_start":19,"column_end":30,"is_primary":true,"text":[{"text":"    NumVf = libc::IFLA_NUM_VF,","highlight_start":19,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NUM_VF` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:180:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m180\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NumVf = libc::IFLA_NUM_VF,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_VFINFO_LIST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5165,"byte_end":5181,"line_start":181,"line_end":181,"column_start":24,"column_end":40,"is_primary":true,"text":[{"text":"    VfinfoList = libc::IFLA_VFINFO_LIST,","highlight_start":24,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_VFINFO_LIST` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:181:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VfinfoList = libc::IFLA_VFINFO_LIST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_STATS64` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5203,"byte_end":5215,"line_start":182,"line_end":182,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    Stats64 = libc::IFLA_STATS64,","highlight_start":21,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_STATS64` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:182:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stats64 = libc::IFLA_STATS64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_VF_PORTS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5237,"byte_end":5250,"line_start":183,"line_end":183,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    VfPorts = libc::IFLA_VF_PORTS,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_VF_PORTS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:183:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    VfPorts = libc::IFLA_VF_PORTS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PORT_SELF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5273,"byte_end":5287,"line_start":184,"line_end":184,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    PortSelf = libc::IFLA_PORT_SELF,","highlight_start":22,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PORT_SELF` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:184:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PortSelf = libc::IFLA_PORT_SELF,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_AF_SPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5308,"byte_end":5320,"line_start":185,"line_end":185,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    AfSpec = libc::IFLA_AF_SPEC,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_AF_SPEC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:185:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AfSpec = libc::IFLA_AF_SPEC,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_GROUP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5340,"byte_end":5350,"line_start":186,"line_end":186,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"    Group = libc::IFLA_GROUP,","highlight_start":19,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_GROUP` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:186:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Group = libc::IFLA_GROUP,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NET_NS_FD` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5372,"byte_end":5386,"line_start":187,"line_end":187,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"    NetNsFd = libc::IFLA_NET_NS_FD,","highlight_start":21,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NET_NS_FD` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:187:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NetNsFd = libc::IFLA_NET_NS_FD,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_EXT_MASK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5408,"byte_end":5421,"line_start":188,"line_end":188,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"    ExtMask = libc::IFLA_EXT_MASK,","highlight_start":21,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_EXT_MASK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:188:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ExtMask = libc::IFLA_EXT_MASK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PROMISCUITY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5447,"byte_end":5463,"line_start":189,"line_end":189,"column_start":25,"column_end":41,"is_primary":true,"text":[{"text":"    Promiscuity = libc::IFLA_PROMISCUITY,","highlight_start":25,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PROMISCUITY` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:189:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Promiscuity = libc::IFLA_PROMISCUITY,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NUM_TX_QUEUES` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5489,"byte_end":5507,"line_start":190,"line_end":190,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"    NumTxQueues = libc::IFLA_NUM_TX_QUEUES,","highlight_start":25,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NUM_TX_QUEUES` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:190:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NumTxQueues = libc::IFLA_NUM_TX_QUEUES,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NUM_RX_QUEUES` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5533,"byte_end":5551,"line_start":191,"line_end":191,"column_start":25,"column_end":43,"is_primary":true,"text":[{"text":"    NumRxQueues = libc::IFLA_NUM_RX_QUEUES,","highlight_start":25,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NUM_RX_QUEUES` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:191:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NumRxQueues = libc::IFLA_NUM_RX_QUEUES,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_CARRIER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5573,"byte_end":5585,"line_start":192,"line_end":192,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    Carrier = libc::IFLA_CARRIER,","highlight_start":21,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_CARRIER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:192:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Carrier = libc::IFLA_CARRIER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PHYS_PORT_ID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5610,"byte_end":5627,"line_start":193,"line_end":193,"column_start":24,"column_end":41,"is_primary":true,"text":[{"text":"    PhysPortId = libc::IFLA_PHYS_PORT_ID,","highlight_start":24,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PHYS_PORT_ID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:193:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PhysPortId = libc::IFLA_PHYS_PORT_ID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_CARRIER_CHANGES` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5656,"byte_end":5676,"line_start":194,"line_end":194,"column_start":28,"column_end":48,"is_primary":true,"text":[{"text":"    CarrierChanges = libc::IFLA_CARRIER_CHANGES,","highlight_start":28,"highlight_end":48}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_CARRIER_CHANGES` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:194:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CarrierChanges = libc::IFLA_CARRIER_CHANGES,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PHYS_SWITCH_ID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5703,"byte_end":5722,"line_start":195,"line_end":195,"column_start":26,"column_end":45,"is_primary":true,"text":[{"text":"    PhysSwitchId = libc::IFLA_PHYS_SWITCH_ID,","highlight_start":26,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PHYS_SWITCH_ID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:195:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PhysSwitchId = libc::IFLA_PHYS_SWITCH_ID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_LINK_NETNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5748,"byte_end":5765,"line_start":196,"line_end":196,"column_start":25,"column_end":42,"is_primary":true,"text":[{"text":"    LinkNetnsid = libc::IFLA_LINK_NETNSID,","highlight_start":25,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_LINK_NETNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:196:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LinkNetnsid = libc::IFLA_LINK_NETNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PHYS_PORT_NAME` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5792,"byte_end":5811,"line_start":197,"line_end":197,"column_start":26,"column_end":45,"is_primary":true,"text":[{"text":"    PhysPortName = libc::IFLA_PHYS_PORT_NAME,","highlight_start":26,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PHYS_PORT_NAME` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:197:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PhysPortName = libc::IFLA_PHYS_PORT_NAME,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PROTO_DOWN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5835,"byte_end":5850,"line_start":198,"line_end":198,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    ProtoDown = libc::IFLA_PROTO_DOWN,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PROTO_DOWN` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:198:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ProtoDown = libc::IFLA_PROTO_DOWN,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_GSO_MAX_SEGS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5875,"byte_end":5892,"line_start":199,"line_end":199,"column_start":24,"column_end":41,"is_primary":true,"text":[{"text":"    GsoMaxSegs = libc::IFLA_GSO_MAX_SEGS,","highlight_start":24,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_GSO_MAX_SEGS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:199:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GsoMaxSegs = libc::IFLA_GSO_MAX_SEGS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_GSO_MAX_SIZE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5917,"byte_end":5934,"line_start":200,"line_end":200,"column_start":24,"column_end":41,"is_primary":true,"text":[{"text":"    GsoMaxSize = libc::IFLA_GSO_MAX_SIZE,","highlight_start":24,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_GSO_MAX_SIZE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:200:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    GsoMaxSize = libc::IFLA_GSO_MAX_SIZE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PAD` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5952,"byte_end":5960,"line_start":201,"line_end":201,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    Pad = libc::IFLA_PAD,","highlight_start":17,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PAD` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:201:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m201\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Pad = libc::IFLA_PAD,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_XDP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":5978,"byte_end":5986,"line_start":202,"line_end":202,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"    Xdp = libc::IFLA_XDP,","highlight_start":17,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_XDP` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:202:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Xdp = libc::IFLA_XDP,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_EVENT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6006,"byte_end":6016,"line_start":203,"line_end":203,"column_start":19,"column_end":29,"is_primary":true,"text":[{"text":"    Event = libc::IFLA_EVENT,","highlight_start":19,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_EVENT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:203:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m203\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Event = libc::IFLA_EVENT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NEW_NETNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6041,"byte_end":6057,"line_start":204,"line_end":204,"column_start":24,"column_end":40,"is_primary":true,"text":[{"text":"    NewNetnsid = libc::IFLA_NEW_NETNSID,","highlight_start":24,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NEW_NETNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:204:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NewNetnsid = libc::IFLA_NEW_NETNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_IF_NETNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6081,"byte_end":6096,"line_start":205,"line_end":205,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    IfNetnsid = libc::IFLA_IF_NETNSID,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_IF_NETNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:205:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    IfNetnsid = libc::IFLA_IF_NETNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_CARRIER_UP_COUNT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6125,"byte_end":6146,"line_start":206,"line_end":206,"column_start":28,"column_end":49,"is_primary":true,"text":[{"text":"    CarrierUpCount = libc::IFLA_CARRIER_UP_COUNT,","highlight_start":28,"highlight_end":49}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_CARRIER_UP_COUNT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:206:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m206\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CarrierUpCount = libc::IFLA_CARRIER_UP_COUNT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_CARRIER_DOWN_COUNT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6177,"byte_end":6200,"line_start":207,"line_end":207,"column_start":30,"column_end":53,"is_primary":true,"text":[{"text":"    CarrierDownCount = libc::IFLA_CARRIER_DOWN_COUNT,","highlight_start":30,"highlight_end":53}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_CARRIER_DOWN_COUNT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:207:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m207\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    CarrierDownCount = libc::IFLA_CARRIER_DOWN_COUNT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_NEW_IFINDEX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6225,"byte_end":6241,"line_start":208,"line_end":208,"column_start":24,"column_end":40,"is_primary":true,"text":[{"text":"    NewIfindex = libc::IFLA_NEW_IFINDEX,","highlight_start":24,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_NEW_IFINDEX` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:208:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    NewIfindex = libc::IFLA_NEW_IFINDEX,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_MIN_MTU` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6262,"byte_end":6274,"line_start":209,"line_end":209,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    MinMtu = libc::IFLA_MIN_MTU,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_MIN_MTU` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:209:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MinMtu = libc::IFLA_MIN_MTU,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_MAX_MTU` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6295,"byte_end":6307,"line_start":210,"line_end":210,"column_start":20,"column_end":32,"is_primary":true,"text":[{"text":"    MaxMtu = libc::IFLA_MAX_MTU,","highlight_start":20,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_MAX_MTU` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:210:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MaxMtu = libc::IFLA_MAX_MTU,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PROP_LIST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6330,"byte_end":6344,"line_start":211,"line_end":211,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"    PropList = libc::IFLA_PROP_LIST,","highlight_start":22,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PROP_LIST` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:211:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PropList = libc::IFLA_PROP_LIST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_ALT_IFNAME` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6368,"byte_end":6383,"line_start":212,"line_end":212,"column_start":23,"column_end":38,"is_primary":true,"text":[{"text":"    AltIfname = libc::IFLA_ALT_IFNAME,","highlight_start":23,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_ALT_IFNAME` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:212:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AltIfname = libc::IFLA_ALT_IFNAME,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PERM_ADDRESS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6409,"byte_end":6426,"line_start":213,"line_end":213,"column_start":25,"column_end":42,"is_primary":true,"text":[{"text":"    PermAddress = libc::IFLA_PERM_ADDRESS,","highlight_start":25,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PERM_ADDRESS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:213:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    PermAddress = libc::IFLA_PERM_ADDRESS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_PROTO_DOWN_REASON` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6456,"byte_end":6478,"line_start":214,"line_end":214,"column_start":29,"column_end":51,"is_primary":true,"text":[{"text":"    ProtoDownReason = libc::IFLA_PROTO_DOWN_REASON,","highlight_start":29,"highlight_end":51}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_PROTO_DOWN_REASON` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:214:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ProtoDownReason = libc::IFLA_PROTO_DOWN_REASON,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6698,"byte_end":6714,"line_start":222,"line_end":222,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"    Unspec = libc::IFLA_INFO_UNSPEC,","highlight_start":20,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:222:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m222\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::IFLA_INFO_UNSPEC,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_KIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6733,"byte_end":6747,"line_start":223,"line_end":223,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    Kind = libc::IFLA_INFO_KIND,","highlight_start":18,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_KIND` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:223:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m223\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Kind = libc::IFLA_INFO_KIND,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_DATA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6766,"byte_end":6780,"line_start":224,"line_end":224,"column_start":18,"column_end":32,"is_primary":true,"text":[{"text":"    Data = libc::IFLA_INFO_DATA,","highlight_start":18,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_DATA` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:224:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m224\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Data = libc::IFLA_INFO_DATA,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_XSTATS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6801,"byte_end":6817,"line_start":225,"line_end":225,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"    Xstats = libc::IFLA_INFO_XSTATS,","highlight_start":20,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_XSTATS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:225:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Xstats = libc::IFLA_INFO_XSTATS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_SLAVE_KIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6841,"byte_end":6861,"line_start":226,"line_end":226,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"    SlaveKind = libc::IFLA_INFO_SLAVE_KIND,","highlight_start":23,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_SLAVE_KIND` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:226:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SlaveKind = libc::IFLA_INFO_SLAVE_KIND,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFLA_INFO_SLAVE_DATA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":6885,"byte_end":6905,"line_start":227,"line_end":227,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"    SlaveData = libc::IFLA_INFO_SLAVE_DATA,","highlight_start":23,"highlight_end":43}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFLA_INFO_SLAVE_DATA` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:227:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SlaveData = libc::IFLA_INFO_SLAVE_DATA,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":143923,"byte_end":143951,"line_start":4018,"line_end":4018,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const AF_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `AF_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7175,"byte_end":7185,"line_start":236,"line_end":236,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::IFA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7175,"byte_end":7185,"line_start":236,"line_end":236,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::IFA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"AF_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:236:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m236\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::IFA_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4018:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4018\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFA_ADDRESS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7207,"byte_end":7218,"line_start":237,"line_end":237,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Address = libc::IFA_ADDRESS,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_ADDRESS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:237:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m237\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Address = libc::IFA_ADDRESS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_LOCAL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":143957,"byte_end":143984,"line_start":4019,"line_end":4019,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub const AF_LOCAL: ::c_int = 1;","highlight_start":1,"highlight_end":28}],"label":"similarly named constant `AF_LOCAL` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7238,"byte_end":7247,"line_start":238,"line_end":238,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Local = libc::IFA_LOCAL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7238,"byte_end":7247,"line_start":238,"line_end":238,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Local = libc::IFA_LOCAL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"AF_LOCAL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_LOCAL` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:238:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m238\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Local = libc::IFA_LOCAL,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_LOCAL`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4019:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4019\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_LOCAL: ::c_int = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_LOCAL` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFA_LABEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":149898,"byte_end":149925,"line_start":4184,"line_end":4184,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"pub const SO_LABEL: ::c_int = 0x1010;","highlight_start":1,"highlight_end":28}],"label":"similarly named constant `SO_LABEL` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7267,"byte_end":7276,"line_start":239,"line_end":239,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Label = libc::IFA_LABEL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7267,"byte_end":7276,"line_start":239,"line_end":239,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Label = libc::IFA_LABEL,","highlight_start":19,"highlight_end":28}],"label":null,"suggested_replacement":"SO_LABEL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_LABEL` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:239:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Label = libc::IFA_LABEL,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `SO_LABEL`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4184:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const SO_LABEL: ::c_int = 0x1010;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `SO_LABEL` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFA_BROADCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":151210,"byte_end":151242,"line_start":4219,"line_end":4219,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const IFF_BROADCAST: ::c_int = 0x2; // broadcast address valid","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `IFF_BROADCAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7300,"byte_end":7313,"line_start":240,"line_end":240,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Broadcast = libc::IFA_BROADCAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7300,"byte_end":7313,"line_start":240,"line_end":240,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Broadcast = libc::IFA_BROADCAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"IFF_BROADCAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_BROADCAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:240:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Broadcast = libc::IFA_BROADCAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IFF_BROADCAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4219:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_BROADCAST: ::c_int = 0x2; // broadcast address valid\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IFF_BROADCAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFA_ANYCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7335,"byte_end":7346,"line_start":241,"line_end":241,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Anycast = libc::IFA_ANYCAST,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_ANYCAST` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:241:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Anycast = libc::IFA_ANYCAST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_CACHEINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7370,"byte_end":7383,"line_start":242,"line_end":242,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Cacheinfo = libc::IFA_CACHEINFO,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_CACHEINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:242:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m242\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cacheinfo = libc::IFA_CACHEINFO,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFA_MULTICAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":152248,"byte_end":152280,"line_start":4234,"line_end":4234,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const IFF_MULTICAST: ::c_int = 0x8000; // supports multicast","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `IFF_MULTICAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7407,"byte_end":7420,"line_start":243,"line_end":243,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multicast = libc::IFA_MULTICAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7407,"byte_end":7420,"line_start":243,"line_end":243,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multicast = libc::IFA_MULTICAST,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"IFF_MULTICAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFA_MULTICAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:243:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Multicast = libc::IFA_MULTICAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IFF_MULTICAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4234:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IFF_MULTICAST: ::c_int = 0x8000; // supports multicast\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IFF_MULTICAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":165559,"byte_end":165588,"line_start":4578,"line_end":4578,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const CTL_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `CTL_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7732,"byte_end":7742,"line_start":254,"line_end":254,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::RTA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7732,"byte_end":7742,"line_start":254,"line_end":254,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::RTA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"CTL_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:254:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m254\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::RTA_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `CTL_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4578:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CTL_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `CTL_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_SRC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":180369,"byte_end":180395,"line_start":4960,"line_end":4960,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTA_BRD: ::c_int = 0x80;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTA_BRD` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7785,"byte_end":7792,"line_start":256,"line_end":256,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Src = libc::RTA_SRC,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7785,"byte_end":7792,"line_start":256,"line_end":256,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Src = libc::RTA_SRC,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"RTA_BRD","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_SRC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:256:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Src = libc::RTA_SRC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTA_BRD`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4960:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4960\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTA_BRD: ::c_int = 0x80;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTA_BRD` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_IIF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":180296,"byte_end":180322,"line_start":4958,"line_end":4958,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTA_IFA: ::c_int = 0x20;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTA_IFA` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7810,"byte_end":7817,"line_start":257,"line_end":257,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Iif = libc::RTA_IIF,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7810,"byte_end":7817,"line_start":257,"line_end":257,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Iif = libc::RTA_IIF,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"RTA_IFA","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_IIF` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:257:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m257\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Iif = libc::RTA_IIF,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTA_IFA`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4958:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4958\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTA_IFA: ::c_int = 0x20;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTA_IFA` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_OIF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":180296,"byte_end":180322,"line_start":4958,"line_end":4958,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTA_IFA: ::c_int = 0x20;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTA_IFA` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7835,"byte_end":7842,"line_start":258,"line_end":258,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Oif = libc::RTA_OIF,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7835,"byte_end":7842,"line_start":258,"line_end":258,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Oif = libc::RTA_OIF,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"RTA_IFA","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_OIF` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:258:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m258\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Oif = libc::RTA_OIF,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTA_IFA`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4958:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4958\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTA_IFA: ::c_int = 0x20;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTA_IFA` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_PRIORITY` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7898,"byte_end":7910,"line_start":260,"line_end":260,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Priority = libc::RTA_PRIORITY,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_PRIORITY` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:260:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Priority = libc::RTA_PRIORITY,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_PREFSRC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7932,"byte_end":7943,"line_start":261,"line_end":261,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Prefsrc = libc::RTA_PREFSRC,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_PREFSRC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:261:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Prefsrc = libc::RTA_PREFSRC,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_METRICS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7965,"byte_end":7976,"line_start":262,"line_end":262,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Metrics = libc::RTA_METRICS,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_METRICS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:262:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Metrics = libc::RTA_METRICS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_MULTIPATH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178623,"byte_end":178655,"line_start":4910,"line_end":4910,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_MULTICAST: ::c_int = 0x800000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_MULTICAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8000,"byte_end":8013,"line_start":263,"line_end":263,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multipath = libc::RTA_MULTIPATH,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8000,"byte_end":8013,"line_start":263,"line_end":263,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Multipath = libc::RTA_MULTIPATH,","highlight_start":23,"highlight_end":36}],"label":null,"suggested_replacement":"RTF_MULTICAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_MULTIPATH` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:263:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Multipath = libc::RTA_MULTIPATH,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_MULTICAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4910:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_MULTICAST: ::c_int = 0x800000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_MULTICAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_PROTOINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8037,"byte_end":8050,"line_start":264,"line_end":264,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Protoinfo = libc::RTA_PROTOINFO, // no longer used in Linux","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_PROTOINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:264:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Protoinfo = libc::RTA_PROTOINFO, // no longer used in Linux\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_FLOW` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8096,"byte_end":8104,"line_start":265,"line_end":265,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Flow = libc::RTA_FLOW,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_FLOW` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:265:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m265\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Flow = libc::RTA_FLOW,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_CACHEINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8128,"byte_end":8141,"line_start":266,"line_end":266,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Cacheinfo = libc::RTA_CACHEINFO,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_CACHEINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:266:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cacheinfo = libc::RTA_CACHEINFO,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_SESSION` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178973,"byte_end":179003,"line_start":4919,"line_end":4919,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_VERSION: ::c_int = 5;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_VERSION` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8163,"byte_end":8174,"line_start":267,"line_end":267,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Session = libc::RTA_SESSION, // no longer used in Linux","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8163,"byte_end":8174,"line_start":267,"line_end":267,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Session = libc::RTA_SESSION, // no longer used in Linux","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"RTM_VERSION","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_SESSION` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:267:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m267\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Session = libc::RTA_SESSION, // no longer used in Linux\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_VERSION`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4919:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4919\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_VERSION: ::c_int = 5;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_VERSION` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTA_MP_ALGO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8222,"byte_end":8233,"line_start":268,"line_end":268,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"    MpAlgo = libc::RTA_MP_ALGO,  // no longer used in Linux","highlight_start":20,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_MP_ALGO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:268:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MpAlgo = libc::RTA_MP_ALGO,  // no longer used in Linux\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_TABLE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8281,"byte_end":8290,"line_start":269,"line_end":269,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Table = libc::RTA_TABLE,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_TABLE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:269:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Table = libc::RTA_TABLE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_MARK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8309,"byte_end":8317,"line_start":270,"line_end":270,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Mark = libc::RTA_MARK,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_MARK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:270:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Mark = libc::RTA_MARK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTA_MFC_STATS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":8340,"byte_end":8353,"line_start":271,"line_end":271,"column_start":22,"column_end":35,"is_primary":true,"text":[{"text":"    MfcStats = libc::RTA_MFC_STATS,","highlight_start":22,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTA_MFC_STATS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:271:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    MfcStats = libc::RTA_MFC_STATS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":165559,"byte_end":165588,"line_start":4578,"line_end":4578,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const CTL_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `CTL_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9168,"byte_end":9178,"line_start":298,"line_end":298,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::TCA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9168,"byte_end":9178,"line_start":298,"line_end":298,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::TCA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"CTL_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:298:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::TCA_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `CTL_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4578:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const CTL_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `CTL_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `TCA_KIND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9197,"byte_end":9205,"line_start":299,"line_end":299,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Kind = libc::TCA_KIND,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_KIND` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:299:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Kind = libc::TCA_KIND,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_OPTIONS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9227,"byte_end":9238,"line_start":300,"line_end":300,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Options = libc::TCA_OPTIONS,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_OPTIONS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:300:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Options = libc::TCA_OPTIONS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_STATS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9258,"byte_end":9267,"line_start":301,"line_end":301,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Stats = libc::TCA_STATS,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_STATS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:301:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stats = libc::TCA_STATS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_XSTATS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9288,"byte_end":9298,"line_start":302,"line_end":302,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Xstats = libc::TCA_XSTATS,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_XSTATS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:302:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Xstats = libc::TCA_XSTATS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_RATE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9317,"byte_end":9325,"line_start":303,"line_end":303,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Rate = libc::TCA_RATE,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_RATE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:303:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Rate = libc::TCA_RATE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_FCNT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9344,"byte_end":9352,"line_start":304,"line_end":304,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Fcnt = libc::TCA_FCNT,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_FCNT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:304:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m304\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Fcnt = libc::TCA_FCNT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_STATS2` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9373,"byte_end":9383,"line_start":305,"line_end":305,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Stats2 = libc::TCA_STATS2,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_STATS2` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:305:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stats2 = libc::TCA_STATS2,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `TCA_STAB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9402,"byte_end":9410,"line_start":306,"line_end":306,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Stab = libc::TCA_STAB,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `TCA_STAB` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:306:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Stab = libc::TCA_STAB,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_UNSPEC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":143923,"byte_end":143951,"line_start":4018,"line_end":4018,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const AF_UNSPEC: ::c_int = 0;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `AF_UNSPEC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9619,"byte_end":9629,"line_start":314,"line_end":314,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::NDA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9619,"byte_end":9629,"line_start":314,"line_end":314,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Unspec = libc::NDA_UNSPEC,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"AF_UNSPEC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_UNSPEC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:314:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m314\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unspec = libc::NDA_UNSPEC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_UNSPEC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4018:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4018\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_UNSPEC: ::c_int = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_UNSPEC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NDA_DST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":180113,"byte_end":180139,"line_start":4953,"line_end":4953,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTA_DST: ::c_int = 0x1;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTA_DST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9647,"byte_end":9654,"line_start":315,"line_end":315,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Dst = libc::NDA_DST,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9647,"byte_end":9654,"line_start":315,"line_end":315,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Dst = libc::NDA_DST,","highlight_start":17,"highlight_end":24}],"label":null,"suggested_replacement":"RTA_DST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_DST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:315:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dst = libc::NDA_DST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTA_DST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4953:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4953\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTA_DST: ::c_int = 0x1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTA_DST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NDA_LLADDR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9675,"byte_end":9685,"line_start":316,"line_end":316,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Lladdr = libc::NDA_LLADDR,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_LLADDR` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:316:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m316\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Lladdr = libc::NDA_LLADDR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_CACHEINFO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9709,"byte_end":9722,"line_start":317,"line_end":317,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Cacheinfo = libc::NDA_CACHEINFO,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_CACHEINFO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:317:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m317\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cacheinfo = libc::NDA_CACHEINFO,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_PROBES` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9743,"byte_end":9753,"line_start":318,"line_end":318,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Probes = libc::NDA_PROBES,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_PROBES` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:318:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m318\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Probes = libc::NDA_PROBES,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_VLAN` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9772,"byte_end":9780,"line_start":319,"line_end":319,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Vlan = libc::NDA_VLAN,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_VLAN` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:319:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m319\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Vlan = libc::NDA_VLAN,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_PORT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9799,"byte_end":9807,"line_start":320,"line_end":320,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Port = libc::NDA_PORT,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_PORT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:320:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m320\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Port = libc::NDA_PORT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_VNI` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9825,"byte_end":9832,"line_start":321,"line_end":321,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"    Vni = libc::NDA_VNI,","highlight_start":17,"highlight_end":24}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_VNI` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:321:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m321\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Vni = libc::NDA_VNI,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NDA_IFINDEX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":9854,"byte_end":9865,"line_start":322,"line_end":322,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Ifindex = libc::NDA_IFINDEX,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NDA_IFINDEX` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:322:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m322\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ifindex = libc::NDA_IFINDEX,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_NETROM` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10174,"byte_end":10187,"line_start":334,"line_end":334,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Netrom = libc::ARPHRD_NETROM,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_NETROM` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:334:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Netrom = libc::ARPHRD_NETROM,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_ETHER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10207,"byte_end":10219,"line_start":335,"line_end":335,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    Ether = libc::ARPHRD_ETHER,","highlight_start":19,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_ETHER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:335:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m335\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ether = libc::ARPHRD_ETHER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_EETHER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10240,"byte_end":10253,"line_start":336,"line_end":336,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Eether = libc::ARPHRD_EETHER,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_EETHER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:336:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m336\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Eether = libc::ARPHRD_EETHER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_AX25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10272,"byte_end":10283,"line_start":337,"line_end":337,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    AX25 = libc::ARPHRD_AX25,","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_AX25` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:337:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m337\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    AX25 = libc::ARPHRD_AX25,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_PRONET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10304,"byte_end":10317,"line_start":338,"line_end":338,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Pronet = libc::ARPHRD_PRONET,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_PRONET` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:338:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m338\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Pronet = libc::ARPHRD_PRONET,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_CHAOS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10337,"byte_end":10349,"line_start":339,"line_end":339,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    Chaos = libc::ARPHRD_CHAOS,","highlight_start":19,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_CHAOS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:339:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m339\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Chaos = libc::ARPHRD_CHAOS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_IEEE802` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10371,"byte_end":10385,"line_start":340,"line_end":340,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"    Ieee802 = libc::ARPHRD_IEEE802,","highlight_start":21,"highlight_end":35}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_IEEE802` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:340:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m340\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ieee802 = libc::ARPHRD_IEEE802,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_ARCNET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10406,"byte_end":10419,"line_start":341,"line_end":341,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"    Arcnet = libc::ARPHRD_ARCNET,","highlight_start":20,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_ARCNET` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:341:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Arcnet = libc::ARPHRD_ARCNET,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_APPLETLK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10442,"byte_end":10457,"line_start":342,"line_end":342,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Appletlk = libc::ARPHRD_APPLETLK,","highlight_start":22,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_APPLETLK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:342:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Appletlk = libc::ARPHRD_APPLETLK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_DLCI` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10476,"byte_end":10487,"line_start":343,"line_end":343,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    Dlci = libc::ARPHRD_DLCI,","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_DLCI` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:343:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dlci = libc::ARPHRD_DLCI,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_APPLETLK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10505,"byte_end":10520,"line_start":344,"line_end":344,"column_start":17,"column_end":32,"is_primary":true,"text":[{"text":"    Atm = libc::ARPHRD_APPLETLK,","highlight_start":17,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_APPLETLK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:344:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Atm = libc::ARPHRD_APPLETLK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_METRICOM` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10543,"byte_end":10558,"line_start":345,"line_end":345,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Metricom = libc::ARPHRD_METRICOM,","highlight_start":22,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_METRICOM` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:345:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Metricom = libc::ARPHRD_METRICOM,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_IEEE1394` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10581,"byte_end":10596,"line_start":346,"line_end":346,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Ieee1394 = libc::ARPHRD_IEEE1394,","highlight_start":22,"highlight_end":37}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_IEEE1394` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:346:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ieee1394 = libc::ARPHRD_IEEE1394,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_EUI64` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10616,"byte_end":10628,"line_start":347,"line_end":347,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    Eui64 = libc::ARPHRD_EUI64,","highlight_start":19,"highlight_end":31}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_EUI64` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:347:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Eui64 = libc::ARPHRD_EUI64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_INFINIBAND` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10653,"byte_end":10670,"line_start":348,"line_end":348,"column_start":24,"column_end":41,"is_primary":true,"text":[{"text":"    Infiniband = libc::ARPHRD_INFINIBAND,","highlight_start":24,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_INFINIBAND` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:348:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Infiniband = libc::ARPHRD_INFINIBAND,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_LOOPBACK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/mod.rs","byte_start":8575,"byte_end":8611,"line_start":303,"line_end":303,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub const INADDR_LOOPBACK: in_addr_t = 2130706433;","highlight_start":1,"highlight_end":37}],"label":"similarly named constant `INADDR_LOOPBACK` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10694,"byte_end":10709,"line_start":350,"line_end":350,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Loopback = libc::ARPHRD_LOOPBACK,","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10694,"byte_end":10709,"line_start":350,"line_end":350,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"    Loopback = libc::ARPHRD_LOOPBACK,","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":"INADDR_LOOPBACK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_LOOPBACK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:350:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Loopback = libc::ARPHRD_LOOPBACK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `INADDR_LOOPBACK`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/mod.rs:303:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m303\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const INADDR_LOOPBACK: in_addr_t = 2130706433;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `INADDR_LOOPBACK` defined here\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_VOID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10790,"byte_end":10801,"line_start":353,"line_end":353,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    Void = libc::ARPHRD_VOID,","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_VOID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:353:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m353\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Void = libc::ARPHRD_VOID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `ARPHRD_NONE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":10820,"byte_end":10831,"line_start":354,"line_end":354,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    None = libc::ARPHRD_NONE,","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `ARPHRD_NONE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:354:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    None = libc::ARPHRD_NONE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_MASTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11484,"byte_end":11494,"line_start":371,"line_end":371,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Master = libc::IFF_MASTER as libc::c_uint,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_MASTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:371:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Master = libc::IFF_MASTER as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_SLAVE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11530,"byte_end":11539,"line_start":372,"line_end":372,"column_start":19,"column_end":28,"is_primary":true,"text":[{"text":"    Slave = libc::IFF_SLAVE as libc::c_uint,","highlight_start":19,"highlight_end":28}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_SLAVE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:372:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m372\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Slave = libc::IFF_SLAVE as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_PORTSEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11630,"byte_end":11641,"line_start":374,"line_end":374,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Portsel = libc::IFF_PORTSEL as libc::c_uint,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_PORTSEL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:374:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Portsel = libc::IFF_PORTSEL as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_AUTOMEDIA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11681,"byte_end":11694,"line_start":375,"line_end":375,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Automedia = libc::IFF_AUTOMEDIA as libc::c_uint,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_AUTOMEDIA` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:375:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m375\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Automedia = libc::IFF_AUTOMEDIA as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_DYNAMIC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":177888,"byte_end":177918,"line_start":4892,"line_end":4892,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTF_DYNAMIC: ::c_int = 0x10;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTF_DYNAMIC` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11732,"byte_end":11743,"line_start":376,"line_end":376,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Dynamic = libc::IFF_DYNAMIC as libc::c_uint,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11732,"byte_end":11743,"line_start":376,"line_end":376,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Dynamic = libc::IFF_DYNAMIC as libc::c_uint,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"RTF_DYNAMIC","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_DYNAMIC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:376:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m376\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dynamic = libc::IFF_DYNAMIC as libc::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_DYNAMIC`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4892:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4892\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_DYNAMIC: ::c_int = 0x10;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_DYNAMIC` defined here\u001b[0m\n\n"}
{"message":"cannot find value `IFF_LOWER_UP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11781,"byte_end":11793,"line_start":377,"line_end":377,"column_start":21,"column_end":33,"is_primary":true,"text":[{"text":"    LowerUp = libc::IFF_LOWER_UP as libc::c_uint,","highlight_start":21,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_LOWER_UP` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:377:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m377\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LowerUp = libc::IFF_LOWER_UP as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_DORMANT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11831,"byte_end":11842,"line_start":378,"line_end":378,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Dormant = libc::IFF_DORMANT as libc::c_uint,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_DORMANT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:378:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dormant = libc::IFF_DORMANT as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `IFF_ECHO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":11877,"byte_end":11885,"line_start":379,"line_end":379,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    Echo = libc::IFF_ECHO as libc::c_uint,","highlight_start":18,"highlight_end":26}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `IFF_ECHO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:379:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m379\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Echo = libc::IFF_ECHO as libc::c_uint,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/mod.rs","byte_start":15970,"byte_end":16000,"line_start":502,"line_end":502,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const REG_NEWLINE: ::c_int = 0o0010;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `REG_NEWLINE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12529,"byte_end":12540,"line_start":410,"line_end":410,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Newlink = libc::RTM_NEWLINK,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12529,"byte_end":12540,"line_start":410,"line_end":410,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Newlink = libc::RTM_NEWLINK,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"REG_NEWLINE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:410:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m410\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newlink = libc::RTM_NEWLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `REG_NEWLINE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/mod.rs:502:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m502\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const REG_NEWLINE: ::c_int = 0o0010;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `REG_NEWLINE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12562,"byte_end":12573,"line_start":411,"line_end":411,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Dellink = libc::RTM_DELLINK,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:411:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m411\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dellink = libc::RTM_DELLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12595,"byte_end":12606,"line_start":412,"line_end":412,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Getlink = libc::RTM_GETLINK,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:412:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getlink = libc::RTM_GETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_SETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12628,"byte_end":12639,"line_start":413,"line_end":413,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Setlink = libc::RTM_SETLINK,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_SETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:413:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Setlink = libc::RTM_SETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETADDR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179465,"byte_end":179495,"line_start":4934,"line_end":4934,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_DELADDR: ::c_int = 0xd;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_DELADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12727,"byte_end":12738,"line_start":416,"line_end":416,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Getaddr = libc::RTM_GETADDR,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12727,"byte_end":12738,"line_start":416,"line_end":416,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Getaddr = libc::RTM_GETADDR,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"RTM_DELADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETADDR` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:416:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m416\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getaddr = libc::RTM_GETADDR,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4934:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4934\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELADDR: ::c_int = 0xd;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWROUTE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12761,"byte_end":12773,"line_start":417,"line_end":417,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Newroute = libc::RTM_NEWROUTE,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWROUTE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:417:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m417\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newroute = libc::RTM_NEWROUTE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELROUTE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179061,"byte_end":179090,"line_start":4923,"line_end":4923,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const RTM_DELETE: ::c_int = 0x2;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `RTM_DELETE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12796,"byte_end":12808,"line_start":418,"line_end":418,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delroute = libc::RTM_DELROUTE,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12796,"byte_end":12808,"line_start":418,"line_end":418,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delroute = libc::RTM_DELROUTE,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"RTM_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELROUTE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:418:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m418\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delroute = libc::RTM_DELROUTE,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELETE`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4923:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4923\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELETE: ::c_int = 0x2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELETE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETROUTE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12831,"byte_end":12843,"line_start":419,"line_end":419,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Getroute = libc::RTM_GETROUTE,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETROUTE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:419:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m419\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getroute = libc::RTM_GETROUTE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWNEIGH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12866,"byte_end":12878,"line_start":420,"line_end":420,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Newneigh = libc::RTM_NEWNEIGH,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWNEIGH` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:420:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newneigh = libc::RTM_NEWNEIGH,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELNEIGH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179061,"byte_end":179090,"line_start":4923,"line_end":4923,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const RTM_DELETE: ::c_int = 0x2;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `RTM_DELETE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12901,"byte_end":12913,"line_start":421,"line_end":421,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delneigh = libc::RTM_DELNEIGH,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12901,"byte_end":12913,"line_start":421,"line_end":421,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delneigh = libc::RTM_DELNEIGH,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"RTM_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELNEIGH` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:421:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m421\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delneigh = libc::RTM_DELNEIGH,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELETE`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4923:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4923\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELETE: ::c_int = 0x2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELETE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETNEIGH` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12936,"byte_end":12948,"line_start":422,"line_end":422,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Getneigh = libc::RTM_GETNEIGH,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETNEIGH` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:422:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getneigh = libc::RTM_GETNEIGH,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWRULE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12970,"byte_end":12981,"line_start":423,"line_end":423,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Newrule = libc::RTM_NEWRULE,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWRULE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:423:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m423\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newrule = libc::RTM_NEWRULE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELRULE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179061,"byte_end":179090,"line_start":4923,"line_end":4923,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"pub const RTM_DELETE: ::c_int = 0x2;","highlight_start":1,"highlight_end":30}],"label":"similarly named constant `RTM_DELETE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13003,"byte_end":13014,"line_start":424,"line_end":424,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Delrule = libc::RTM_DELRULE,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13003,"byte_end":13014,"line_start":424,"line_end":424,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Delrule = libc::RTM_DELRULE,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"RTM_DELETE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELRULE` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:424:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m424\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delrule = libc::RTM_DELRULE,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELETE`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4923:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4923\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELETE: ::c_int = 0x2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELETE` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETRULE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13036,"byte_end":13047,"line_start":425,"line_end":425,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Getrule = libc::RTM_GETRULE,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETRULE` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:425:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getrule = libc::RTM_GETRULE,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWQDISC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179427,"byte_end":179457,"line_start":4933,"line_end":4933,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_NEWADDR: ::c_int = 0xc;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_NEWADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13070,"byte_end":13082,"line_start":426,"line_end":426,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Newqdisc = libc::RTM_NEWQDISC,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13070,"byte_end":13082,"line_start":426,"line_end":426,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Newqdisc = libc::RTM_NEWQDISC,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"RTM_NEWADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWQDISC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:426:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m426\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newqdisc = libc::RTM_NEWQDISC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_NEWADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4933:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4933\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_NEWADDR: ::c_int = 0xc;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_NEWADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELQDISC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179465,"byte_end":179495,"line_start":4934,"line_end":4934,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_DELADDR: ::c_int = 0xd;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_DELADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13105,"byte_end":13117,"line_start":427,"line_end":427,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delqdisc = libc::RTM_DELQDISC,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13105,"byte_end":13117,"line_start":427,"line_end":427,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Delqdisc = libc::RTM_DELQDISC,","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"RTM_DELADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELQDISC` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:427:22\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delqdisc = libc::RTM_DELQDISC,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4934:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4934\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELADDR: ::c_int = 0xd;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETQDISC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13140,"byte_end":13152,"line_start":428,"line_end":428,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    Getqdisc = libc::RTM_GETQDISC,","highlight_start":22,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETQDISC` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:428:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getqdisc = libc::RTM_GETQDISC,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWTCLASS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13176,"byte_end":13189,"line_start":429,"line_end":429,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Newtclass = libc::RTM_NEWTCLASS,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWTCLASS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:429:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newtclass = libc::RTM_NEWTCLASS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELTCLASS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13213,"byte_end":13226,"line_start":430,"line_end":430,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Deltclass = libc::RTM_DELTCLASS,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELTCLASS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:430:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Deltclass = libc::RTM_DELTCLASS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETTCLASS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13250,"byte_end":13263,"line_start":431,"line_end":431,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Gettclass = libc::RTM_GETTCLASS,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETTCLASS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:431:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m431\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Gettclass = libc::RTM_GETTCLASS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWTFILTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13288,"byte_end":13302,"line_start":432,"line_end":432,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Newtfilter = libc::RTM_NEWTFILTER,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWTFILTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:432:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m432\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newtfilter = libc::RTM_NEWTFILTER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELTFILTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13327,"byte_end":13341,"line_start":433,"line_end":433,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Deltfilter = libc::RTM_DELTFILTER,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELTFILTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:433:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m433\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Deltfilter = libc::RTM_DELTFILTER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETTFILTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13366,"byte_end":13380,"line_start":434,"line_end":434,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Gettfilter = libc::RTM_GETTFILTER,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETTFILTER` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:434:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m434\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Gettfilter = libc::RTM_GETTFILTER,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWACTION` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13404,"byte_end":13417,"line_start":435,"line_end":435,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Newaction = libc::RTM_NEWACTION,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWACTION` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:435:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m435\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newaction = libc::RTM_NEWACTION,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELACTION` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13441,"byte_end":13454,"line_start":436,"line_end":436,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Delaction = libc::RTM_DELACTION,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELACTION` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:436:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m436\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delaction = libc::RTM_DELACTION,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETACTION` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13478,"byte_end":13491,"line_start":437,"line_end":437,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Getaction = libc::RTM_GETACTION,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETACTION` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:437:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getaction = libc::RTM_GETACTION,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWPREFIX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13515,"byte_end":13528,"line_start":438,"line_end":438,"column_start":23,"column_end":36,"is_primary":true,"text":[{"text":"    Newprefix = libc::RTM_NEWPREFIX,","highlight_start":23,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWPREFIX` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:438:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newprefix = libc::RTM_NEWPREFIX,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETMULTICAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":178623,"byte_end":178655,"line_start":4910,"line_end":4910,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub const RTF_MULTICAST: ::c_int = 0x800000;","highlight_start":1,"highlight_end":33}],"label":"similarly named constant `RTF_MULTICAST` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13555,"byte_end":13571,"line_start":439,"line_end":439,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Getmulticast = libc::RTM_GETMULTICAST,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13555,"byte_end":13571,"line_start":439,"line_end":439,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Getmulticast = libc::RTM_GETMULTICAST,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":"RTF_MULTICAST","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETMULTICAST` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:439:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getmulticast = libc::RTM_GETMULTICAST,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTF_MULTICAST`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4910:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4910\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTF_MULTICAST: ::c_int = 0x800000;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTF_MULTICAST` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETANYCAST` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13596,"byte_end":13610,"line_start":440,"line_end":440,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Getanycast = libc::RTM_GETANYCAST,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETANYCAST` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:440:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getanycast = libc::RTM_GETANYCAST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWNEIGHTBL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13636,"byte_end":13651,"line_start":441,"line_end":441,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"    Newneightbl = libc::RTM_NEWNEIGHTBL,","highlight_start":25,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWNEIGHTBL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:441:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newneightbl = libc::RTM_NEWNEIGHTBL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETNEIGHTBL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13677,"byte_end":13692,"line_start":442,"line_end":442,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"    Getneightbl = libc::RTM_GETNEIGHTBL,","highlight_start":25,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETNEIGHTBL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:442:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getneightbl = libc::RTM_GETNEIGHTBL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_SETNEIGHTBL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13718,"byte_end":13733,"line_start":443,"line_end":443,"column_start":25,"column_end":40,"is_primary":true,"text":[{"text":"    Setneightbl = libc::RTM_SETNEIGHTBL,","highlight_start":25,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_SETNEIGHTBL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:443:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Setneightbl = libc::RTM_SETNEIGHTBL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWNDUSEROPT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13760,"byte_end":13776,"line_start":444,"line_end":444,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Newnduseropt = libc::RTM_NEWNDUSEROPT,","highlight_start":26,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWNDUSEROPT` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:444:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newnduseropt = libc::RTM_NEWNDUSEROPT,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWADDRLABEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179427,"byte_end":179457,"line_start":4933,"line_end":4933,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_NEWADDR: ::c_int = 0xc;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_NEWADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13803,"byte_end":13819,"line_start":445,"line_end":445,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Newaddrlabel = libc::RTM_NEWADDRLABEL,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13803,"byte_end":13819,"line_start":445,"line_end":445,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Newaddrlabel = libc::RTM_NEWADDRLABEL,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":"RTM_NEWADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWADDRLABEL` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:445:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newaddrlabel = libc::RTM_NEWADDRLABEL,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_NEWADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4933:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4933\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_NEWADDR: ::c_int = 0xc;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_NEWADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELADDRLABEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179465,"byte_end":179495,"line_start":4934,"line_end":4934,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_DELADDR: ::c_int = 0xd;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_DELADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13846,"byte_end":13862,"line_start":446,"line_end":446,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Deladdrlabel = libc::RTM_DELADDRLABEL,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13846,"byte_end":13862,"line_start":446,"line_end":446,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Deladdrlabel = libc::RTM_DELADDRLABEL,","highlight_start":26,"highlight_end":42}],"label":null,"suggested_replacement":"RTM_DELADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELADDRLABEL` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:446:26\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Deladdrlabel = libc::RTM_DELADDRLABEL,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4934:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4934\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELADDR: ::c_int = 0xd;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETADDRLABEL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13889,"byte_end":13905,"line_start":447,"line_end":447,"column_start":26,"column_end":42,"is_primary":true,"text":[{"text":"    Getaddrlabel = libc::RTM_GETADDRLABEL,","highlight_start":26,"highlight_end":42}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETADDRLABEL` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:447:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getaddrlabel = libc::RTM_GETADDRLABEL,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETDCB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179135,"byte_end":179161,"line_start":4925,"line_end":4925,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTM_GET: ::c_int = 0x4;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTM_GET` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13926,"byte_end":13936,"line_start":448,"line_end":448,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Getdcb = libc::RTM_GETDCB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13926,"byte_end":13936,"line_start":448,"line_end":448,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Getdcb = libc::RTM_GETDCB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"RTM_GET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETDCB` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:448:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m448\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getdcb = libc::RTM_GETDCB,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_GET`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4925:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4925\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_GET: ::c_int = 0x4;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_GET` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_SETDCB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13957,"byte_end":13967,"line_start":449,"line_end":449,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Setdcb = libc::RTM_SETDCB,","highlight_start":20,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_SETDCB` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:449:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Setdcb = libc::RTM_SETDCB,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWNETCONF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":13992,"byte_end":14006,"line_start":450,"line_end":450,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Newnetconf = libc::RTM_NEWNETCONF,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWNETCONF` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:450:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newnetconf = libc::RTM_NEWNETCONF,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETNETCONF` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14031,"byte_end":14045,"line_start":451,"line_end":451,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    Getnetconf = libc::RTM_GETNETCONF,","highlight_start":24,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETNETCONF` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:451:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m451\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getnetconf = libc::RTM_GETNETCONF,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWMDB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179427,"byte_end":179457,"line_start":4933,"line_end":4933,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_NEWADDR: ::c_int = 0xc;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_NEWADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14066,"byte_end":14076,"line_start":452,"line_end":452,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Newmdb = libc::RTM_NEWMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14066,"byte_end":14076,"line_start":452,"line_end":452,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Newmdb = libc::RTM_NEWMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"RTM_NEWADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWMDB` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:452:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m452\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newmdb = libc::RTM_NEWMDB,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_NEWADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4933:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4933\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_NEWADDR: ::c_int = 0xc;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_NEWADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELMDB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179465,"byte_end":179495,"line_start":4934,"line_end":4934,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"pub const RTM_DELADDR: ::c_int = 0xd;","highlight_start":1,"highlight_end":31}],"label":"similarly named constant `RTM_DELADDR` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14097,"byte_end":14107,"line_start":453,"line_end":453,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Delmdb = libc::RTM_DELMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14097,"byte_end":14107,"line_start":453,"line_end":453,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Delmdb = libc::RTM_DELMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"RTM_DELADDR","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELMDB` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:453:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m453\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delmdb = libc::RTM_DELMDB,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_DELADDR`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4934:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4934\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_DELADDR: ::c_int = 0xd;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_DELADDR` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETMDB` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":179135,"byte_end":179161,"line_start":4925,"line_end":4925,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"pub const RTM_GET: ::c_int = 0x4;","highlight_start":1,"highlight_end":27}],"label":"similarly named constant `RTM_GET` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14128,"byte_end":14138,"line_start":454,"line_end":454,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Getmdb = libc::RTM_GETMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14128,"byte_end":14138,"line_start":454,"line_end":454,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    Getmdb = libc::RTM_GETMDB,","highlight_start":20,"highlight_end":30}],"label":null,"suggested_replacement":"RTM_GET","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETMDB` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:454:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getmdb = libc::RTM_GETMDB,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `RTM_GET`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4925:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4925\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const RTM_GET: ::c_int = 0x4;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `RTM_GET` defined here\u001b[0m\n\n"}
{"message":"cannot find value `RTM_NEWNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14160,"byte_end":14171,"line_start":455,"line_end":455,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Newnsid = libc::RTM_NEWNSID,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_NEWNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:455:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newnsid = libc::RTM_NEWNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_DELNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14193,"byte_end":14204,"line_start":456,"line_end":456,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Delnsid = libc::RTM_DELNSID,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_DELNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:456:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Delnsid = libc::RTM_DELNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `RTM_GETNSID` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":14226,"byte_end":14237,"line_start":457,"line_end":457,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"    Getnsid = libc::RTM_GETNSID,","highlight_start":21,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `RTM_GETNSID` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:457:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m457\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Getnsid = libc::RTM_GETNSID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":144489,"byte_end":144517,"line_start":4035,"line_end":4035,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"pub const AF_HYLINK: ::c_int = 15;","highlight_start":1,"highlight_end":29}],"label":"similarly named constant `AF_HYLINK` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":294,"byte_end":304,"line_start":12,"line_end":12,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"    Netlink = libc::AF_NETLINK,","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":294,"byte_end":304,"line_start":12,"line_end":12,"column_start":21,"column_end":31,"is_primary":true,"text":[{"text":"    Netlink = libc::AF_NETLINK,","highlight_start":21,"highlight_end":31}],"label":null,"suggested_replacement":"AF_HYLINK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:12:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Netlink = libc::AF_NETLINK,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_HYLINK`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4035:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4035\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_HYLINK: ::c_int = 15;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_HYLINK` defined here\u001b[0m\n\n"}
{"message":"cannot find value `AF_X25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":322,"byte_end":328,"line_start":13,"line_end":13,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    X25 = libc::AF_X25,","highlight_start":17,"highlight_end":23}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_X25` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:13:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    X25 = libc::AF_X25,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_AX25` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":347,"byte_end":354,"line_start":14,"line_end":14,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    Ax25 = libc::AF_AX25,","highlight_start":18,"highlight_end":25}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_AX25` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:14:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ax25 = libc::AF_AX25,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_ATMPVC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":375,"byte_end":384,"line_start":15,"line_end":15,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"    Atmpvc = libc::AF_ATMPVC,","highlight_start":20,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ATMPVC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:15:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Atmpvc = libc::AF_ATMPVC,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_PACKET` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":441,"byte_end":450,"line_start":17,"line_end":17,"column_start":20,"column_end":29,"is_primary":true,"text":[{"text":"    Packet = libc::AF_PACKET,","highlight_start":20,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_PACKET` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:17:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Packet = libc::AF_PACKET,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `AF_ALG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":144425,"byte_end":144450,"line_start":4033,"line_end":4033,"column_start":1,"column_end":26,"is_primary":false,"text":[{"text":"pub const AF_DLI: ::c_int = 13;","highlight_start":1,"highlight_end":26}],"label":"similarly named constant `AF_DLI` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":468,"byte_end":474,"line_start":18,"line_end":18,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    Alg = libc::AF_ALG,","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":468,"byte_end":474,"line_start":18,"line_end":18,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    Alg = libc::AF_ALG,","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"AF_DLI","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `AF_ALG` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:18:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Alg = libc::AF_ALG,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `AF_DLI`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4033:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4033\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const AF_DLI: ::c_int = 13;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `AF_DLI` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_ROUTE` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":604,"byte_end":617,"line_start":24,"line_end":24,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    Route = libc::NETLINK_ROUTE,","highlight_start":19,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_ROUTE` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:24:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Route = libc::NETLINK_ROUTE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_UNUSED` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":638,"byte_end":652,"line_start":25,"line_end":25,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"    Unused = libc::NETLINK_UNUSED,","highlight_start":20,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_UNUSED` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:25:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Unused = libc::NETLINK_UNUSED,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_USERSOCK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":675,"byte_end":691,"line_start":26,"line_end":26,"column_start":22,"column_end":38,"is_primary":true,"text":[{"text":"    Usersock = libc::NETLINK_USERSOCK,","highlight_start":22,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_USERSOCK` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:26:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Usersock = libc::NETLINK_USERSOCK,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_FIREWALL` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":714,"byte_end":730,"line_start":27,"line_end":27,"column_start":22,"column_end":38,"is_primary":true,"text":[{"text":"    Firewall = libc::NETLINK_FIREWALL,","highlight_start":22,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_FIREWALL` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:27:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Firewall = libc::NETLINK_FIREWALL,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_SOCK_DIAG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":759,"byte_end":776,"line_start":28,"line_end":28,"column_start":28,"column_end":45,"is_primary":true,"text":[{"text":"    SockOrInetDiag = libc::NETLINK_SOCK_DIAG,","highlight_start":28,"highlight_end":45}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_SOCK_DIAG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:28:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SockOrInetDiag = libc::NETLINK_SOCK_DIAG,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_NFLOG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":796,"byte_end":809,"line_start":29,"line_end":29,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    Nflog = libc::NETLINK_NFLOG,","highlight_start":19,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_NFLOG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:29:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Nflog = libc::NETLINK_NFLOG,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_XFRM` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":828,"byte_end":840,"line_start":30,"line_end":30,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    Xfrm = libc::NETLINK_XFRM,","highlight_start":18,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_XFRM` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:30:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Xfrm = libc::NETLINK_XFRM,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_SELINUX` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":862,"byte_end":877,"line_start":31,"line_end":31,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"    Selinux = libc::NETLINK_SELINUX,","highlight_start":21,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_SELINUX` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:31:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Selinux = libc::NETLINK_SELINUX,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_ISCSI` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":897,"byte_end":910,"line_start":32,"line_end":32,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    Iscsi = libc::NETLINK_ISCSI,","highlight_start":19,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_ISCSI` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:32:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Iscsi = libc::NETLINK_ISCSI,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_AUDIT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":930,"byte_end":943,"line_start":33,"line_end":33,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    Audit = libc::NETLINK_AUDIT,","highlight_start":19,"highlight_end":32}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_AUDIT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:33:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Audit = libc::NETLINK_AUDIT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_FIB_LOOKUP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":967,"byte_end":985,"line_start":34,"line_end":34,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"    FibLookup = libc::NETLINK_FIB_LOOKUP,","highlight_start":23,"highlight_end":41}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_FIB_LOOKUP` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:34:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    FibLookup = libc::NETLINK_FIB_LOOKUP,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_CONNECTOR` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1009,"byte_end":1026,"line_start":35,"line_end":35,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"    Connector = libc::NETLINK_CONNECTOR,","highlight_start":23,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_CONNECTOR` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:35:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Connector = libc::NETLINK_CONNECTOR,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_NETFILTER` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1050,"byte_end":1067,"line_start":36,"line_end":36,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"    Netfilter = libc::NETLINK_NETFILTER,","highlight_start":23,"highlight_end":40}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_NETFILTER` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:36:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Netfilter = libc::NETLINK_NETFILTER,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_IP6_FW` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1087,"byte_end":1101,"line_start":37,"line_end":37,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"    Ip6Fw = libc::NETLINK_IP6_FW,","highlight_start":19,"highlight_end":33}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_IP6_FW` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:37:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ip6Fw = libc::NETLINK_IP6_FW,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_DNRTMSG` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1123,"byte_end":1138,"line_start":38,"line_end":38,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"    Dnrtmsg = libc::NETLINK_DNRTMSG,","highlight_start":21,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_DNRTMSG` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:38:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dnrtmsg = libc::NETLINK_DNRTMSG,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_KOBJECT_UEVENT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1166,"byte_end":1188,"line_start":39,"line_end":39,"column_start":27,"column_end":49,"is_primary":true,"text":[{"text":"    KobjectUevent = libc::NETLINK_KOBJECT_UEVENT,","highlight_start":27,"highlight_end":49}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_KOBJECT_UEVENT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:39:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    KobjectUevent = libc::NETLINK_KOBJECT_UEVENT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_GENERIC` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1210,"byte_end":1225,"line_start":40,"line_end":40,"column_start":21,"column_end":36,"is_primary":true,"text":[{"text":"    Generic = libc::NETLINK_GENERIC,","highlight_start":21,"highlight_end":36}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_GENERIC` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:40:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Generic = libc::NETLINK_GENERIC,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_SCSITRANSPORT` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1253,"byte_end":1274,"line_start":41,"line_end":41,"column_start":27,"column_end":48,"is_primary":true,"text":[{"text":"    Scsitransport = libc::NETLINK_SCSITRANSPORT,","highlight_start":27,"highlight_end":48}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_SCSITRANSPORT` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:41:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Scsitransport = libc::NETLINK_SCSITRANSPORT,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_ECRYPTFS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1297,"byte_end":1313,"line_start":42,"line_end":42,"column_start":22,"column_end":38,"is_primary":true,"text":[{"text":"    Ecryptfs = libc::NETLINK_ECRYPTFS,","highlight_start":22,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_ECRYPTFS` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:42:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ecryptfs = libc::NETLINK_ECRYPTFS,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_RDMA` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1332,"byte_end":1344,"line_start":43,"line_end":43,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    Rdma = libc::NETLINK_RDMA,","highlight_start":18,"highlight_end":30}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_RDMA` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:43:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Rdma = libc::NETLINK_RDMA,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_CRYPTO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs","byte_start":1365,"byte_end":1379,"line_start":44,"line_end":44,"column_start":20,"column_end":34,"is_primary":true,"text":[{"text":"    Crypto = libc::NETLINK_CRYPTO,","highlight_start":20,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_CRYPTO` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/socket.rs:44:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Crypto = libc::NETLINK_CRYPTO,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLA_ALIGNTO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/mod.rs","byte_start":3000,"byte_end":3011,"line_start":63,"line_end":63,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"    (len + libc::NLA_ALIGNTO as usize - 1) & !(libc::NLA_ALIGNTO as usize - 1)","highlight_start":18,"highlight_end":29}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLA_ALIGNTO` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/mod.rs:63:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (len + libc::NLA_ALIGNTO as usize - 1) & !(libc::NLA_ALIGNTO as usiz\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLA_ALIGNTO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/mod.rs","byte_start":3036,"byte_end":3047,"line_start":63,"line_end":63,"column_start":54,"column_end":65,"is_primary":true,"text":[{"text":"    (len + libc::NLA_ALIGNTO as usize - 1) & !(libc::NLA_ALIGNTO as usize - 1)","highlight_start":54,"highlight_end":65}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLA_ALIGNTO` in crate `libc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/mod.rs:63:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mize - 1) & !(libc::NLA_ALIGNTO as usize - 1)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find type `sockaddr_nl` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2725,"byte_end":2738,"line_start":77,"line_end":77,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            pub struct $i { $($field)* }","highlight_start":13,"highlight_end":26}],"label":"similarly named struct `sockaddr_dl` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2232,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        s!(it: $(#[$attr])* pub $t $i { $($field)* });","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":8517,"byte_end":34616,"line_start":243,"line_end":1184,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"s! {","highlight_start":1,"highlight_end":5},{"text":"    pub struct ip_mreq {","highlight_start":1,"highlight_end":25},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreqn {","highlight_start":1,"highlight_end":26},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_address: in_addr,","highlight_start":1,"highlight_end":34},{"text":"        pub imr_ifindex: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreq_source {","highlight_start":1,"highlight_end":32},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_sourceaddr: in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct aiocb {","highlight_start":1,"highlight_end":23},{"text":"        pub aio_fildes: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_buf: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_nbytes: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_reqprio: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_sigevent: sigevent,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_lio_opcode: ::c_int","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct glob_t {","highlight_start":1,"highlight_end":24},{"text":"        pub gl_pathc:  ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused1: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_offs:   ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused2: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_pathv:  *mut *mut ::c_char,","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused3: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused4: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused5: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused6: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused7: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused8: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct addrinfo {","highlight_start":1,"highlight_end":26},{"text":"        pub ai_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub ai_family: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ai_socktype: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_protocol: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_addrlen: ::socklen_t,","highlight_start":1,"highlight_end":37},{"text":"        pub ai_canonname: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub ai_addr: *mut ::sockaddr,","highlight_start":1,"highlight_end":38},{"text":"        pub ai_next: *mut addrinfo,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_timebase_info {","highlight_start":1,"highlight_end":36},{"text":"        pub numer: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub denom: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stat {","highlight_start":1,"highlight_end":22},{"text":"        pub st_dev: dev_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_mode: mode_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_nlink: nlink_t,","highlight_start":1,"highlight_end":31},{"text":"        pub st_ino: ino_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_gid: ::gid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_rdev: dev_t,","highlight_start":1,"highlight_end":28},{"text":"        pub st_atime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_atime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_mtime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_mtime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_ctime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_ctime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_birthtime: time_t,","highlight_start":1,"highlight_end":34},{"text":"        pub st_birthtime_nsec: c_long,","highlight_start":1,"highlight_end":39},{"text":"        pub st_size: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_blocks: ::blkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_blksize: blksize_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_flags: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub st_gen: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub st_lspare: i32,","highlight_start":1,"highlight_end":28},{"text":"        pub st_qspare: [i64; 2],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_mutexattr_t {","highlight_start":1,"highlight_end":37},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; 8],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_condattr_t {","highlight_start":1,"highlight_end":36},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_CONDATTR_SIZE__],","highlight_start":1,"highlight_end":51},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_rwlockattr_t {","highlight_start":1,"highlight_end":38},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_RWLOCKATTR_SIZE__],","highlight_start":1,"highlight_end":53},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct siginfo_t {","highlight_start":1,"highlight_end":27},{"text":"        pub si_signo: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_errno: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_code: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub si_pid: ::pid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_status: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub si_addr: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        //Requires it to be union for tests","highlight_start":1,"highlight_end":44},{"text":"        //pub si_value: ::sigval,","highlight_start":1,"highlight_end":34},{"text":"        _pad: [usize; 9],","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sigaction {","highlight_start":1,"highlight_end":27},{"text":"        // FIXME: this field is actually a union","highlight_start":1,"highlight_end":49},{"text":"        pub sa_sigaction: ::sighandler_t,","highlight_start":1,"highlight_end":42},{"text":"        pub sa_mask: sigset_t,","highlight_start":1,"highlight_end":31},{"text":"        pub sa_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stack_t {","highlight_start":1,"highlight_end":25},{"text":"        pub ss_sp: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_size: ::size_t,","highlight_start":1,"highlight_end":31},{"text":"        pub ss_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fstore_t {","highlight_start":1,"highlight_end":26},{"text":"        pub fst_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_posmode: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub fst_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_bytesalloc: ::off_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fpunchhole_t {","highlight_start":1,"highlight_end":30},{"text":"        pub fp_flags: ::c_uint, /* unused */","highlight_start":1,"highlight_end":45},{"text":"        pub reserved: ::c_uint, /* (to maintain 8-byte alignment) */","highlight_start":1,"highlight_end":69},{"text":"        pub fp_offset: ::off_t, /* IN: start of the region */","highlight_start":1,"highlight_end":62},{"text":"        pub fp_length: ::off_t, /* IN: size of the region */","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ftrimactivefile_t {","highlight_start":1,"highlight_end":35},{"text":"        pub fta_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fta_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fspecread_t {","highlight_start":1,"highlight_end":29},{"text":"        pub fsr_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub reserved: ::c_uint,","highlight_start":1,"highlight_end":32},{"text":"        pub fsr_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fsr_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct radvisory {","highlight_start":1,"highlight_end":27},{"text":"        pub ra_offset: ::off_t,","highlight_start":1,"highlight_end":32},{"text":"        pub ra_count: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct statvfs {","highlight_start":1,"highlight_end":25},{"text":"        pub f_bsize: ::c_ulong,","highlight_start":1,"highlight_end":32},{"text":"        pub f_frsize: ::c_ulong,","highlight_start":1,"highlight_end":33},{"text":"        pub f_blocks: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_bfree: ::fsblkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_bavail: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_files: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_ffree: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_favail: ::fsfilcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_fsid: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_flag: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_namemax: ::c_ulong,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct Dl_info {","highlight_start":1,"highlight_end":25},{"text":"        pub dli_fname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_fbase: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"        pub dli_sname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_saddr: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_in {","highlight_start":1,"highlight_end":29},{"text":"        pub sin_len: u8,","highlight_start":1,"highlight_end":25},{"text":"        pub sin_family: ::sa_family_t,","highlight_start":1,"highlight_end":39},{"text":"        pub sin_port: ::in_port_t,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_zero: [::c_char; 8],","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct kevent64_s {","highlight_start":1,"highlight_end":28},{"text":"        pub ident: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub filter: i16,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u16,","highlight_start":1,"highlight_end":24},{"text":"        pub fflags: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub data: i64,","highlight_start":1,"highlight_end":23},{"text":"        pub udata: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub ext: [u64; 2],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct dqblk {","highlight_start":1,"highlight_end":23},{"text":"        pub dqb_bhardlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_bsoftlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub dqb_ihardlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_isoftlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curinodes: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub dqb_btime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_itime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_id: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub dqb_spare: [u32; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct if_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub ifm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub ifm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub ifm_data: if_data,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifa_msghdr {","highlight_start":1,"highlight_end":28},{"text":"        pub ifam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_version: ::c_uchar,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_type: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ifam_addrs: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_flags: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_index: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifam_metric: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr {","highlight_start":1,"highlight_end":29},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr2 {","highlight_start":1,"highlight_end":30},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifmam_refcount: i32,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_metrics {","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_locks: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_mtu: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_hopcount: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_expire: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_recvpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_sendpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_ssthresh: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_rtt: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_rttvar: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_pksent: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_state: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_filler: [u32; 3],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_pid: ::pid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_seq: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_errno: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr2 {","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_refcnt: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rtm_parentflags: ::c_int,","highlight_start":1,"highlight_end":38},{"text":"        pub rtm_reserved: ::c_int,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct termios {","highlight_start":1,"highlight_end":25},{"text":"        pub c_iflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_oflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_lflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cc: [::cc_t; ::NCCS],","highlight_start":1,"highlight_end":36},{"text":"        pub c_ispeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_ospeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct flock {","highlight_start":1,"highlight_end":23},{"text":"        pub l_start: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub l_len: ::off_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_pid: ::pid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_type: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub l_whence: ::c_short,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sf_hdtr {","highlight_start":1,"highlight_end":25},{"text":"        pub headers: *mut ::iovec,","highlight_start":1,"highlight_end":35},{"text":"        pub hdr_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub trailers: *mut ::iovec,","highlight_start":1,"highlight_end":36},{"text":"        pub trl_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct lconv {","highlight_start":1,"highlight_end":23},{"text":"        pub decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub grouping: *mut ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub int_curr_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub currency_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub mon_decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_grouping: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub positive_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub negative_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_frac_digits: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub frac_digits: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub int_p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub int_n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskinfo {","highlight_start":1,"highlight_end":31},{"text":"        pub pti_virtual_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_resident_size: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_total_user: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_total_system: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_user: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_system: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub pti_policy: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_faults: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_pageins: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub pti_cow_faults: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_messages_sent: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_messages_received: i32,","highlight_start":1,"highlight_end":40},{"text":"        pub pti_syscalls_mach: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_syscalls_unix: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_csw: i32,","highlight_start":1,"highlight_end":26},{"text":"        pub pti_threadnum: i32,","highlight_start":1,"highlight_end":32},{"text":"        pub pti_numrunning: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_priority: i32,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_bsdinfo {","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub pbi_status: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_xstatus: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_pid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_ppid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_ruid: ::uid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_rgid: ::gid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_svuid: ::uid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pbi_svgid: ::gid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub rfu_1: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub pbi_comm: [::c_char; MAXCOMLEN],","highlight_start":1,"highlight_end":45},{"text":"        pub pbi_name: [::c_char; 32], // MAXCOMLEN * 2, but macro isn't happy...","highlight_start":1,"highlight_end":81},{"text":"        pub pbi_nfiles: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_pgid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_pjobc: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub e_tdev: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub e_tpgid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_nice: i32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_start_tvsec: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub pbi_start_tvusec: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskallinfo {","highlight_start":1,"highlight_end":34},{"text":"        pub pbsd: proc_bsdinfo,","highlight_start":1,"highlight_end":32},{"text":"        pub ptinfo: proc_taskinfo,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xsw_usage {","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_total: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_avail: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_used: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_pagesize: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub xsu_encrypted: ::boolean_t,","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xucred {","highlight_start":1,"highlight_end":24},{"text":"        pub cr_version: ::c_uint,","highlight_start":1,"highlight_end":34},{"text":"        pub cr_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub cr_ngroups: ::c_short,","highlight_start":1,"highlight_end":35},{"text":"        pub cr_groups: [::gid_t;16]","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header {","highlight_start":1,"highlight_end":29},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header_64 {","highlight_start":1,"highlight_end":32},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub reserved: u32,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command {","highlight_start":1,"highlight_end":33},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command_64 {","highlight_start":1,"highlight_end":36},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct load_command {","highlight_start":1,"highlight_end":30},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_dl {","highlight_start":1,"highlight_end":29},{"text":"        pub sdl_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sdl_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_nlen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_alen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_slen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_data: [::c_char; 12],","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_inarp {","highlight_start":1,"highlight_end":32},{"text":"        pub sin_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sin_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_port: ::c_ushort,","highlight_start":1,"highlight_end":34},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_srcaddr: ::in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub sin_tos: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_other: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_ctl {","highlight_start":1,"highlight_end":30},{"text":"        pub sc_len: ::c_uchar,","highlight_start":1,"highlight_end":31},{"text":"        pub sc_family: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_sysaddr: u16,","highlight_start":1,"highlight_end":29},{"text":"        pub sc_id: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sc_unit: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub sc_reserved: [u32; 5],","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_pktinfo {","highlight_start":1,"highlight_end":28},{"text":"        pub ipi_ifindex: ::c_uint,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi_spec_dst: ::in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub ipi_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in6_pktinfo {","highlight_start":1,"highlight_end":29},{"text":"        pub ipi6_addr: ::in6_addr,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi6_ifindex: ::c_uint,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/ipc.h:","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ipc_perm {","highlight_start":1,"highlight_end":26},{"text":"        pub uid: ::uid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub gid: ::gid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub cuid: ::uid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub cgid: ::gid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub mode: ::mode_t,","highlight_start":1,"highlight_end":28},{"text":"        pub _seq: ::c_ushort,","highlight_start":1,"highlight_end":30},{"text":"        pub _key: ::key_t,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/sem.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sembuf {","highlight_start":1,"highlight_end":24},{"text":"        pub sem_num: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sem_op: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub sem_flg: ::c_short,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/shm.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct arphdr {","highlight_start":1,"highlight_end":24},{"text":"        pub ar_hrd: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_pro: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_hln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_pln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_op: u16,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_addr {","highlight_start":1,"highlight_end":25},{"text":"        pub s_addr: ::in_addr_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // net/ndrv.h","highlight_start":1,"highlight_end":18},{"text":"    pub struct sockaddr_ndrv {","highlight_start":1,"highlight_end":31},{"text":"        pub snd_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub snd_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub snd_name: [::c_uchar; ::IFNAMSIZ],","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/socket.h","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sa_endpoints_t {","highlight_start":1,"highlight_end":32},{"text":"        pub sae_srcif: ::c_uint, // optional source interface","highlight_start":1,"highlight_end":62},{"text":"        pub sae_srcaddr: *const ::sockaddr, // optional source address","highlight_start":1,"highlight_end":71},{"text":"        pub sae_srcaddrlen: ::socklen_t, // size of source address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddr: *const ::sockaddr, // destination address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddrlen: ::socklen_t, // size of destination address","highlight_start":1,"highlight_end":72},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct timex {","highlight_start":1,"highlight_end":23},{"text":"        pub modes: ::c_uint,","highlight_start":1,"highlight_end":29},{"text":"        pub offset: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub freq: ::c_long,","highlight_start":1,"highlight_end":28},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub status: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub constant: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub precision: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub tolerance: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub ppsfreq: ::c_long,","highlight_start":1,"highlight_end":31},{"text":"        pub jitter: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub shift: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub stabil: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub jitcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub calcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub errcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub stbcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ntptimeval {","highlight_start":1,"highlight_end":28},{"text":"        pub time: ::timespec,","highlight_start":1,"highlight_end":30},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub tai: ::c_long,","highlight_start":1,"highlight_end":27},{"text":"        pub time_state: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_standard_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub no_data: natural_t,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_extended_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub timeshare: boolean_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_time_constraint_policy {","highlight_start":1,"highlight_end":47},{"text":"        pub period: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub computation: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub constraint: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub preemptible: boolean_t,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_precedence_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub importance: integer_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_affinity_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub affinity_tag: integer_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_background_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub priority: integer_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_latency_qos_policy {","highlight_start":1,"highlight_end":43},{"text":"        pub thread_latency_qos_tier: thread_latency_qos_t,","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_throughput_qos_policy {","highlight_start":1,"highlight_end":46},{"text":"        pub thread_throughput_qos_tier: thread_throughput_qos_t,","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // malloc/malloc.h","highlight_start":1,"highlight_end":23},{"text":"    pub struct malloc_statistics_t {","highlight_start":1,"highlight_end":37},{"text":"        pub blocks_in_use: ::c_uint,","highlight_start":1,"highlight_end":37},{"text":"        pub size_in_use: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub max_size_in_use: ::size_t,","highlight_start":1,"highlight_end":39},{"text":"        pub size_allocated: ::size_t,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct mstats {","highlight_start":1,"highlight_end":24},{"text":"        pub bytes_total: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub chunks_used: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_used: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub chunks_free: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_free: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_range_t {","highlight_start":1,"highlight_end":28},{"text":"        pub address: ::vm_address_t,","highlight_start":1,"highlight_end":37},{"text":"        pub size: ::vm_size_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sched.h","highlight_start":1,"highlight_end":15},{"text":"    pub struct sched_param {","highlight_start":1,"highlight_end":29},{"text":"        pub sched_priority: ::c_int,","highlight_start":1,"highlight_end":37},{"text":"        __opaque: [::c_char; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vinfo_stat {","highlight_start":1,"highlight_end":28},{"text":"        pub vst_dev: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_mode: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_nlink: u16,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ino: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_atime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_atimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_mtime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_mtimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_ctime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ctimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtime: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtimensec: i64,","highlight_start":1,"highlight_end":36},{"text":"        pub vst_size: ::off_t,","highlight_start":1,"highlight_end":31},{"text":"        pub vst_blocks: i64,","highlight_start":1,"highlight_end":29},{"text":"        pub vst_blksize: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_gen: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_rdev: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_qspare: [i64; 2],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info {","highlight_start":1,"highlight_end":28},{"text":"        pub vi_stat: vinfo_stat,","highlight_start":1,"highlight_end":33},{"text":"        pub vi_type: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub vi_pad: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub vi_fsid: ::fsid_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info_path {","highlight_start":1,"highlight_end":33},{"text":"        pub vip_vi: vnode_info,","highlight_start":1,"highlight_end":32},{"text":"        // Normally it's `vip_path: [::c_char; MAXPATHLEN]` but because libc supports an old rustc","highlight_start":1,"highlight_end":99},{"text":"        // version, we go around this limitation like this.","highlight_start":1,"highlight_end":60},{"text":"        pub vip_path: [[::c_char; 32]; 32],","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_vnodepathinfo {","highlight_start":1,"highlight_end":36},{"text":"        pub pvi_cdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"        pub pvi_rdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_statistics {","highlight_start":1,"highlight_end":31},{"text":"        pub free_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub active_count: natural_t,","highlight_start":1,"highlight_end":37},{"text":"        pub inactive_count: natural_t,","highlight_start":1,"highlight_end":39},{"text":"        pub wire_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub zero_fill_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub reactivations: natural_t,","highlight_start":1,"highlight_end":38},{"text":"        pub pageins: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pageouts: natural_t,","highlight_start":1,"highlight_end":33},{"text":"        pub faults: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub cow_faults: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub lookups: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub hits: natural_t,","highlight_start":1,"highlight_end":29},{"text":"        pub purgeable_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub purges: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub speculative_count: natural_t,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct task_thread_times_info {","highlight_start":1,"highlight_end":40},{"text":"        pub user_time: time_value_t,","highlight_start":1,"highlight_end":37},{"text":"        pub system_time: time_value_t,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v0 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v1 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v2 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v3 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v4 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_logical_writes: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_lifetime_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_instructions: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub ri_cycles: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub ri_billed_energy: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_serviced_energy: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_interval_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_runnable_time: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct image_offset {","highlight_start":1,"highlight_end":30},{"text":"        pub uuid: ::uuid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub offset: u32,","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrlist {","highlight_start":1,"highlight_end":26},{"text":"        pub bitmapcount: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub reserved: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrreference_t {","highlight_start":1,"highlight_end":33},{"text":"        pub attr_dataoffset: i32,","highlight_start":1,"highlight_end":34},{"text":"        pub attr_length: u32,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_capabilities_attr_t {","highlight_start":1,"highlight_end":41},{"text":"        pub capabilities: vol_capabilities_set_t,","highlight_start":1,"highlight_end":50},{"text":"        pub valid: vol_capabilities_set_t,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attribute_set_t {","highlight_start":1,"highlight_end":33},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_attributes_attr_t {","highlight_start":1,"highlight_end":39},{"text":"        pub validattr: attribute_set_t,","highlight_start":1,"highlight_end":40},{"text":"        pub nativeattr: attribute_set_t,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_packedN, repr(packed(4)))]","highlight_start":1,"highlight_end":47},{"text":"    pub struct ifconf {","highlight_start":1,"highlight_end":24},{"text":"        pub ifc_len: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        #[cfg(libc_union)]","highlight_start":1,"highlight_end":27},{"text":"        pub ifc_ifcu: __c_anonymous_ifc_ifcu,","highlight_start":1,"highlight_end":46},{"text":"        #[cfg(not(libc_union))]","highlight_start":1,"highlight_end":32},{"text":"        pub ifc_ifcu: *mut ifreq,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_align, repr(align(8)))]","highlight_start":1,"highlight_end":44},{"text":"    pub struct tcp_connection_info {","highlight_start":1,"highlight_end":37},{"text":"        pub tcpi_state: u8,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_snd_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rcv_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        __pad1: u8,","highlight_start":1,"highlight_end":20},{"text":"        pub tcpi_options: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_flags: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub tcpi_rto: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub tcpi_maxseg: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_snd_ssthresh: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_snd_cwnd: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub tcpi_snd_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_snd_sbbytes: u32,","highlight_start":1,"highlight_end":35},{"text":"        pub tcpi_rcv_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rttcur: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_srtt: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_rttvar: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_tfo_cookie_req: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_cookie_rcv: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_syn_loss: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_tfo_syn_data_sent: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_syn_data_acked: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_syn_data_rcv: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_cookie_req_rcv: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_sent: u32,","highlight_start":1,"highlight_end":39},{"text":"        pub tcpi_tfo_cookie_invalid: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_wrong: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_no_cookie_rcv: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_heuristics_disable: u32,","highlight_start":1,"highlight_end":46},{"text":"        pub tcpi_tfo_send_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_recv_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_onebyte_proxy: u32,","highlight_start":1,"highlight_end":41},{"text":"        __pad2: u32,","highlight_start":1,"highlight_end":21},{"text":"        pub tcpi_txpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_txbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_txretransmitbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rxbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rxoutoforderbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxretransmitpackets: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4094,"byte_end":4105,"line_start":119,"line_end":119,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"        let mut nladdr = unsafe { zeroed::<libc::sockaddr_nl>() };","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4094,"byte_end":4105,"line_start":119,"line_end":119,"column_start":50,"column_end":61,"is_primary":true,"text":[{"text":"        let mut nladdr = unsafe { zeroed::<libc::sockaddr_nl>() };","highlight_start":50,"highlight_end":61}],"label":null,"suggested_replacement":"sockaddr_dl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `sockaddr_nl` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:119:50\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m119\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let mut nladdr = unsafe { zeroed::<libc::sockaddr_nl>() };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `sockaddr_dl`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:243:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0ms! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ip_mreq {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_multiaddr: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_interface: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `sockaddr_dl` defined here\u001b[0m\n\n"}
{"message":"cannot find type `sockaddr_nl` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2725,"byte_end":2738,"line_start":77,"line_end":77,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            pub struct $i { $($field)* }","highlight_start":13,"highlight_end":26}],"label":"similarly named struct `sockaddr_dl` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2232,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        s!(it: $(#[$attr])* pub $t $i { $($field)* });","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":8517,"byte_end":34616,"line_start":243,"line_end":1184,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"s! {","highlight_start":1,"highlight_end":5},{"text":"    pub struct ip_mreq {","highlight_start":1,"highlight_end":25},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreqn {","highlight_start":1,"highlight_end":26},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_address: in_addr,","highlight_start":1,"highlight_end":34},{"text":"        pub imr_ifindex: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreq_source {","highlight_start":1,"highlight_end":32},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_sourceaddr: in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct aiocb {","highlight_start":1,"highlight_end":23},{"text":"        pub aio_fildes: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_buf: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_nbytes: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_reqprio: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_sigevent: sigevent,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_lio_opcode: ::c_int","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct glob_t {","highlight_start":1,"highlight_end":24},{"text":"        pub gl_pathc:  ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused1: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_offs:   ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused2: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_pathv:  *mut *mut ::c_char,","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused3: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused4: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused5: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused6: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused7: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused8: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct addrinfo {","highlight_start":1,"highlight_end":26},{"text":"        pub ai_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub ai_family: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ai_socktype: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_protocol: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_addrlen: ::socklen_t,","highlight_start":1,"highlight_end":37},{"text":"        pub ai_canonname: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub ai_addr: *mut ::sockaddr,","highlight_start":1,"highlight_end":38},{"text":"        pub ai_next: *mut addrinfo,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_timebase_info {","highlight_start":1,"highlight_end":36},{"text":"        pub numer: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub denom: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stat {","highlight_start":1,"highlight_end":22},{"text":"        pub st_dev: dev_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_mode: mode_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_nlink: nlink_t,","highlight_start":1,"highlight_end":31},{"text":"        pub st_ino: ino_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_gid: ::gid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_rdev: dev_t,","highlight_start":1,"highlight_end":28},{"text":"        pub st_atime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_atime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_mtime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_mtime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_ctime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_ctime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_birthtime: time_t,","highlight_start":1,"highlight_end":34},{"text":"        pub st_birthtime_nsec: c_long,","highlight_start":1,"highlight_end":39},{"text":"        pub st_size: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_blocks: ::blkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_blksize: blksize_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_flags: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub st_gen: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub st_lspare: i32,","highlight_start":1,"highlight_end":28},{"text":"        pub st_qspare: [i64; 2],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_mutexattr_t {","highlight_start":1,"highlight_end":37},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; 8],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_condattr_t {","highlight_start":1,"highlight_end":36},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_CONDATTR_SIZE__],","highlight_start":1,"highlight_end":51},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_rwlockattr_t {","highlight_start":1,"highlight_end":38},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_RWLOCKATTR_SIZE__],","highlight_start":1,"highlight_end":53},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct siginfo_t {","highlight_start":1,"highlight_end":27},{"text":"        pub si_signo: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_errno: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_code: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub si_pid: ::pid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_status: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub si_addr: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        //Requires it to be union for tests","highlight_start":1,"highlight_end":44},{"text":"        //pub si_value: ::sigval,","highlight_start":1,"highlight_end":34},{"text":"        _pad: [usize; 9],","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sigaction {","highlight_start":1,"highlight_end":27},{"text":"        // FIXME: this field is actually a union","highlight_start":1,"highlight_end":49},{"text":"        pub sa_sigaction: ::sighandler_t,","highlight_start":1,"highlight_end":42},{"text":"        pub sa_mask: sigset_t,","highlight_start":1,"highlight_end":31},{"text":"        pub sa_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stack_t {","highlight_start":1,"highlight_end":25},{"text":"        pub ss_sp: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_size: ::size_t,","highlight_start":1,"highlight_end":31},{"text":"        pub ss_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fstore_t {","highlight_start":1,"highlight_end":26},{"text":"        pub fst_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_posmode: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub fst_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_bytesalloc: ::off_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fpunchhole_t {","highlight_start":1,"highlight_end":30},{"text":"        pub fp_flags: ::c_uint, /* unused */","highlight_start":1,"highlight_end":45},{"text":"        pub reserved: ::c_uint, /* (to maintain 8-byte alignment) */","highlight_start":1,"highlight_end":69},{"text":"        pub fp_offset: ::off_t, /* IN: start of the region */","highlight_start":1,"highlight_end":62},{"text":"        pub fp_length: ::off_t, /* IN: size of the region */","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ftrimactivefile_t {","highlight_start":1,"highlight_end":35},{"text":"        pub fta_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fta_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fspecread_t {","highlight_start":1,"highlight_end":29},{"text":"        pub fsr_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub reserved: ::c_uint,","highlight_start":1,"highlight_end":32},{"text":"        pub fsr_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fsr_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct radvisory {","highlight_start":1,"highlight_end":27},{"text":"        pub ra_offset: ::off_t,","highlight_start":1,"highlight_end":32},{"text":"        pub ra_count: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct statvfs {","highlight_start":1,"highlight_end":25},{"text":"        pub f_bsize: ::c_ulong,","highlight_start":1,"highlight_end":32},{"text":"        pub f_frsize: ::c_ulong,","highlight_start":1,"highlight_end":33},{"text":"        pub f_blocks: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_bfree: ::fsblkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_bavail: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_files: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_ffree: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_favail: ::fsfilcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_fsid: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_flag: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_namemax: ::c_ulong,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct Dl_info {","highlight_start":1,"highlight_end":25},{"text":"        pub dli_fname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_fbase: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"        pub dli_sname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_saddr: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_in {","highlight_start":1,"highlight_end":29},{"text":"        pub sin_len: u8,","highlight_start":1,"highlight_end":25},{"text":"        pub sin_family: ::sa_family_t,","highlight_start":1,"highlight_end":39},{"text":"        pub sin_port: ::in_port_t,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_zero: [::c_char; 8],","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct kevent64_s {","highlight_start":1,"highlight_end":28},{"text":"        pub ident: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub filter: i16,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u16,","highlight_start":1,"highlight_end":24},{"text":"        pub fflags: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub data: i64,","highlight_start":1,"highlight_end":23},{"text":"        pub udata: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub ext: [u64; 2],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct dqblk {","highlight_start":1,"highlight_end":23},{"text":"        pub dqb_bhardlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_bsoftlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub dqb_ihardlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_isoftlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curinodes: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub dqb_btime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_itime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_id: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub dqb_spare: [u32; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct if_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub ifm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub ifm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub ifm_data: if_data,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifa_msghdr {","highlight_start":1,"highlight_end":28},{"text":"        pub ifam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_version: ::c_uchar,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_type: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ifam_addrs: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_flags: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_index: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifam_metric: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr {","highlight_start":1,"highlight_end":29},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr2 {","highlight_start":1,"highlight_end":30},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifmam_refcount: i32,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_metrics {","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_locks: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_mtu: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_hopcount: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_expire: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_recvpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_sendpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_ssthresh: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_rtt: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_rttvar: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_pksent: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_state: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_filler: [u32; 3],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_pid: ::pid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_seq: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_errno: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr2 {","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_refcnt: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rtm_parentflags: ::c_int,","highlight_start":1,"highlight_end":38},{"text":"        pub rtm_reserved: ::c_int,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct termios {","highlight_start":1,"highlight_end":25},{"text":"        pub c_iflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_oflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_lflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cc: [::cc_t; ::NCCS],","highlight_start":1,"highlight_end":36},{"text":"        pub c_ispeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_ospeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct flock {","highlight_start":1,"highlight_end":23},{"text":"        pub l_start: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub l_len: ::off_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_pid: ::pid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_type: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub l_whence: ::c_short,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sf_hdtr {","highlight_start":1,"highlight_end":25},{"text":"        pub headers: *mut ::iovec,","highlight_start":1,"highlight_end":35},{"text":"        pub hdr_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub trailers: *mut ::iovec,","highlight_start":1,"highlight_end":36},{"text":"        pub trl_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct lconv {","highlight_start":1,"highlight_end":23},{"text":"        pub decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub grouping: *mut ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub int_curr_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub currency_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub mon_decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_grouping: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub positive_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub negative_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_frac_digits: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub frac_digits: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub int_p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub int_n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskinfo {","highlight_start":1,"highlight_end":31},{"text":"        pub pti_virtual_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_resident_size: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_total_user: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_total_system: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_user: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_system: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub pti_policy: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_faults: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_pageins: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub pti_cow_faults: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_messages_sent: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_messages_received: i32,","highlight_start":1,"highlight_end":40},{"text":"        pub pti_syscalls_mach: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_syscalls_unix: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_csw: i32,","highlight_start":1,"highlight_end":26},{"text":"        pub pti_threadnum: i32,","highlight_start":1,"highlight_end":32},{"text":"        pub pti_numrunning: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_priority: i32,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_bsdinfo {","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub pbi_status: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_xstatus: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_pid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_ppid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_ruid: ::uid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_rgid: ::gid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_svuid: ::uid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pbi_svgid: ::gid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub rfu_1: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub pbi_comm: [::c_char; MAXCOMLEN],","highlight_start":1,"highlight_end":45},{"text":"        pub pbi_name: [::c_char; 32], // MAXCOMLEN * 2, but macro isn't happy...","highlight_start":1,"highlight_end":81},{"text":"        pub pbi_nfiles: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_pgid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_pjobc: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub e_tdev: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub e_tpgid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_nice: i32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_start_tvsec: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub pbi_start_tvusec: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskallinfo {","highlight_start":1,"highlight_end":34},{"text":"        pub pbsd: proc_bsdinfo,","highlight_start":1,"highlight_end":32},{"text":"        pub ptinfo: proc_taskinfo,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xsw_usage {","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_total: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_avail: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_used: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_pagesize: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub xsu_encrypted: ::boolean_t,","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xucred {","highlight_start":1,"highlight_end":24},{"text":"        pub cr_version: ::c_uint,","highlight_start":1,"highlight_end":34},{"text":"        pub cr_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub cr_ngroups: ::c_short,","highlight_start":1,"highlight_end":35},{"text":"        pub cr_groups: [::gid_t;16]","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header {","highlight_start":1,"highlight_end":29},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header_64 {","highlight_start":1,"highlight_end":32},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub reserved: u32,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command {","highlight_start":1,"highlight_end":33},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command_64 {","highlight_start":1,"highlight_end":36},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct load_command {","highlight_start":1,"highlight_end":30},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_dl {","highlight_start":1,"highlight_end":29},{"text":"        pub sdl_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sdl_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_nlen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_alen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_slen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_data: [::c_char; 12],","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_inarp {","highlight_start":1,"highlight_end":32},{"text":"        pub sin_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sin_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_port: ::c_ushort,","highlight_start":1,"highlight_end":34},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_srcaddr: ::in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub sin_tos: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_other: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_ctl {","highlight_start":1,"highlight_end":30},{"text":"        pub sc_len: ::c_uchar,","highlight_start":1,"highlight_end":31},{"text":"        pub sc_family: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_sysaddr: u16,","highlight_start":1,"highlight_end":29},{"text":"        pub sc_id: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sc_unit: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub sc_reserved: [u32; 5],","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_pktinfo {","highlight_start":1,"highlight_end":28},{"text":"        pub ipi_ifindex: ::c_uint,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi_spec_dst: ::in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub ipi_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in6_pktinfo {","highlight_start":1,"highlight_end":29},{"text":"        pub ipi6_addr: ::in6_addr,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi6_ifindex: ::c_uint,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/ipc.h:","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ipc_perm {","highlight_start":1,"highlight_end":26},{"text":"        pub uid: ::uid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub gid: ::gid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub cuid: ::uid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub cgid: ::gid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub mode: ::mode_t,","highlight_start":1,"highlight_end":28},{"text":"        pub _seq: ::c_ushort,","highlight_start":1,"highlight_end":30},{"text":"        pub _key: ::key_t,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/sem.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sembuf {","highlight_start":1,"highlight_end":24},{"text":"        pub sem_num: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sem_op: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub sem_flg: ::c_short,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/shm.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct arphdr {","highlight_start":1,"highlight_end":24},{"text":"        pub ar_hrd: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_pro: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_hln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_pln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_op: u16,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_addr {","highlight_start":1,"highlight_end":25},{"text":"        pub s_addr: ::in_addr_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // net/ndrv.h","highlight_start":1,"highlight_end":18},{"text":"    pub struct sockaddr_ndrv {","highlight_start":1,"highlight_end":31},{"text":"        pub snd_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub snd_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub snd_name: [::c_uchar; ::IFNAMSIZ],","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/socket.h","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sa_endpoints_t {","highlight_start":1,"highlight_end":32},{"text":"        pub sae_srcif: ::c_uint, // optional source interface","highlight_start":1,"highlight_end":62},{"text":"        pub sae_srcaddr: *const ::sockaddr, // optional source address","highlight_start":1,"highlight_end":71},{"text":"        pub sae_srcaddrlen: ::socklen_t, // size of source address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddr: *const ::sockaddr, // destination address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddrlen: ::socklen_t, // size of destination address","highlight_start":1,"highlight_end":72},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct timex {","highlight_start":1,"highlight_end":23},{"text":"        pub modes: ::c_uint,","highlight_start":1,"highlight_end":29},{"text":"        pub offset: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub freq: ::c_long,","highlight_start":1,"highlight_end":28},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub status: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub constant: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub precision: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub tolerance: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub ppsfreq: ::c_long,","highlight_start":1,"highlight_end":31},{"text":"        pub jitter: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub shift: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub stabil: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub jitcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub calcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub errcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub stbcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ntptimeval {","highlight_start":1,"highlight_end":28},{"text":"        pub time: ::timespec,","highlight_start":1,"highlight_end":30},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub tai: ::c_long,","highlight_start":1,"highlight_end":27},{"text":"        pub time_state: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_standard_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub no_data: natural_t,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_extended_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub timeshare: boolean_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_time_constraint_policy {","highlight_start":1,"highlight_end":47},{"text":"        pub period: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub computation: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub constraint: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub preemptible: boolean_t,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_precedence_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub importance: integer_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_affinity_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub affinity_tag: integer_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_background_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub priority: integer_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_latency_qos_policy {","highlight_start":1,"highlight_end":43},{"text":"        pub thread_latency_qos_tier: thread_latency_qos_t,","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_throughput_qos_policy {","highlight_start":1,"highlight_end":46},{"text":"        pub thread_throughput_qos_tier: thread_throughput_qos_t,","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // malloc/malloc.h","highlight_start":1,"highlight_end":23},{"text":"    pub struct malloc_statistics_t {","highlight_start":1,"highlight_end":37},{"text":"        pub blocks_in_use: ::c_uint,","highlight_start":1,"highlight_end":37},{"text":"        pub size_in_use: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub max_size_in_use: ::size_t,","highlight_start":1,"highlight_end":39},{"text":"        pub size_allocated: ::size_t,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct mstats {","highlight_start":1,"highlight_end":24},{"text":"        pub bytes_total: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub chunks_used: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_used: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub chunks_free: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_free: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_range_t {","highlight_start":1,"highlight_end":28},{"text":"        pub address: ::vm_address_t,","highlight_start":1,"highlight_end":37},{"text":"        pub size: ::vm_size_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sched.h","highlight_start":1,"highlight_end":15},{"text":"    pub struct sched_param {","highlight_start":1,"highlight_end":29},{"text":"        pub sched_priority: ::c_int,","highlight_start":1,"highlight_end":37},{"text":"        __opaque: [::c_char; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vinfo_stat {","highlight_start":1,"highlight_end":28},{"text":"        pub vst_dev: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_mode: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_nlink: u16,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ino: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_atime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_atimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_mtime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_mtimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_ctime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ctimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtime: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtimensec: i64,","highlight_start":1,"highlight_end":36},{"text":"        pub vst_size: ::off_t,","highlight_start":1,"highlight_end":31},{"text":"        pub vst_blocks: i64,","highlight_start":1,"highlight_end":29},{"text":"        pub vst_blksize: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_gen: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_rdev: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_qspare: [i64; 2],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info {","highlight_start":1,"highlight_end":28},{"text":"        pub vi_stat: vinfo_stat,","highlight_start":1,"highlight_end":33},{"text":"        pub vi_type: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub vi_pad: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub vi_fsid: ::fsid_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info_path {","highlight_start":1,"highlight_end":33},{"text":"        pub vip_vi: vnode_info,","highlight_start":1,"highlight_end":32},{"text":"        // Normally it's `vip_path: [::c_char; MAXPATHLEN]` but because libc supports an old rustc","highlight_start":1,"highlight_end":99},{"text":"        // version, we go around this limitation like this.","highlight_start":1,"highlight_end":60},{"text":"        pub vip_path: [[::c_char; 32]; 32],","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_vnodepathinfo {","highlight_start":1,"highlight_end":36},{"text":"        pub pvi_cdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"        pub pvi_rdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_statistics {","highlight_start":1,"highlight_end":31},{"text":"        pub free_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub active_count: natural_t,","highlight_start":1,"highlight_end":37},{"text":"        pub inactive_count: natural_t,","highlight_start":1,"highlight_end":39},{"text":"        pub wire_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub zero_fill_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub reactivations: natural_t,","highlight_start":1,"highlight_end":38},{"text":"        pub pageins: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pageouts: natural_t,","highlight_start":1,"highlight_end":33},{"text":"        pub faults: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub cow_faults: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub lookups: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub hits: natural_t,","highlight_start":1,"highlight_end":29},{"text":"        pub purgeable_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub purges: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub speculative_count: natural_t,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct task_thread_times_info {","highlight_start":1,"highlight_end":40},{"text":"        pub user_time: time_value_t,","highlight_start":1,"highlight_end":37},{"text":"        pub system_time: time_value_t,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v0 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v1 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v2 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v3 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v4 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_logical_writes: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_lifetime_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_instructions: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub ri_cycles: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub ri_billed_energy: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_serviced_energy: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_interval_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_runnable_time: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct image_offset {","highlight_start":1,"highlight_end":30},{"text":"        pub uuid: ::uuid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub offset: u32,","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrlist {","highlight_start":1,"highlight_end":26},{"text":"        pub bitmapcount: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub reserved: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrreference_t {","highlight_start":1,"highlight_end":33},{"text":"        pub attr_dataoffset: i32,","highlight_start":1,"highlight_end":34},{"text":"        pub attr_length: u32,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_capabilities_attr_t {","highlight_start":1,"highlight_end":41},{"text":"        pub capabilities: vol_capabilities_set_t,","highlight_start":1,"highlight_end":50},{"text":"        pub valid: vol_capabilities_set_t,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attribute_set_t {","highlight_start":1,"highlight_end":33},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_attributes_attr_t {","highlight_start":1,"highlight_end":39},{"text":"        pub validattr: attribute_set_t,","highlight_start":1,"highlight_end":40},{"text":"        pub nativeattr: attribute_set_t,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_packedN, repr(packed(4)))]","highlight_start":1,"highlight_end":47},{"text":"    pub struct ifconf {","highlight_start":1,"highlight_end":24},{"text":"        pub ifc_len: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        #[cfg(libc_union)]","highlight_start":1,"highlight_end":27},{"text":"        pub ifc_ifcu: __c_anonymous_ifc_ifcu,","highlight_start":1,"highlight_end":46},{"text":"        #[cfg(not(libc_union))]","highlight_start":1,"highlight_end":32},{"text":"        pub ifc_ifcu: *mut ifreq,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_align, repr(align(8)))]","highlight_start":1,"highlight_end":44},{"text":"    pub struct tcp_connection_info {","highlight_start":1,"highlight_end":37},{"text":"        pub tcpi_state: u8,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_snd_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rcv_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        __pad1: u8,","highlight_start":1,"highlight_end":20},{"text":"        pub tcpi_options: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_flags: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub tcpi_rto: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub tcpi_maxseg: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_snd_ssthresh: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_snd_cwnd: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub tcpi_snd_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_snd_sbbytes: u32,","highlight_start":1,"highlight_end":35},{"text":"        pub tcpi_rcv_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rttcur: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_srtt: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_rttvar: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_tfo_cookie_req: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_cookie_rcv: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_syn_loss: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_tfo_syn_data_sent: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_syn_data_acked: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_syn_data_rcv: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_cookie_req_rcv: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_sent: u32,","highlight_start":1,"highlight_end":39},{"text":"        pub tcpi_tfo_cookie_invalid: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_wrong: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_no_cookie_rcv: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_heuristics_disable: u32,","highlight_start":1,"highlight_end":46},{"text":"        pub tcpi_tfo_send_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_recv_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_onebyte_proxy: u32,","highlight_start":1,"highlight_end":41},{"text":"        __pad2: u32,","highlight_start":1,"highlight_end":21},{"text":"        pub tcpi_txpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_txbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_txretransmitbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rxbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rxoutoforderbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxretransmitpackets: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4424,"byte_end":4435,"line_start":127,"line_end":127,"column_start":33,"column_end":44,"is_primary":true,"text":[{"text":"                size_of::<libc::sockaddr_nl>() as u32,","highlight_start":33,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4424,"byte_end":4435,"line_start":127,"line_end":127,"column_start":33,"column_end":44,"is_primary":true,"text":[{"text":"                size_of::<libc::sockaddr_nl>() as u32,","highlight_start":33,"highlight_end":44}],"label":null,"suggested_replacement":"sockaddr_dl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `sockaddr_nl` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:127:33\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m127\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                size_of::<libc::sockaddr_nl>() as u32,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `sockaddr_dl`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:243:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0ms! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ip_mreq {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_multiaddr: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_interface: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `sockaddr_dl` defined here\u001b[0m\n\n"}
{"message":"cannot find value `SOL_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4956,"byte_end":4967,"line_start":145,"line_end":145,"column_start":27,"column_end":38,"is_primary":true,"text":[{"text":"                    libc::SOL_NETLINK,","highlight_start":27,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `SOL_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:145:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m145\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::SOL_NETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_ADD_MEMBERSHIP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":147394,"byte_end":147430,"line_start":4118,"line_end":4118,"column_start":1,"column_end":37,"is_primary":false,"text":[{"text":"pub const IP_ADD_MEMBERSHIP: ::c_int = 12;","highlight_start":1,"highlight_end":37}],"label":"similarly named constant `IP_ADD_MEMBERSHIP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4995,"byte_end":5017,"line_start":146,"line_end":146,"column_start":27,"column_end":49,"is_primary":true,"text":[{"text":"                    libc::NETLINK_ADD_MEMBERSHIP,","highlight_start":27,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":4995,"byte_end":5017,"line_start":146,"line_end":146,"column_start":27,"column_end":49,"is_primary":true,"text":[{"text":"                    libc::NETLINK_ADD_MEMBERSHIP,","highlight_start":27,"highlight_end":49}],"label":null,"suggested_replacement":"IP_ADD_MEMBERSHIP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_ADD_MEMBERSHIP` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:146:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::NETLINK_ADD_MEMBERSHIP,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IP_ADD_MEMBERSHIP`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4118:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4118\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IP_ADD_MEMBERSHIP: ::c_int = 12;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IP_ADD_MEMBERSHIP` defined here\u001b[0m\n\n"}
{"message":"cannot find value `SOL_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":5588,"byte_end":5599,"line_start":164,"line_end":164,"column_start":27,"column_end":38,"is_primary":true,"text":[{"text":"                    libc::SOL_NETLINK,","highlight_start":27,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `SOL_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:164:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m164\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::SOL_NETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_DROP_MEMBERSHIP` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":147437,"byte_end":147474,"line_start":4119,"line_end":4119,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"pub const IP_DROP_MEMBERSHIP: ::c_int = 13;","highlight_start":1,"highlight_end":38}],"label":"similarly named constant `IP_DROP_MEMBERSHIP` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":5627,"byte_end":5650,"line_start":165,"line_end":165,"column_start":27,"column_end":50,"is_primary":true,"text":[{"text":"                    libc::NETLINK_DROP_MEMBERSHIP,","highlight_start":27,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a constant with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":5627,"byte_end":5650,"line_start":165,"line_end":165,"column_start":27,"column_end":50,"is_primary":true,"text":[{"text":"                    libc::NETLINK_DROP_MEMBERSHIP,","highlight_start":27,"highlight_end":50}],"label":null,"suggested_replacement":"IP_DROP_MEMBERSHIP","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_DROP_MEMBERSHIP` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:165:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m165\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::NETLINK_DROP_MEMBERSHIP,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a constant with a similar name exists: `IP_DROP_MEMBERSHIP`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:4119:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4119\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const IP_DROP_MEMBERSHIP: ::c_int = 13;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named constant `IP_DROP_MEMBERSHIP` defined here\u001b[0m\n\n"}
{"message":"cannot find value `SOL_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":6257,"byte_end":6268,"line_start":184,"line_end":184,"column_start":23,"column_end":34,"is_primary":true,"text":[{"text":"                libc::SOL_NETLINK,","highlight_start":23,"highlight_end":34}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `SOL_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:184:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                libc::SOL_NETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_LIST_MEMBERSHIPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":6292,"byte_end":6316,"line_start":185,"line_end":185,"column_start":23,"column_end":47,"is_primary":true,"text":[{"text":"                libc::NETLINK_LIST_MEMBERSHIPS,","highlight_start":23,"highlight_end":47}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_LIST_MEMBERSHIPS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:185:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                libc::NETLINK_LIST_MEMBERSHIPS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `SOL_NETLINK` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":6735,"byte_end":6746,"line_start":198,"line_end":198,"column_start":27,"column_end":38,"is_primary":true,"text":[{"text":"                    libc::SOL_NETLINK,","highlight_start":27,"highlight_end":38}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `SOL_NETLINK` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:198:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::SOL_NETLINK,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NETLINK_LIST_MEMBERSHIPS` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":6774,"byte_end":6798,"line_start":199,"line_end":199,"column_start":27,"column_end":51,"is_primary":true,"text":[{"text":"                    libc::NETLINK_LIST_MEMBERSHIPS,","highlight_start":27,"highlight_end":51}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NETLINK_LIST_MEMBERSHIPS` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:199:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m199\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    libc::NETLINK_LIST_MEMBERSHIPS,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find type `sockaddr_nl` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2725,"byte_end":2738,"line_start":77,"line_end":77,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            pub struct $i { $($field)* }","highlight_start":13,"highlight_end":26}],"label":"similarly named struct `sockaddr_dl` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2232,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        s!(it: $(#[$attr])* pub $t $i { $($field)* });","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":8517,"byte_end":34616,"line_start":243,"line_end":1184,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"s! {","highlight_start":1,"highlight_end":5},{"text":"    pub struct ip_mreq {","highlight_start":1,"highlight_end":25},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreqn {","highlight_start":1,"highlight_end":26},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_address: in_addr,","highlight_start":1,"highlight_end":34},{"text":"        pub imr_ifindex: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreq_source {","highlight_start":1,"highlight_end":32},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_sourceaddr: in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct aiocb {","highlight_start":1,"highlight_end":23},{"text":"        pub aio_fildes: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_buf: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_nbytes: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_reqprio: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_sigevent: sigevent,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_lio_opcode: ::c_int","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct glob_t {","highlight_start":1,"highlight_end":24},{"text":"        pub gl_pathc:  ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused1: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_offs:   ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused2: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_pathv:  *mut *mut ::c_char,","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused3: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused4: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused5: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused6: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused7: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused8: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct addrinfo {","highlight_start":1,"highlight_end":26},{"text":"        pub ai_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub ai_family: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ai_socktype: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_protocol: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_addrlen: ::socklen_t,","highlight_start":1,"highlight_end":37},{"text":"        pub ai_canonname: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub ai_addr: *mut ::sockaddr,","highlight_start":1,"highlight_end":38},{"text":"        pub ai_next: *mut addrinfo,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_timebase_info {","highlight_start":1,"highlight_end":36},{"text":"        pub numer: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub denom: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stat {","highlight_start":1,"highlight_end":22},{"text":"        pub st_dev: dev_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_mode: mode_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_nlink: nlink_t,","highlight_start":1,"highlight_end":31},{"text":"        pub st_ino: ino_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_gid: ::gid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_rdev: dev_t,","highlight_start":1,"highlight_end":28},{"text":"        pub st_atime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_atime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_mtime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_mtime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_ctime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_ctime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_birthtime: time_t,","highlight_start":1,"highlight_end":34},{"text":"        pub st_birthtime_nsec: c_long,","highlight_start":1,"highlight_end":39},{"text":"        pub st_size: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_blocks: ::blkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_blksize: blksize_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_flags: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub st_gen: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub st_lspare: i32,","highlight_start":1,"highlight_end":28},{"text":"        pub st_qspare: [i64; 2],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_mutexattr_t {","highlight_start":1,"highlight_end":37},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; 8],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_condattr_t {","highlight_start":1,"highlight_end":36},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_CONDATTR_SIZE__],","highlight_start":1,"highlight_end":51},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_rwlockattr_t {","highlight_start":1,"highlight_end":38},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_RWLOCKATTR_SIZE__],","highlight_start":1,"highlight_end":53},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct siginfo_t {","highlight_start":1,"highlight_end":27},{"text":"        pub si_signo: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_errno: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_code: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub si_pid: ::pid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_status: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub si_addr: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        //Requires it to be union for tests","highlight_start":1,"highlight_end":44},{"text":"        //pub si_value: ::sigval,","highlight_start":1,"highlight_end":34},{"text":"        _pad: [usize; 9],","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sigaction {","highlight_start":1,"highlight_end":27},{"text":"        // FIXME: this field is actually a union","highlight_start":1,"highlight_end":49},{"text":"        pub sa_sigaction: ::sighandler_t,","highlight_start":1,"highlight_end":42},{"text":"        pub sa_mask: sigset_t,","highlight_start":1,"highlight_end":31},{"text":"        pub sa_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stack_t {","highlight_start":1,"highlight_end":25},{"text":"        pub ss_sp: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_size: ::size_t,","highlight_start":1,"highlight_end":31},{"text":"        pub ss_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fstore_t {","highlight_start":1,"highlight_end":26},{"text":"        pub fst_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_posmode: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub fst_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_bytesalloc: ::off_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fpunchhole_t {","highlight_start":1,"highlight_end":30},{"text":"        pub fp_flags: ::c_uint, /* unused */","highlight_start":1,"highlight_end":45},{"text":"        pub reserved: ::c_uint, /* (to maintain 8-byte alignment) */","highlight_start":1,"highlight_end":69},{"text":"        pub fp_offset: ::off_t, /* IN: start of the region */","highlight_start":1,"highlight_end":62},{"text":"        pub fp_length: ::off_t, /* IN: size of the region */","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ftrimactivefile_t {","highlight_start":1,"highlight_end":35},{"text":"        pub fta_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fta_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fspecread_t {","highlight_start":1,"highlight_end":29},{"text":"        pub fsr_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub reserved: ::c_uint,","highlight_start":1,"highlight_end":32},{"text":"        pub fsr_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fsr_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct radvisory {","highlight_start":1,"highlight_end":27},{"text":"        pub ra_offset: ::off_t,","highlight_start":1,"highlight_end":32},{"text":"        pub ra_count: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct statvfs {","highlight_start":1,"highlight_end":25},{"text":"        pub f_bsize: ::c_ulong,","highlight_start":1,"highlight_end":32},{"text":"        pub f_frsize: ::c_ulong,","highlight_start":1,"highlight_end":33},{"text":"        pub f_blocks: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_bfree: ::fsblkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_bavail: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_files: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_ffree: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_favail: ::fsfilcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_fsid: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_flag: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_namemax: ::c_ulong,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct Dl_info {","highlight_start":1,"highlight_end":25},{"text":"        pub dli_fname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_fbase: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"        pub dli_sname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_saddr: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_in {","highlight_start":1,"highlight_end":29},{"text":"        pub sin_len: u8,","highlight_start":1,"highlight_end":25},{"text":"        pub sin_family: ::sa_family_t,","highlight_start":1,"highlight_end":39},{"text":"        pub sin_port: ::in_port_t,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_zero: [::c_char; 8],","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct kevent64_s {","highlight_start":1,"highlight_end":28},{"text":"        pub ident: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub filter: i16,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u16,","highlight_start":1,"highlight_end":24},{"text":"        pub fflags: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub data: i64,","highlight_start":1,"highlight_end":23},{"text":"        pub udata: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub ext: [u64; 2],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct dqblk {","highlight_start":1,"highlight_end":23},{"text":"        pub dqb_bhardlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_bsoftlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub dqb_ihardlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_isoftlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curinodes: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub dqb_btime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_itime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_id: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub dqb_spare: [u32; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct if_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub ifm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub ifm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub ifm_data: if_data,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifa_msghdr {","highlight_start":1,"highlight_end":28},{"text":"        pub ifam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_version: ::c_uchar,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_type: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ifam_addrs: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_flags: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_index: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifam_metric: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr {","highlight_start":1,"highlight_end":29},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr2 {","highlight_start":1,"highlight_end":30},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifmam_refcount: i32,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_metrics {","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_locks: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_mtu: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_hopcount: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_expire: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_recvpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_sendpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_ssthresh: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_rtt: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_rttvar: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_pksent: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_state: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_filler: [u32; 3],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_pid: ::pid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_seq: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_errno: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr2 {","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_refcnt: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rtm_parentflags: ::c_int,","highlight_start":1,"highlight_end":38},{"text":"        pub rtm_reserved: ::c_int,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct termios {","highlight_start":1,"highlight_end":25},{"text":"        pub c_iflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_oflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_lflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cc: [::cc_t; ::NCCS],","highlight_start":1,"highlight_end":36},{"text":"        pub c_ispeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_ospeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct flock {","highlight_start":1,"highlight_end":23},{"text":"        pub l_start: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub l_len: ::off_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_pid: ::pid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_type: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub l_whence: ::c_short,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sf_hdtr {","highlight_start":1,"highlight_end":25},{"text":"        pub headers: *mut ::iovec,","highlight_start":1,"highlight_end":35},{"text":"        pub hdr_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub trailers: *mut ::iovec,","highlight_start":1,"highlight_end":36},{"text":"        pub trl_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct lconv {","highlight_start":1,"highlight_end":23},{"text":"        pub decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub grouping: *mut ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub int_curr_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub currency_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub mon_decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_grouping: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub positive_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub negative_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_frac_digits: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub frac_digits: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub int_p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub int_n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskinfo {","highlight_start":1,"highlight_end":31},{"text":"        pub pti_virtual_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_resident_size: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_total_user: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_total_system: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_user: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_system: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub pti_policy: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_faults: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_pageins: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub pti_cow_faults: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_messages_sent: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_messages_received: i32,","highlight_start":1,"highlight_end":40},{"text":"        pub pti_syscalls_mach: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_syscalls_unix: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_csw: i32,","highlight_start":1,"highlight_end":26},{"text":"        pub pti_threadnum: i32,","highlight_start":1,"highlight_end":32},{"text":"        pub pti_numrunning: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_priority: i32,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_bsdinfo {","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub pbi_status: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_xstatus: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_pid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_ppid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_ruid: ::uid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_rgid: ::gid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_svuid: ::uid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pbi_svgid: ::gid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub rfu_1: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub pbi_comm: [::c_char; MAXCOMLEN],","highlight_start":1,"highlight_end":45},{"text":"        pub pbi_name: [::c_char; 32], // MAXCOMLEN * 2, but macro isn't happy...","highlight_start":1,"highlight_end":81},{"text":"        pub pbi_nfiles: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_pgid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_pjobc: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub e_tdev: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub e_tpgid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_nice: i32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_start_tvsec: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub pbi_start_tvusec: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskallinfo {","highlight_start":1,"highlight_end":34},{"text":"        pub pbsd: proc_bsdinfo,","highlight_start":1,"highlight_end":32},{"text":"        pub ptinfo: proc_taskinfo,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xsw_usage {","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_total: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_avail: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_used: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_pagesize: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub xsu_encrypted: ::boolean_t,","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xucred {","highlight_start":1,"highlight_end":24},{"text":"        pub cr_version: ::c_uint,","highlight_start":1,"highlight_end":34},{"text":"        pub cr_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub cr_ngroups: ::c_short,","highlight_start":1,"highlight_end":35},{"text":"        pub cr_groups: [::gid_t;16]","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header {","highlight_start":1,"highlight_end":29},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header_64 {","highlight_start":1,"highlight_end":32},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub reserved: u32,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command {","highlight_start":1,"highlight_end":33},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command_64 {","highlight_start":1,"highlight_end":36},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct load_command {","highlight_start":1,"highlight_end":30},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_dl {","highlight_start":1,"highlight_end":29},{"text":"        pub sdl_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sdl_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_nlen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_alen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_slen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_data: [::c_char; 12],","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_inarp {","highlight_start":1,"highlight_end":32},{"text":"        pub sin_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sin_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_port: ::c_ushort,","highlight_start":1,"highlight_end":34},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_srcaddr: ::in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub sin_tos: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_other: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_ctl {","highlight_start":1,"highlight_end":30},{"text":"        pub sc_len: ::c_uchar,","highlight_start":1,"highlight_end":31},{"text":"        pub sc_family: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_sysaddr: u16,","highlight_start":1,"highlight_end":29},{"text":"        pub sc_id: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sc_unit: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub sc_reserved: [u32; 5],","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_pktinfo {","highlight_start":1,"highlight_end":28},{"text":"        pub ipi_ifindex: ::c_uint,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi_spec_dst: ::in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub ipi_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in6_pktinfo {","highlight_start":1,"highlight_end":29},{"text":"        pub ipi6_addr: ::in6_addr,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi6_ifindex: ::c_uint,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/ipc.h:","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ipc_perm {","highlight_start":1,"highlight_end":26},{"text":"        pub uid: ::uid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub gid: ::gid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub cuid: ::uid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub cgid: ::gid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub mode: ::mode_t,","highlight_start":1,"highlight_end":28},{"text":"        pub _seq: ::c_ushort,","highlight_start":1,"highlight_end":30},{"text":"        pub _key: ::key_t,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/sem.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sembuf {","highlight_start":1,"highlight_end":24},{"text":"        pub sem_num: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sem_op: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub sem_flg: ::c_short,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/shm.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct arphdr {","highlight_start":1,"highlight_end":24},{"text":"        pub ar_hrd: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_pro: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_hln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_pln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_op: u16,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_addr {","highlight_start":1,"highlight_end":25},{"text":"        pub s_addr: ::in_addr_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // net/ndrv.h","highlight_start":1,"highlight_end":18},{"text":"    pub struct sockaddr_ndrv {","highlight_start":1,"highlight_end":31},{"text":"        pub snd_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub snd_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub snd_name: [::c_uchar; ::IFNAMSIZ],","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/socket.h","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sa_endpoints_t {","highlight_start":1,"highlight_end":32},{"text":"        pub sae_srcif: ::c_uint, // optional source interface","highlight_start":1,"highlight_end":62},{"text":"        pub sae_srcaddr: *const ::sockaddr, // optional source address","highlight_start":1,"highlight_end":71},{"text":"        pub sae_srcaddrlen: ::socklen_t, // size of source address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddr: *const ::sockaddr, // destination address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddrlen: ::socklen_t, // size of destination address","highlight_start":1,"highlight_end":72},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct timex {","highlight_start":1,"highlight_end":23},{"text":"        pub modes: ::c_uint,","highlight_start":1,"highlight_end":29},{"text":"        pub offset: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub freq: ::c_long,","highlight_start":1,"highlight_end":28},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub status: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub constant: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub precision: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub tolerance: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub ppsfreq: ::c_long,","highlight_start":1,"highlight_end":31},{"text":"        pub jitter: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub shift: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub stabil: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub jitcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub calcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub errcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub stbcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ntptimeval {","highlight_start":1,"highlight_end":28},{"text":"        pub time: ::timespec,","highlight_start":1,"highlight_end":30},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub tai: ::c_long,","highlight_start":1,"highlight_end":27},{"text":"        pub time_state: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_standard_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub no_data: natural_t,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_extended_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub timeshare: boolean_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_time_constraint_policy {","highlight_start":1,"highlight_end":47},{"text":"        pub period: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub computation: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub constraint: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub preemptible: boolean_t,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_precedence_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub importance: integer_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_affinity_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub affinity_tag: integer_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_background_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub priority: integer_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_latency_qos_policy {","highlight_start":1,"highlight_end":43},{"text":"        pub thread_latency_qos_tier: thread_latency_qos_t,","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_throughput_qos_policy {","highlight_start":1,"highlight_end":46},{"text":"        pub thread_throughput_qos_tier: thread_throughput_qos_t,","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // malloc/malloc.h","highlight_start":1,"highlight_end":23},{"text":"    pub struct malloc_statistics_t {","highlight_start":1,"highlight_end":37},{"text":"        pub blocks_in_use: ::c_uint,","highlight_start":1,"highlight_end":37},{"text":"        pub size_in_use: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub max_size_in_use: ::size_t,","highlight_start":1,"highlight_end":39},{"text":"        pub size_allocated: ::size_t,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct mstats {","highlight_start":1,"highlight_end":24},{"text":"        pub bytes_total: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub chunks_used: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_used: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub chunks_free: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_free: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_range_t {","highlight_start":1,"highlight_end":28},{"text":"        pub address: ::vm_address_t,","highlight_start":1,"highlight_end":37},{"text":"        pub size: ::vm_size_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sched.h","highlight_start":1,"highlight_end":15},{"text":"    pub struct sched_param {","highlight_start":1,"highlight_end":29},{"text":"        pub sched_priority: ::c_int,","highlight_start":1,"highlight_end":37},{"text":"        __opaque: [::c_char; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vinfo_stat {","highlight_start":1,"highlight_end":28},{"text":"        pub vst_dev: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_mode: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_nlink: u16,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ino: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_atime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_atimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_mtime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_mtimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_ctime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ctimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtime: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtimensec: i64,","highlight_start":1,"highlight_end":36},{"text":"        pub vst_size: ::off_t,","highlight_start":1,"highlight_end":31},{"text":"        pub vst_blocks: i64,","highlight_start":1,"highlight_end":29},{"text":"        pub vst_blksize: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_gen: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_rdev: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_qspare: [i64; 2],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info {","highlight_start":1,"highlight_end":28},{"text":"        pub vi_stat: vinfo_stat,","highlight_start":1,"highlight_end":33},{"text":"        pub vi_type: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub vi_pad: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub vi_fsid: ::fsid_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info_path {","highlight_start":1,"highlight_end":33},{"text":"        pub vip_vi: vnode_info,","highlight_start":1,"highlight_end":32},{"text":"        // Normally it's `vip_path: [::c_char; MAXPATHLEN]` but because libc supports an old rustc","highlight_start":1,"highlight_end":99},{"text":"        // version, we go around this limitation like this.","highlight_start":1,"highlight_end":60},{"text":"        pub vip_path: [[::c_char; 32]; 32],","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_vnodepathinfo {","highlight_start":1,"highlight_end":36},{"text":"        pub pvi_cdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"        pub pvi_rdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_statistics {","highlight_start":1,"highlight_end":31},{"text":"        pub free_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub active_count: natural_t,","highlight_start":1,"highlight_end":37},{"text":"        pub inactive_count: natural_t,","highlight_start":1,"highlight_end":39},{"text":"        pub wire_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub zero_fill_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub reactivations: natural_t,","highlight_start":1,"highlight_end":38},{"text":"        pub pageins: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pageouts: natural_t,","highlight_start":1,"highlight_end":33},{"text":"        pub faults: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub cow_faults: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub lookups: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub hits: natural_t,","highlight_start":1,"highlight_end":29},{"text":"        pub purgeable_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub purges: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub speculative_count: natural_t,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct task_thread_times_info {","highlight_start":1,"highlight_end":40},{"text":"        pub user_time: time_value_t,","highlight_start":1,"highlight_end":37},{"text":"        pub system_time: time_value_t,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v0 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v1 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v2 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v3 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v4 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_logical_writes: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_lifetime_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_instructions: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub ri_cycles: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub ri_billed_energy: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_serviced_energy: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_interval_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_runnable_time: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct image_offset {","highlight_start":1,"highlight_end":30},{"text":"        pub uuid: ::uuid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub offset: u32,","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrlist {","highlight_start":1,"highlight_end":26},{"text":"        pub bitmapcount: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub reserved: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrreference_t {","highlight_start":1,"highlight_end":33},{"text":"        pub attr_dataoffset: i32,","highlight_start":1,"highlight_end":34},{"text":"        pub attr_length: u32,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_capabilities_attr_t {","highlight_start":1,"highlight_end":41},{"text":"        pub capabilities: vol_capabilities_set_t,","highlight_start":1,"highlight_end":50},{"text":"        pub valid: vol_capabilities_set_t,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attribute_set_t {","highlight_start":1,"highlight_end":33},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_attributes_attr_t {","highlight_start":1,"highlight_end":39},{"text":"        pub validattr: attribute_set_t,","highlight_start":1,"highlight_end":40},{"text":"        pub nativeattr: attribute_set_t,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_packedN, repr(packed(4)))]","highlight_start":1,"highlight_end":47},{"text":"    pub struct ifconf {","highlight_start":1,"highlight_end":24},{"text":"        pub ifc_len: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        #[cfg(libc_union)]","highlight_start":1,"highlight_end":27},{"text":"        pub ifc_ifcu: __c_anonymous_ifc_ifcu,","highlight_start":1,"highlight_end":46},{"text":"        #[cfg(not(libc_union))]","highlight_start":1,"highlight_end":32},{"text":"        pub ifc_ifcu: *mut ifreq,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_align, repr(align(8)))]","highlight_start":1,"highlight_end":44},{"text":"    pub struct tcp_connection_info {","highlight_start":1,"highlight_end":37},{"text":"        pub tcpi_state: u8,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_snd_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rcv_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        __pad1: u8,","highlight_start":1,"highlight_end":20},{"text":"        pub tcpi_options: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_flags: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub tcpi_rto: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub tcpi_maxseg: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_snd_ssthresh: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_snd_cwnd: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub tcpi_snd_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_snd_sbbytes: u32,","highlight_start":1,"highlight_end":35},{"text":"        pub tcpi_rcv_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rttcur: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_srtt: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_rttvar: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_tfo_cookie_req: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_cookie_rcv: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_syn_loss: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_tfo_syn_data_sent: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_syn_data_acked: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_syn_data_rcv: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_cookie_req_rcv: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_sent: u32,","highlight_start":1,"highlight_end":39},{"text":"        pub tcpi_tfo_cookie_invalid: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_wrong: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_no_cookie_rcv: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_heuristics_disable: u32,","highlight_start":1,"highlight_end":46},{"text":"        pub tcpi_tfo_send_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_recv_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_onebyte_proxy: u32,","highlight_start":1,"highlight_end":41},{"text":"        __pad2: u32,","highlight_start":1,"highlight_end":21},{"text":"        pub tcpi_txpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_txbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_txretransmitbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rxbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rxoutoforderbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxretransmitpackets: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":8353,"byte_end":8364,"line_start":251,"line_end":251,"column_start":44,"column_end":55,"is_primary":true,"text":[{"text":"        let mut sock_len = size_of::<libc::sockaddr_nl>() as u32;","highlight_start":44,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":8353,"byte_end":8364,"line_start":251,"line_end":251,"column_start":44,"column_end":55,"is_primary":true,"text":[{"text":"        let mut sock_len = size_of::<libc::sockaddr_nl>() as u32;","highlight_start":44,"highlight_end":55}],"label":null,"suggested_replacement":"sockaddr_dl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `sockaddr_nl` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:251:44\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        let mut sock_len = size_of::<libc::sockaddr_nl>() as u32;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `sockaddr_dl`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:243:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0ms! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ip_mreq {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_multiaddr: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_interface: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `sockaddr_dl` defined here\u001b[0m\n\n"}
{"message":"cannot find type `sockaddr_nl` in crate `libc`","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2725,"byte_end":2738,"line_start":77,"line_end":77,"column_start":13,"column_end":26,"is_primary":false,"text":[{"text":"            pub struct $i { $($field)* }","highlight_start":13,"highlight_end":26}],"label":"similarly named struct `sockaddr_dl` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2232,"byte_end":2277,"line_start":66,"line_end":66,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        s!(it: $(#[$attr])* pub $t $i { $($field)* });","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs","byte_start":8517,"byte_end":34616,"line_start":243,"line_end":1184,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"s! {","highlight_start":1,"highlight_end":5},{"text":"    pub struct ip_mreq {","highlight_start":1,"highlight_end":25},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreqn {","highlight_start":1,"highlight_end":26},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_address: in_addr,","highlight_start":1,"highlight_end":34},{"text":"        pub imr_ifindex: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ip_mreq_source {","highlight_start":1,"highlight_end":32},{"text":"        pub imr_multiaddr: in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub imr_sourceaddr: in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub imr_interface: in_addr,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct aiocb {","highlight_start":1,"highlight_end":23},{"text":"        pub aio_fildes: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub aio_buf: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_nbytes: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_reqprio: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub aio_sigevent: sigevent,","highlight_start":1,"highlight_end":36},{"text":"        pub aio_lio_opcode: ::c_int","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct glob_t {","highlight_start":1,"highlight_end":24},{"text":"        pub gl_pathc:  ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused1: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_offs:   ::size_t,","highlight_start":1,"highlight_end":33},{"text":"        __unused2: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub gl_pathv:  *mut *mut ::c_char,","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused3: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        __unused4: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused5: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused6: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused7: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        __unused8: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct addrinfo {","highlight_start":1,"highlight_end":26},{"text":"        pub ai_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub ai_family: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ai_socktype: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_protocol: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ai_addrlen: ::socklen_t,","highlight_start":1,"highlight_end":37},{"text":"        pub ai_canonname: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub ai_addr: *mut ::sockaddr,","highlight_start":1,"highlight_end":38},{"text":"        pub ai_next: *mut addrinfo,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_timebase_info {","highlight_start":1,"highlight_end":36},{"text":"        pub numer: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub denom: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stat {","highlight_start":1,"highlight_end":22},{"text":"        pub st_dev: dev_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_mode: mode_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_nlink: nlink_t,","highlight_start":1,"highlight_end":31},{"text":"        pub st_ino: ino_t,","highlight_start":1,"highlight_end":27},{"text":"        pub st_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_gid: ::gid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub st_rdev: dev_t,","highlight_start":1,"highlight_end":28},{"text":"        pub st_atime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_atime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_mtime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_mtime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_ctime: time_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_ctime_nsec: c_long,","highlight_start":1,"highlight_end":35},{"text":"        pub st_birthtime: time_t,","highlight_start":1,"highlight_end":34},{"text":"        pub st_birthtime_nsec: c_long,","highlight_start":1,"highlight_end":39},{"text":"        pub st_size: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub st_blocks: ::blkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_blksize: blksize_t,","highlight_start":1,"highlight_end":35},{"text":"        pub st_flags: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub st_gen: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub st_lspare: i32,","highlight_start":1,"highlight_end":28},{"text":"        pub st_qspare: [i64; 2],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_mutexattr_t {","highlight_start":1,"highlight_end":37},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; 8],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_condattr_t {","highlight_start":1,"highlight_end":36},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_CONDATTR_SIZE__],","highlight_start":1,"highlight_end":51},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct pthread_rwlockattr_t {","highlight_start":1,"highlight_end":38},{"text":"        __sig: ::c_long,","highlight_start":1,"highlight_end":25},{"text":"        __opaque: [u8; __PTHREAD_RWLOCKATTR_SIZE__],","highlight_start":1,"highlight_end":53},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct siginfo_t {","highlight_start":1,"highlight_end":27},{"text":"        pub si_signo: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_errno: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"        pub si_code: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub si_pid: ::pid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub si_status: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub si_addr: *mut ::c_void,","highlight_start":1,"highlight_end":36},{"text":"        //Requires it to be union for tests","highlight_start":1,"highlight_end":44},{"text":"        //pub si_value: ::sigval,","highlight_start":1,"highlight_end":34},{"text":"        _pad: [usize; 9],","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sigaction {","highlight_start":1,"highlight_end":27},{"text":"        // FIXME: this field is actually a union","highlight_start":1,"highlight_end":49},{"text":"        pub sa_sigaction: ::sighandler_t,","highlight_start":1,"highlight_end":42},{"text":"        pub sa_mask: sigset_t,","highlight_start":1,"highlight_end":31},{"text":"        pub sa_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct stack_t {","highlight_start":1,"highlight_end":25},{"text":"        pub ss_sp: *mut ::c_void,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_size: ::size_t,","highlight_start":1,"highlight_end":31},{"text":"        pub ss_flags: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fstore_t {","highlight_start":1,"highlight_end":26},{"text":"        pub fst_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_posmode: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub fst_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fst_bytesalloc: ::off_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fpunchhole_t {","highlight_start":1,"highlight_end":30},{"text":"        pub fp_flags: ::c_uint, /* unused */","highlight_start":1,"highlight_end":45},{"text":"        pub reserved: ::c_uint, /* (to maintain 8-byte alignment) */","highlight_start":1,"highlight_end":69},{"text":"        pub fp_offset: ::off_t, /* IN: start of the region */","highlight_start":1,"highlight_end":62},{"text":"        pub fp_length: ::off_t, /* IN: size of the region */","highlight_start":1,"highlight_end":61},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ftrimactivefile_t {","highlight_start":1,"highlight_end":35},{"text":"        pub fta_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fta_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct fspecread_t {","highlight_start":1,"highlight_end":29},{"text":"        pub fsr_flags: ::c_uint,","highlight_start":1,"highlight_end":33},{"text":"        pub reserved: ::c_uint,","highlight_start":1,"highlight_end":32},{"text":"        pub fsr_offset: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"        pub fsr_length: ::off_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct radvisory {","highlight_start":1,"highlight_end":27},{"text":"        pub ra_offset: ::off_t,","highlight_start":1,"highlight_end":32},{"text":"        pub ra_count: ::c_int,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct statvfs {","highlight_start":1,"highlight_end":25},{"text":"        pub f_bsize: ::c_ulong,","highlight_start":1,"highlight_end":32},{"text":"        pub f_frsize: ::c_ulong,","highlight_start":1,"highlight_end":33},{"text":"        pub f_blocks: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_bfree: ::fsblkcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_bavail: ::fsblkcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_files: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_ffree: ::fsfilcnt_t,","highlight_start":1,"highlight_end":35},{"text":"        pub f_favail: ::fsfilcnt_t,","highlight_start":1,"highlight_end":36},{"text":"        pub f_fsid: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_flag: ::c_ulong,","highlight_start":1,"highlight_end":31},{"text":"        pub f_namemax: ::c_ulong,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct Dl_info {","highlight_start":1,"highlight_end":25},{"text":"        pub dli_fname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_fbase: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"        pub dli_sname: *const ::c_char,","highlight_start":1,"highlight_end":40},{"text":"        pub dli_saddr: *mut ::c_void,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_in {","highlight_start":1,"highlight_end":29},{"text":"        pub sin_len: u8,","highlight_start":1,"highlight_end":25},{"text":"        pub sin_family: ::sa_family_t,","highlight_start":1,"highlight_end":39},{"text":"        pub sin_port: ::in_port_t,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_zero: [::c_char; 8],","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct kevent64_s {","highlight_start":1,"highlight_end":28},{"text":"        pub ident: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub filter: i16,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u16,","highlight_start":1,"highlight_end":24},{"text":"        pub fflags: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub data: i64,","highlight_start":1,"highlight_end":23},{"text":"        pub udata: u64,","highlight_start":1,"highlight_end":24},{"text":"        pub ext: [u64; 2],","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct dqblk {","highlight_start":1,"highlight_end":23},{"text":"        pub dqb_bhardlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_bsoftlimit: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub dqb_ihardlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_isoftlimit: u32,","highlight_start":1,"highlight_end":33},{"text":"        pub dqb_curinodes: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub dqb_btime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_itime: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub dqb_id: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub dqb_spare: [u32; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct if_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub ifm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub ifm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub ifm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub ifm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub ifm_data: if_data,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifa_msghdr {","highlight_start":1,"highlight_end":28},{"text":"        pub ifam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_version: ::c_uchar,","highlight_start":1,"highlight_end":37},{"text":"        pub ifam_type: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ifam_addrs: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_flags: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"        pub ifam_index: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub ifam_metric: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr {","highlight_start":1,"highlight_end":29},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ifma_msghdr2 {","highlight_start":1,"highlight_end":30},{"text":"        pub ifmam_msglen: ::c_ushort,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_version: ::c_uchar,","highlight_start":1,"highlight_end":38},{"text":"        pub ifmam_type: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub ifmam_addrs: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_flags: ::c_int,","highlight_start":1,"highlight_end":34},{"text":"        pub ifmam_index: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub ifmam_refcount: i32,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_metrics {","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_locks: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_mtu: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_hopcount: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_expire: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_recvpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_sendpipe: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_ssthresh: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub rmx_rtt: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub rmx_rttvar: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_pksent: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub rmx_state: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rmx_filler: [u32; 3],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr {","highlight_start":1,"highlight_end":27},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_pid: ::pid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_seq: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_errno: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rt_msghdr2 {","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_msglen: ::c_ushort,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_version: ::c_uchar,","highlight_start":1,"highlight_end":36},{"text":"        pub rtm_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub rtm_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_flags: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_addrs: ::c_int,","highlight_start":1,"highlight_end":32},{"text":"        pub rtm_refcnt: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub rtm_parentflags: ::c_int,","highlight_start":1,"highlight_end":38},{"text":"        pub rtm_reserved: ::c_int,","highlight_start":1,"highlight_end":35},{"text":"        pub rtm_use: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub rtm_inits: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub rtm_rmx: rt_metrics,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct termios {","highlight_start":1,"highlight_end":25},{"text":"        pub c_iflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_oflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_lflag: ::tcflag_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_cc: [::cc_t; ::NCCS],","highlight_start":1,"highlight_end":36},{"text":"        pub c_ispeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"        pub c_ospeed: ::speed_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct flock {","highlight_start":1,"highlight_end":23},{"text":"        pub l_start: ::off_t,","highlight_start":1,"highlight_end":30},{"text":"        pub l_len: ::off_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_pid: ::pid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub l_type: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub l_whence: ::c_short,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sf_hdtr {","highlight_start":1,"highlight_end":25},{"text":"        pub headers: *mut ::iovec,","highlight_start":1,"highlight_end":35},{"text":"        pub hdr_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub trailers: *mut ::iovec,","highlight_start":1,"highlight_end":36},{"text":"        pub trl_cnt: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct lconv {","highlight_start":1,"highlight_end":23},{"text":"        pub decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub grouping: *mut ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub int_curr_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub currency_symbol: *mut ::c_char,","highlight_start":1,"highlight_end":44},{"text":"        pub mon_decimal_point: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_thousands_sep: *mut ::c_char,","highlight_start":1,"highlight_end":46},{"text":"        pub mon_grouping: *mut ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub positive_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub negative_sign: *mut ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_frac_digits: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub frac_digits: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":37},{"text":"        pub n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":38},{"text":"        pub p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":35},{"text":"        pub int_p_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_n_cs_precedes: ::c_char,","highlight_start":1,"highlight_end":41},{"text":"        pub int_p_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_n_sep_by_space: ::c_char,","highlight_start":1,"highlight_end":42},{"text":"        pub int_p_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"        pub int_n_sign_posn: ::c_char,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskinfo {","highlight_start":1,"highlight_end":31},{"text":"        pub pti_virtual_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_resident_size: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_total_user: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_total_system: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_user: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub pti_threads_system: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub pti_policy: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_faults: i32,","highlight_start":1,"highlight_end":29},{"text":"        pub pti_pageins: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub pti_cow_faults: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_messages_sent: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_messages_received: i32,","highlight_start":1,"highlight_end":40},{"text":"        pub pti_syscalls_mach: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_syscalls_unix: i32,","highlight_start":1,"highlight_end":36},{"text":"        pub pti_csw: i32,","highlight_start":1,"highlight_end":26},{"text":"        pub pti_threadnum: i32,","highlight_start":1,"highlight_end":32},{"text":"        pub pti_numrunning: i32,","highlight_start":1,"highlight_end":33},{"text":"        pub pti_priority: i32,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_bsdinfo {","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub pbi_status: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_xstatus: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_pid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_ppid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub pbi_ruid: ::uid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_rgid: ::gid_t,","highlight_start":1,"highlight_end":31},{"text":"        pub pbi_svuid: ::uid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pbi_svgid: ::gid_t,","highlight_start":1,"highlight_end":32},{"text":"        pub rfu_1: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub pbi_comm: [::c_char; MAXCOMLEN],","highlight_start":1,"highlight_end":45},{"text":"        pub pbi_name: [::c_char; 32], // MAXCOMLEN * 2, but macro isn't happy...","highlight_start":1,"highlight_end":81},{"text":"        pub pbi_nfiles: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub pbi_pgid: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_pjobc: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub e_tdev: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub e_tpgid: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub pbi_nice: i32,","highlight_start":1,"highlight_end":27},{"text":"        pub pbi_start_tvsec: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub pbi_start_tvusec: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_taskallinfo {","highlight_start":1,"highlight_end":34},{"text":"        pub pbsd: proc_bsdinfo,","highlight_start":1,"highlight_end":32},{"text":"        pub ptinfo: proc_taskinfo,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xsw_usage {","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_total: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_avail: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub xsu_used: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub xsu_pagesize: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub xsu_encrypted: ::boolean_t,","highlight_start":1,"highlight_end":40},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct xucred {","highlight_start":1,"highlight_end":24},{"text":"        pub cr_version: ::c_uint,","highlight_start":1,"highlight_end":34},{"text":"        pub cr_uid: ::uid_t,","highlight_start":1,"highlight_end":29},{"text":"        pub cr_ngroups: ::c_short,","highlight_start":1,"highlight_end":35},{"text":"        pub cr_groups: [::gid_t;16]","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header {","highlight_start":1,"highlight_end":29},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[deprecated(","highlight_start":1,"highlight_end":18},{"text":"        since = \"0.2.55\",","highlight_start":1,"highlight_end":26},{"text":"        note = \"Use the `mach2` crate instead\",","highlight_start":1,"highlight_end":48},{"text":"    )]","highlight_start":1,"highlight_end":7},{"text":"    pub struct mach_header_64 {","highlight_start":1,"highlight_end":32},{"text":"        pub magic: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub cputype: cpu_type_t,","highlight_start":1,"highlight_end":33},{"text":"        pub cpusubtype: cpu_subtype_t,","highlight_start":1,"highlight_end":39},{"text":"        pub filetype: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub ncmds: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sizeofcmds: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub reserved: u32,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command {","highlight_start":1,"highlight_end":33},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct segment_command_64 {","highlight_start":1,"highlight_end":36},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub segname: [::c_char; 16],","highlight_start":1,"highlight_end":37},{"text":"        pub vmaddr: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub vmsize: u64,","highlight_start":1,"highlight_end":25},{"text":"        pub fileoff: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub filesize: u64,","highlight_start":1,"highlight_end":27},{"text":"        pub maxprot: vm_prot_t,","highlight_start":1,"highlight_end":32},{"text":"        pub initprot: vm_prot_t,","highlight_start":1,"highlight_end":33},{"text":"        pub nsects: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub flags: u32,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct load_command {","highlight_start":1,"highlight_end":30},{"text":"        pub cmd: u32,","highlight_start":1,"highlight_end":22},{"text":"        pub cmdsize: u32,","highlight_start":1,"highlight_end":26},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_dl {","highlight_start":1,"highlight_end":29},{"text":"        pub sdl_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sdl_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_index: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"        pub sdl_type: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_nlen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_alen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_slen: ::c_uchar,","highlight_start":1,"highlight_end":33},{"text":"        pub sdl_data: [::c_char; 12],","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_inarp {","highlight_start":1,"highlight_end":32},{"text":"        pub sin_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub sin_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub sin_port: ::c_ushort,","highlight_start":1,"highlight_end":34},{"text":"        pub sin_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_srcaddr: ::in_addr,","highlight_start":1,"highlight_end":36},{"text":"        pub sin_tos: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sin_other: ::c_ushort,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sockaddr_ctl {","highlight_start":1,"highlight_end":30},{"text":"        pub sc_len: ::c_uchar,","highlight_start":1,"highlight_end":31},{"text":"        pub sc_family: ::c_uchar,","highlight_start":1,"highlight_end":34},{"text":"        pub ss_sysaddr: u16,","highlight_start":1,"highlight_end":29},{"text":"        pub sc_id: u32,","highlight_start":1,"highlight_end":24},{"text":"        pub sc_unit: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub sc_reserved: [u32; 5],","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_pktinfo {","highlight_start":1,"highlight_end":28},{"text":"        pub ipi_ifindex: ::c_uint,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi_spec_dst: ::in_addr,","highlight_start":1,"highlight_end":37},{"text":"        pub ipi_addr: ::in_addr,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in6_pktinfo {","highlight_start":1,"highlight_end":29},{"text":"        pub ipi6_addr: ::in6_addr,","highlight_start":1,"highlight_end":35},{"text":"        pub ipi6_ifindex: ::c_uint,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/ipc.h:","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ipc_perm {","highlight_start":1,"highlight_end":26},{"text":"        pub uid: ::uid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub gid: ::gid_t,","highlight_start":1,"highlight_end":26},{"text":"        pub cuid: ::uid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub cgid: ::gid_t,","highlight_start":1,"highlight_end":27},{"text":"        pub mode: ::mode_t,","highlight_start":1,"highlight_end":28},{"text":"        pub _seq: ::c_ushort,","highlight_start":1,"highlight_end":30},{"text":"        pub _key: ::key_t,","highlight_start":1,"highlight_end":27},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/sem.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sembuf {","highlight_start":1,"highlight_end":24},{"text":"        pub sem_num: ::c_ushort,","highlight_start":1,"highlight_end":33},{"text":"        pub sem_op: ::c_short,","highlight_start":1,"highlight_end":31},{"text":"        pub sem_flg: ::c_short,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/shm.h","highlight_start":1,"highlight_end":17},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct arphdr {","highlight_start":1,"highlight_end":24},{"text":"        pub ar_hrd: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_pro: u16,","highlight_start":1,"highlight_end":25},{"text":"        pub ar_hln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_pln: u8,","highlight_start":1,"highlight_end":24},{"text":"        pub ar_op: u16,","highlight_start":1,"highlight_end":24},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct in_addr {","highlight_start":1,"highlight_end":25},{"text":"        pub s_addr: ::in_addr_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // net/ndrv.h","highlight_start":1,"highlight_end":18},{"text":"    pub struct sockaddr_ndrv {","highlight_start":1,"highlight_end":31},{"text":"        pub snd_len: ::c_uchar,","highlight_start":1,"highlight_end":32},{"text":"        pub snd_family: ::c_uchar,","highlight_start":1,"highlight_end":35},{"text":"        pub snd_name: [::c_uchar; ::IFNAMSIZ],","highlight_start":1,"highlight_end":47},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sys/socket.h","highlight_start":1,"highlight_end":20},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct sa_endpoints_t {","highlight_start":1,"highlight_end":32},{"text":"        pub sae_srcif: ::c_uint, // optional source interface","highlight_start":1,"highlight_end":62},{"text":"        pub sae_srcaddr: *const ::sockaddr, // optional source address","highlight_start":1,"highlight_end":71},{"text":"        pub sae_srcaddrlen: ::socklen_t, // size of source address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddr: *const ::sockaddr, // destination address","highlight_start":1,"highlight_end":67},{"text":"        pub sae_dstaddrlen: ::socklen_t, // size of destination address","highlight_start":1,"highlight_end":72},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct timex {","highlight_start":1,"highlight_end":23},{"text":"        pub modes: ::c_uint,","highlight_start":1,"highlight_end":29},{"text":"        pub offset: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub freq: ::c_long,","highlight_start":1,"highlight_end":28},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub status: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub constant: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub precision: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub tolerance: ::c_long,","highlight_start":1,"highlight_end":33},{"text":"        pub ppsfreq: ::c_long,","highlight_start":1,"highlight_end":31},{"text":"        pub jitter: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub shift: ::c_int,","highlight_start":1,"highlight_end":28},{"text":"        pub stabil: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub jitcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub calcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub errcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"        pub stbcnt: ::c_long,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct ntptimeval {","highlight_start":1,"highlight_end":28},{"text":"        pub time: ::timespec,","highlight_start":1,"highlight_end":30},{"text":"        pub maxerror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub esterror: ::c_long,","highlight_start":1,"highlight_end":32},{"text":"        pub tai: ::c_long,","highlight_start":1,"highlight_end":27},{"text":"        pub time_state: ::c_int,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_standard_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub no_data: natural_t,","highlight_start":1,"highlight_end":32},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_extended_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub timeshare: boolean_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_time_constraint_policy {","highlight_start":1,"highlight_end":47},{"text":"        pub period: u32,","highlight_start":1,"highlight_end":25},{"text":"        pub computation: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub constraint: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub preemptible: boolean_t,","highlight_start":1,"highlight_end":36},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_precedence_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub importance: integer_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_affinity_policy {","highlight_start":1,"highlight_end":40},{"text":"        pub affinity_tag: integer_t,","highlight_start":1,"highlight_end":37},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_background_policy {","highlight_start":1,"highlight_end":42},{"text":"        pub priority: integer_t,","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_latency_qos_policy {","highlight_start":1,"highlight_end":43},{"text":"        pub thread_latency_qos_tier: thread_latency_qos_t,","highlight_start":1,"highlight_end":59},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct thread_throughput_qos_policy {","highlight_start":1,"highlight_end":46},{"text":"        pub thread_throughput_qos_tier: thread_throughput_qos_t,","highlight_start":1,"highlight_end":65},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // malloc/malloc.h","highlight_start":1,"highlight_end":23},{"text":"    pub struct malloc_statistics_t {","highlight_start":1,"highlight_end":37},{"text":"        pub blocks_in_use: ::c_uint,","highlight_start":1,"highlight_end":37},{"text":"        pub size_in_use: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub max_size_in_use: ::size_t,","highlight_start":1,"highlight_end":39},{"text":"        pub size_allocated: ::size_t,","highlight_start":1,"highlight_end":38},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct mstats {","highlight_start":1,"highlight_end":24},{"text":"        pub bytes_total: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub chunks_used: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_used: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"        pub chunks_free: ::size_t,","highlight_start":1,"highlight_end":35},{"text":"        pub bytes_free: ::size_t,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_range_t {","highlight_start":1,"highlight_end":28},{"text":"        pub address: ::vm_address_t,","highlight_start":1,"highlight_end":37},{"text":"        pub size: ::vm_size_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    // sched.h","highlight_start":1,"highlight_end":15},{"text":"    pub struct sched_param {","highlight_start":1,"highlight_end":29},{"text":"        pub sched_priority: ::c_int,","highlight_start":1,"highlight_end":37},{"text":"        __opaque: [::c_char; 4],","highlight_start":1,"highlight_end":33},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vinfo_stat {","highlight_start":1,"highlight_end":28},{"text":"        pub vst_dev: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_mode: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_nlink: u16,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ino: u64,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_uid: ::uid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_gid: ::gid_t,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_atime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_atimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_mtime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_mtimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_ctime: i64,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_ctimensec: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtime: i64,","highlight_start":1,"highlight_end":32},{"text":"        pub vst_birthtimensec: i64,","highlight_start":1,"highlight_end":36},{"text":"        pub vst_size: ::off_t,","highlight_start":1,"highlight_end":31},{"text":"        pub vst_blocks: i64,","highlight_start":1,"highlight_end":29},{"text":"        pub vst_blksize: i32,","highlight_start":1,"highlight_end":30},{"text":"        pub vst_flags: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub vst_gen: u32,","highlight_start":1,"highlight_end":26},{"text":"        pub vst_rdev: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub vst_qspare: [i64; 2],","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info {","highlight_start":1,"highlight_end":28},{"text":"        pub vi_stat: vinfo_stat,","highlight_start":1,"highlight_end":33},{"text":"        pub vi_type: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        pub vi_pad: ::c_int,","highlight_start":1,"highlight_end":29},{"text":"        pub vi_fsid: ::fsid_t,","highlight_start":1,"highlight_end":31},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vnode_info_path {","highlight_start":1,"highlight_end":33},{"text":"        pub vip_vi: vnode_info,","highlight_start":1,"highlight_end":32},{"text":"        // Normally it's `vip_path: [::c_char; MAXPATHLEN]` but because libc supports an old rustc","highlight_start":1,"highlight_end":99},{"text":"        // version, we go around this limitation like this.","highlight_start":1,"highlight_end":60},{"text":"        pub vip_path: [[::c_char; 32]; 32],","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct proc_vnodepathinfo {","highlight_start":1,"highlight_end":36},{"text":"        pub pvi_cdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"        pub pvi_rdir: vnode_info_path,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vm_statistics {","highlight_start":1,"highlight_end":31},{"text":"        pub free_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub active_count: natural_t,","highlight_start":1,"highlight_end":37},{"text":"        pub inactive_count: natural_t,","highlight_start":1,"highlight_end":39},{"text":"        pub wire_count: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub zero_fill_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub reactivations: natural_t,","highlight_start":1,"highlight_end":38},{"text":"        pub pageins: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub pageouts: natural_t,","highlight_start":1,"highlight_end":33},{"text":"        pub faults: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub cow_faults: natural_t,","highlight_start":1,"highlight_end":35},{"text":"        pub lookups: natural_t,","highlight_start":1,"highlight_end":32},{"text":"        pub hits: natural_t,","highlight_start":1,"highlight_end":29},{"text":"        pub purgeable_count: natural_t,","highlight_start":1,"highlight_end":40},{"text":"        pub purges: natural_t,","highlight_start":1,"highlight_end":31},{"text":"        pub speculative_count: natural_t,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct task_thread_times_info {","highlight_start":1,"highlight_end":40},{"text":"        pub user_time: time_value_t,","highlight_start":1,"highlight_end":37},{"text":"        pub system_time: time_value_t,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v0 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v1 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v2 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v3 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct rusage_info_v4 {","highlight_start":1,"highlight_end":32},{"text":"        pub ri_uuid: [u8; 16],","highlight_start":1,"highlight_end":31},{"text":"        pub ri_user_time: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub ri_system_time: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub ri_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_interrupt_wkups: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_pageins: u64,","highlight_start":1,"highlight_end":29},{"text":"        pub ri_wired_size: u64,","highlight_start":1,"highlight_end":32},{"text":"        pub ri_resident_size: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_phys_footprint: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_proc_start_abstime: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_proc_exit_abstime: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_user_time: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_child_system_time: u64,","highlight_start":1,"highlight_end":39},{"text":"        pub ri_child_pkg_idle_wkups: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_child_interrupt_wkups: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_child_pageins: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_child_elapsed_abstime: u64,","highlight_start":1,"highlight_end":43},{"text":"        pub ri_diskio_bytesread: u64,","highlight_start":1,"highlight_end":38},{"text":"        pub ri_diskio_byteswritten: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_default: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_maintenance: u64,","highlight_start":1,"highlight_end":46},{"text":"        pub ri_cpu_time_qos_background: u64,","highlight_start":1,"highlight_end":45},{"text":"        pub ri_cpu_time_qos_utility: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_cpu_time_qos_legacy: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub ri_cpu_time_qos_user_initiated: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_cpu_time_qos_user_interactive: u64,","highlight_start":1,"highlight_end":51},{"text":"        pub ri_billed_system_time: u64,","highlight_start":1,"highlight_end":40},{"text":"        pub ri_serviced_system_time: u64,","highlight_start":1,"highlight_end":42},{"text":"        pub ri_logical_writes: u64,","highlight_start":1,"highlight_end":36},{"text":"        pub ri_lifetime_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_instructions: u64,","highlight_start":1,"highlight_end":34},{"text":"        pub ri_cycles: u64,","highlight_start":1,"highlight_end":28},{"text":"        pub ri_billed_energy: u64,","highlight_start":1,"highlight_end":35},{"text":"        pub ri_serviced_energy: u64,","highlight_start":1,"highlight_end":37},{"text":"        pub ri_interval_max_phys_footprint: u64,","highlight_start":1,"highlight_end":49},{"text":"        pub ri_runnable_time: u64,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct image_offset {","highlight_start":1,"highlight_end":30},{"text":"        pub uuid: ::uuid_t,","highlight_start":1,"highlight_end":28},{"text":"        pub offset: u32,","highlight_start":1,"highlight_end":25},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrlist {","highlight_start":1,"highlight_end":26},{"text":"        pub bitmapcount: ::c_ushort,","highlight_start":1,"highlight_end":37},{"text":"        pub reserved: u16,","highlight_start":1,"highlight_end":27},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attrreference_t {","highlight_start":1,"highlight_end":33},{"text":"        pub attr_dataoffset: i32,","highlight_start":1,"highlight_end":34},{"text":"        pub attr_length: u32,","highlight_start":1,"highlight_end":30},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_capabilities_attr_t {","highlight_start":1,"highlight_end":41},{"text":"        pub capabilities: vol_capabilities_set_t,","highlight_start":1,"highlight_end":50},{"text":"        pub valid: vol_capabilities_set_t,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct attribute_set_t {","highlight_start":1,"highlight_end":33},{"text":"        pub commonattr: attrgroup_t,","highlight_start":1,"highlight_end":37},{"text":"        pub volattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub dirattr: attrgroup_t,","highlight_start":1,"highlight_end":34},{"text":"        pub fileattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"        pub forkattr: attrgroup_t,","highlight_start":1,"highlight_end":35},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    pub struct vol_attributes_attr_t {","highlight_start":1,"highlight_end":39},{"text":"        pub validattr: attribute_set_t,","highlight_start":1,"highlight_end":40},{"text":"        pub nativeattr: attribute_set_t,","highlight_start":1,"highlight_end":41},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_packedN, repr(packed(4)))]","highlight_start":1,"highlight_end":47},{"text":"    pub struct ifconf {","highlight_start":1,"highlight_end":24},{"text":"        pub ifc_len: ::c_int,","highlight_start":1,"highlight_end":30},{"text":"        #[cfg(libc_union)]","highlight_start":1,"highlight_end":27},{"text":"        pub ifc_ifcu: __c_anonymous_ifc_ifcu,","highlight_start":1,"highlight_end":46},{"text":"        #[cfg(not(libc_union))]","highlight_start":1,"highlight_end":32},{"text":"        pub ifc_ifcu: *mut ifreq,","highlight_start":1,"highlight_end":34},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[cfg_attr(libc_align, repr(align(8)))]","highlight_start":1,"highlight_end":44},{"text":"    pub struct tcp_connection_info {","highlight_start":1,"highlight_end":37},{"text":"        pub tcpi_state: u8,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_snd_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rcv_wscale: u8,","highlight_start":1,"highlight_end":33},{"text":"        __pad1: u8,","highlight_start":1,"highlight_end":20},{"text":"        pub tcpi_options: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_flags: u32,","highlight_start":1,"highlight_end":29},{"text":"        pub tcpi_rto: u32,","highlight_start":1,"highlight_end":27},{"text":"        pub tcpi_maxseg: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_snd_ssthresh: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_snd_cwnd: u32,","highlight_start":1,"highlight_end":32},{"text":"        pub tcpi_snd_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_snd_sbbytes: u32,","highlight_start":1,"highlight_end":35},{"text":"        pub tcpi_rcv_wnd: u32,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rttcur: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_srtt: u32,","highlight_start":1,"highlight_end":28},{"text":"        pub tcpi_rttvar: u32,","highlight_start":1,"highlight_end":30},{"text":"        pub tcpi_tfo_cookie_req: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_cookie_rcv: u32,","highlight_start":1,"highlight_end":38},{"text":"        pub tcpi_tfo_syn_loss: u32,","highlight_start":1,"highlight_end":36},{"text":"        pub tcpi_tfo_syn_data_sent: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_syn_data_acked: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_syn_data_rcv: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_cookie_req_rcv: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_sent: u32,","highlight_start":1,"highlight_end":39},{"text":"        pub tcpi_tfo_cookie_invalid: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_cookie_wrong: u32,","highlight_start":1,"highlight_end":40},{"text":"        pub tcpi_tfo_no_cookie_rcv: u32,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_tfo_heuristics_disable: u32,","highlight_start":1,"highlight_end":46},{"text":"        pub tcpi_tfo_send_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_recv_blackhole: u32,","highlight_start":1,"highlight_end":42},{"text":"        pub tcpi_tfo_onebyte_proxy: u32,","highlight_start":1,"highlight_end":41},{"text":"        __pad2: u32,","highlight_start":1,"highlight_end":21},{"text":"        pub tcpi_txpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_txbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_txretransmitbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxpackets: u64,","highlight_start":1,"highlight_end":33},{"text":"        pub tcpi_rxbytes: u64,","highlight_start":1,"highlight_end":31},{"text":"        pub tcpi_rxoutoforderbytes: u64,","highlight_start":1,"highlight_end":41},{"text":"        pub tcpi_rxretransmitpackets: u64,","highlight_start":1,"highlight_end":43},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"s!","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/macros.rs","byte_start":2132,"byte_end":2146,"line_start":64,"line_end":64,"column_start":1,"column_end":15,"is_primary":false,"text":[{"text":"macro_rules! s {","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":8421,"byte_end":8432,"line_start":252,"line_end":252,"column_start":46,"column_end":57,"is_primary":true,"text":[{"text":"        let mut sock_addr: MaybeUninit<libc::sockaddr_nl> = MaybeUninit::uninit();","highlight_start":46,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a struct with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs","byte_start":8421,"byte_end":8432,"line_start":252,"line_end":252,"column_start":46,"column_end":57,"is_primary":true,"text":[{"text":"        let mut sock_addr: MaybeUninit<libc::sockaddr_nl> = MaybeUninit::uninit();","highlight_start":46,"highlight_end":57}],"label":null,"suggested_replacement":"sockaddr_dl","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `sockaddr_nl` in crate `libc`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/socket.rs:252:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mr: MaybeUninit<libc::sockaddr_nl> = MaybeUninit::uninit();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a struct with a similar name exists: `sockaddr_dl`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.152/src/unix/bsd/apple/mod.rs:243:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0ms! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct ip_mreq {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m245\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_multiaddr: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m246\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub imr_interface: in_addr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named struct `sockaddr_dl` defined here\u001b[0m\n\n"}
{"message":"cannot find value `NLA_ALIGNTO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/lib.rs","byte_start":6850,"byte_end":6861,"line_start":210,"line_end":210,"column_start":37,"column_end":48,"is_primary":true,"text":[{"text":"        buffer.write_all(&[0; libc::NLA_ALIGNTO as usize][..num_pad_bytes])?;","highlight_start":37,"highlight_end":48}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLA_ALIGNTO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/lib.rs:210:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   buffer.write_all(&[0; libc::NLA_ALIGNTO as usize][..num_pad_bytes\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"cannot find value `NLA_ALIGNTO` in crate `libc`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/lib.rs","byte_start":7454,"byte_end":7465,"line_start":225,"line_end":225,"column_start":42,"column_end":53,"is_primary":true,"text":[{"text":"        buffer.read_exact(&mut [0; libc::NLA_ALIGNTO as usize][..num_strip_bytes])?;","highlight_start":42,"highlight_end":53}],"label":"not found in `libc`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m: cannot find value `NLA_ALIGNTO` in crate `libc`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/lib.rs:225:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mct(&mut [0; libc::NLA_ALIGNTO as usize][..num_strip_bytes])?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `libc`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7754,"byte_end":7767,"line_start":255,"line_end":255,"column_start":11,"column_end":24,"is_primary":true,"text":[{"text":"    Dst = libc::RTA_DST,","highlight_start":11,"highlight_end":24}],"label":"expected `u16`, found `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":"expected because this is `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"you can convert `#[neli_enum(serialized_type = \"libc::c_ushort\")]` from `u16` to `i32`, matching the type of `libc::RTA_DST`","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7649,"line_start":252,"line_end":252,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"i32::from(","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7697,"byte_end":7697,"line_start":252,"line_end":252,"column_start":49,"column_end":49,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":49,"highlight_end":49}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:255:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[neli_enum(serialized_type = \"libc::c_ushort\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected because this is `u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Dst = libc::RTA_DST,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u16`, found `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert `#[neli_enum(serialized_type = \"libc::c_ushort\")]` from `u16` to `i32`, matching the type of `libc::RTA_DST`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10mi32::from(\u001b[0m\u001b[0m#[neli_enum(serialized_type = \"libc::c_ushort\")]\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7858,"byte_end":7875,"line_start":259,"line_end":259,"column_start":15,"column_end":32,"is_primary":true,"text":[{"text":"    Gateway = libc::RTA_GATEWAY,","highlight_start":15,"highlight_end":32}],"label":"expected `u16`, found `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":"expected because this is `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"you can convert `#[neli_enum(serialized_type = \"libc::c_ushort\")]` from `u16` to `i32`, matching the type of `libc::RTA_GATEWAY`","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7649,"line_start":252,"line_end":252,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"i32::from(","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7697,"byte_end":7697,"line_start":252,"line_end":252,"column_start":49,"column_end":49,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":49,"highlight_end":49}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":7649,"byte_end":7697,"line_start":252,"line_end":252,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"libc::c_ushort\")]","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:259:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[neli_enum(serialized_type = \"libc::c_ushort\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected because this is `u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Gateway = libc::RTA_GATEWAY,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u16`, found `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert `#[neli_enum(serialized_type = \"libc::c_ushort\")]` from `u16` to `i32`, matching the type of `libc::RTA_GATEWAY`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10mi32::from(\u001b[0m\u001b[0m#[neli_enum(serialized_type = \"libc::c_ushort\")]\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12655,"byte_end":12672,"line_start":414,"line_end":414,"column_start":15,"column_end":32,"is_primary":true,"text":[{"text":"    Newaddr = libc::RTM_NEWADDR,","highlight_start":15,"highlight_end":32}],"label":"expected `u16`, found `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":"expected because this is `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"you can convert `#[neli_enum(serialized_type = \"u16\")]` from `u16` to `i32`, matching the type of `libc::RTM_NEWADDR`","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12456,"line_start":408,"line_end":408,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"i32::from(","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12493,"byte_end":12493,"line_start":408,"line_end":408,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:414:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[neli_enum(serialized_type = \"u16\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected because this is `u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Newaddr = libc::RTM_NEWADDR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u16`, found `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert `#[neli_enum(serialized_type = \"u16\")]` from `u16` to `i32`, matching the type of `libc::RTM_NEWADDR`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10mi32::from(\u001b[0m\u001b[0m#[neli_enum(serialized_type = \"u16\")]\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12688,"byte_end":12705,"line_start":415,"line_end":415,"column_start":15,"column_end":32,"is_primary":true,"text":[{"text":"    Deladdr = libc::RTM_DELADDR,","highlight_start":15,"highlight_end":32}],"label":"expected `u16`, found `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":"expected because this is `u16`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"you can convert `#[neli_enum(serialized_type = \"u16\")]` from `u16` to `i32`, matching the type of `libc::RTM_DELADDR`","code":null,"level":"help","spans":[{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12456,"line_start":408,"line_end":408,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"i32::from(","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12493,"byte_end":12493,"line_start":408,"line_end":408,"column_start":38,"column_end":38,"is_primary":true,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":38,"highlight_end":38}],"label":null,"suggested_replacement":")","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs","byte_start":12456,"byte_end":12493,"line_start":408,"line_end":408,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"#[neli_enum(serialized_type = \"u16\")]","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[neli_enum]","def_site_span":{"file_name":"/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-proc-macros-0.1.3/src/lib.rs","byte_start":1048,"byte_end":1117,"line_start":53,"line_end":53,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn neli_enum(attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/chrisfaber/.cargo/registry/src/index.crates.io-6f17d22bba15001f/neli-0.6.4/src/consts/rtnl.rs:415:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[neli_enum(serialized_type = \"u16\")]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected because this is `u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Deladdr = libc::RTM_DELADDR,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u16`, found `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you can convert `#[neli_enum(serialized_type = \"u16\")]` from `u16` to `i32`, matching the type of `libc::RTM_DELADDR`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10mi32::from(\u001b[0m\u001b[0m#[neli_enum(serialized_type = \"u16\")]\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}
{"message":"aborting due to 359 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 359 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0412, E0425.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0412, E0425.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
